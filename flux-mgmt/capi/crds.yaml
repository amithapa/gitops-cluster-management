apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: infrastructure-aws
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: awsclusters.infrastructure.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lSQU1iVmZCSkZ0N2ZTN1k2bWNNRjI4K0l3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNQjRYRFRJd01EWXdPVEF5TlRFeE0xb1hEVEl3TURrdwpOekF5TlRFeE0xb3dGekVWTUJNR0ExVUVDaE1NWTJWeWRDMXRZVzVoWjJWeU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhMbzJ6eStMNmRJVmxFOTRrTkszNFNTYmdOUGoveEFqbWpVaXZZdy8KNHVpVkpYMXFsM2JmSy9ZR0lKZXJGOUhPNFFrbjFRVS9PM1VvS2tXNnlockgrRmJ5Z243MnlsWUVPRi96eUxFcAozOWNqTEY2VXkxM1hvY3hNUWI4YUVEcjdiNmJaTk5kMm9YWUVWcjF5VHlYbzVweURHYkNTMGNWVHl3TmZFem8rCndob2ZQZll6eG16dHJtUWV1Mzk3Um5PbGhEczNvcUM5ek9ZeTlZZlFJSDljQnhNN2Vhc1pMdG05TzBVTitKM3oKWGZ5Z2FhcUZPKzByQ1gzS0xWeCtReER1bC9WVzdmZUpqbXNuQU9iTHUyMFJmWHJJNjgwZjJIVHRPN2kvQkhjQQo2YXkyKys1NkxUOWkyN1JqcmVTTzN2N1lKY3RvRUJuVWVxc0Y4UDFGdFVBQXVRSURBUUFCbzRHV01JR1RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNMR05oY0dFdGQyVmkKYUc5dmF5MXpaWEoyYVdObExtTmhjR2t0ZDJWaWFHOXZheTF6ZVhOMFpXMHVjM1pqZ2pwallYQmhMWGRsWW1odgpiMnN0YzJWeWRtbGpaUzVqWVhCcExYZGxZbWh2YjJzdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTYvNHZ5RlF0SzBscmFSbC9aT3ppUlFCU2QvNjQxcUJ2bGk5bDcKVzhlenQvWDlkWXNJYWNyZW1naTRhNmpDNHhLak9CRlp6Q2RkK1pUQ0tKdSswVStaRDVjbXVockI5MVd2NmpQOAoxL05ZWVRXYTE3M0lpTzBqUVpaOXZYQ0Yra25pMWVEVU5FWHdNcGV3aHpGUVVXQ3JtUkZkQ1JVRytpazlkeHRzCldxaGhpMWZJaWFsZTV6WTF0YmxYQ0FHcFB5UGJnNkY1MmhIczFDU01nUU81QkdTZVczWFRNTitpMVJ0MTZpNG8Ka28zKzkxUXhaRVo5dG5KQm5JZGZMOEUvSDh1SUQyaUl0UmxONXNXVU9ZUVVaREUwMkM2RzJWSFAyZ2JseWJ4UQpUb0QyMmk0aS9ZVWlZVm81OFFmMTNhbi9DTDA0NHFUdDlJY2tlZlVjcS9JQ1BUUnQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capa-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSCluster
      listKind: AWSClusterList
      plural: awsclusters
      singular: awscluster
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSCluster is the Schema for the awsclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of AWSCluster
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior
                  properties:
                    scheme:
                      description: Scheme sets the scheme of the load balancer (defaults
                        to Internet-facing)
                      type: string
                  type: object
                disableBastionHost:
                  description: DisableBastionHost is an optional configuration field
                    to prevent the creation of a bastion host instance.
                  type: boolean
                networkSpec:
                  description: NetworkSpec encapsulates all things related to AWS
                    network.
                  properties:
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability
                              zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same
                              AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet
                            gateway associated with the VPC.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the bastion host.
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster
              properties:
                apiEndpoints:
                  description: APIEndpoints represents the endpoints to communicate
                    with the control plane.
                  items:
                    description: APIEndpoint represents a reachable Kubernetes API
                      endpoint.
                    properties:
                      host:
                        description: The hostname on which the API server is serving.
                        type: string
                      port:
                        description: The port on which the API server is serving.
                        type: integer
                    required:
                    - host
                    - port
                    type: object
                  type: array
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated
                        addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for
                        Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA
                        is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated
                        with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootDeviceSize:
                      description: Specifies size (in Gi) of the root storage device
                      format: int64
                      type: integer
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group
                        IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64
                        encoded and should only be used when running a new instance.
                      type: string
                  required:
                  - id
                  type: object
                network:
                  description: Network encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            idleTimeout:
                              description: IdleTimeout is time that the connection
                                is allowed to be idle (no data has been sent over
                                the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check
                            associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                          - healthyThreshold
                          - interval
                          - target
                          - timeout
                          - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic
                              load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                            - instancePort
                            - instanceProtocol
                            - port
                            - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either
                            internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC
                            attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule
                                for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the
                              security group.
                            type: object
                        required:
                        - id
                        - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: false
    - additionalPrinterColumns:
      - description: Cluster to which this AWSCluster belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: Cluster infrastructure is ready for EC2 instances
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: AWS VPC the cluster is using
        jsonPath: .spec.networkSpec.vpc.id
        name: VPC
        type: string
      - description: API Endpoint
        jsonPath: .status.apiEndpoints[0]
        name: Endpoint
        priority: 1
        type: string
      - description: Bastion IP address for breakglass access
        jsonPath: .status.bastion.publicIp
        name: Bastion IP
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSCluster is the Schema for the awsclusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of AWSCluster
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    enabled:
                      description: Enabled allows this provider to create a bastion
                        host instance with a public ip to access the VPC private network.
                      type: boolean
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration
                    for customizing control plane behavior
                  properties:
                    crossZoneLoadBalancing:
                      description: "CrossZoneLoadBalancing enables the classic ELB
                        cross availability zone balancing. \n With cross-zone load
                        balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances
                        in all enabled Availability Zones. If cross-zone load balancing
                        is disabled, each load balancer node distributes requests
                        evenly across the registered instances in its Availability
                        Zone only. \n Defaults to false."
                      type: boolean
                    scheme:
                      description: Scheme sets the scheme of the load balancer (defaults
                        to Internet-facing)
                      type: string
                  type: object
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system used to look up machine images when a machine does not
                    specify an AMI. When set, this will be used for all cluster machines
                    unless a machine specifies a different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up machine images when a machine does not specify an AMI. When
                    set, this will be used for all cluster machines unless a machine
                    specifies a different ImageLookupOrg. Supports substitutions for
                    {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                    version, respectively. The BaseOS will be the value in ImageLookupBaseOS
                    or ubuntu (the default), and the kubernetes version as defined
                    by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the
                    default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to look up
                    machine images when a machine does not specify an AMI. When set,
                    this will be used for all cluster machines unless a machine specifies
                    a different ImageLookupOrg.
                  type: string
                networkSpec:
                  description: NetworkSpec encapsulates all things related to AWS
                    network.
                  properties:
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability
                              zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when
                              the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference
                              this resource.
                            type: string
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet.
                              A subnet is public when it is associated with a route
                              table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: NatGatewayID is the NAT gateway id associated
                              with the subnet. Ignored unless the subnet is managed
                              by the provider, in which case this is set on the public
                              subnet where the NAT gateway resides. It is then used
                              to determine routes for private subnets in the same
                              AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated
                              with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the
                              resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC. Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should
                            use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet
                            gateway associated with the VPC.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the bastion host. Valid values are empty string (do not use SSH
                    keys), a valid SSH key name, or omitted (use the default SSH key
                    name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated
                        addresses.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for
                        Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA
                        is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated
                        with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance,
                        if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the root storage
                            device. Must be greater than the image root snapshot size
                            or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        type:
                          description: Type is the type of the root volume (e.g. gp2,
                            io1, etc...).
                          type: string
                      required:
                      - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group
                        IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: UserData is the raw data script passed to the instance
                        which is run upon bootstrap. This field must not be base64
                        encoded and should only be used when running a new instance.
                      type: string
                  required:
                  - id
                  type: object
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                network:
                  description: Network encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic
                        load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated
                            with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic
                                load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: IdleTimeout is time that the connection
                                is allowed to be idle (no data has been sent over
                                the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability
                            zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check
                            associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: A Duration represents the elapsed time
                                between two instants as an int64 nanosecond count.
                                The representation limits the largest representable
                                duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                          - healthyThreshold
                          - interval
                          - target
                          - timeout
                          - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners
                            associated with the load balancer. There must be at least
                            one.
                          items:
                            description: ClassicELBListener defines an AWS classic
                              load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols
                                  for a classic load balancer.
                                type: string
                            required:
                            - instancePort
                            - instanceProtocol
                            - port
                            - protocol
                            type: object
                          type: array
                        name:
                          description: The name of the load balancer. It must be unique
                            within the set of load balancers defined in the region.
                            It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either
                            internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups
                            assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC
                            attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load
                            balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated
                              with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule
                                for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access
                                    from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol
                                    type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access
                                    from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the
                              security group.
                            type: object
                        required:
                        - id
                        - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the
                        security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: infrastructure-aws
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: awsmachines.infrastructure.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lSQU1iVmZCSkZ0N2ZTN1k2bWNNRjI4K0l3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNQjRYRFRJd01EWXdPVEF5TlRFeE0xb1hEVEl3TURrdwpOekF5TlRFeE0xb3dGekVWTUJNR0ExVUVDaE1NWTJWeWRDMXRZVzVoWjJWeU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhMbzJ6eStMNmRJVmxFOTRrTkszNFNTYmdOUGoveEFqbWpVaXZZdy8KNHVpVkpYMXFsM2JmSy9ZR0lKZXJGOUhPNFFrbjFRVS9PM1VvS2tXNnlockgrRmJ5Z243MnlsWUVPRi96eUxFcAozOWNqTEY2VXkxM1hvY3hNUWI4YUVEcjdiNmJaTk5kMm9YWUVWcjF5VHlYbzVweURHYkNTMGNWVHl3TmZFem8rCndob2ZQZll6eG16dHJtUWV1Mzk3Um5PbGhEczNvcUM5ek9ZeTlZZlFJSDljQnhNN2Vhc1pMdG05TzBVTitKM3oKWGZ5Z2FhcUZPKzByQ1gzS0xWeCtReER1bC9WVzdmZUpqbXNuQU9iTHUyMFJmWHJJNjgwZjJIVHRPN2kvQkhjQQo2YXkyKys1NkxUOWkyN1JqcmVTTzN2N1lKY3RvRUJuVWVxc0Y4UDFGdFVBQXVRSURBUUFCbzRHV01JR1RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNMR05oY0dFdGQyVmkKYUc5dmF5MXpaWEoyYVdObExtTmhjR2t0ZDJWaWFHOXZheTF6ZVhOMFpXMHVjM1pqZ2pwallYQmhMWGRsWW1odgpiMnN0YzJWeWRtbGpaUzVqWVhCcExYZGxZbWh2YjJzdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTYvNHZ5RlF0SzBscmFSbC9aT3ppUlFCU2QvNjQxcUJ2bGk5bDcKVzhlenQvWDlkWXNJYWNyZW1naTRhNmpDNHhLak9CRlp6Q2RkK1pUQ0tKdSswVStaRDVjbXVockI5MVd2NmpQOAoxL05ZWVRXYTE3M0lpTzBqUVpaOXZYQ0Yra25pMWVEVU5FWHdNcGV3aHpGUVVXQ3JtUkZkQ1JVRytpazlkeHRzCldxaGhpMWZJaWFsZTV6WTF0YmxYQ0FHcFB5UGJnNkY1MmhIczFDU01nUU81QkdTZVczWFRNTitpMVJ0MTZpNG8Ka28zKzkxUXhaRVo5dG5KQm5JZGZMOEUvSDh1SUQyaUl0UmxONXNXVU9ZUVVaREUwMkM2RzJWSFAyZ2JseWJ4UQpUb0QyMmk0aS9ZVWlZVm81OFFmMTNhbi9DTDA0NHFUdDlJY2tlZlVjcS9JQ1BUUnQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capa-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachine
      listKind: AWSMachineList
      plural: awsmachines
      singular: awsmachine
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSMachine is the Schema for the awsmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of AWSMachine
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references
                    to security groups that should be applied to the instance. These
                    security groups would be set in addition to any security groups
                    defined at the cluster level or in the actuator.
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID, ARN, or filters. Only one of ID, ARN or
                      Filters may be specified. Specifying more than one will result
                      in a validation error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider. If both the AWSCluster and the AWSMachine specify the
                    same tag name with different values, the AWSMachine's value takes
                    precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                availabilityZone:
                  description: AvailabilityZone is references the AWS availability
                    zone to use for this instance. If multiple subnets are matched
                    for the availability zone, the first one return is picked.
                  type: string
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    enableSecureSecretsManager:
                      description: enableSecureSecretsManager, when set to true will
                        use AWS Secrets Manager to ensure userdata privacy. A cloud-init
                        boothook shell script is prepended to download the userdata
                        from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name.
                        This is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                  type: object
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get
                    a public IP. Precedence for this setting is as follows: 1. This
                    field if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootDeviceSize:
                  description: RootDeviceSize is the size of the root volume in gigabytes(GB).
                  format: int64
                  type: integer
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the instance.
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this
                    instance. If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                errorMessage:
                  description: "ErrorMessage will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                errorReason:
                  description: "ErrorReason will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    succinct value suitable for machine interpretation. \n This field
                    should not be set for transitive errors that a controller faces
                    that are expected to be fixed automatically over time (like service
                    outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for
                    this machine.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
    - additionalPrinterColumns:
      - description: Cluster to which this AWSMachine belongs
        jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
        name: Cluster
        type: string
      - description: EC2 instance state
        jsonPath: .status.instanceState
        name: State
        type: string
      - description: Machine ready status
        jsonPath: .status.ready
        name: Ready
        type: string
      - description: EC2 instance ID
        jsonPath: .spec.providerID
        name: InstanceID
        type: string
      - description: Machine object which owns with this AWSMachine
        jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
        name: Machine
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSMachine is the Schema for the awsmachines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of AWSMachine
              properties:
                additionalSecurityGroups:
                  description: AdditionalSecurityGroups is an array of references
                    to security groups that should be applied to the instance. These
                    security groups would be set in addition to any security groups
                    defined at the cluster level or in the actuator.
                  items:
                    description: AWSResourceReference is a reference to a specific
                      AWS resource by ID, ARN, or filters. Only one of ID, ARN or
                      Filters may be specified. Specifying more than one will result
                      in a validation error.
                    properties:
                      arn:
                        description: ARN of resource
                        type: string
                      filters:
                        description: 'Filters is a set of key/value pairs used to
                          identify a resource They are applied according to the rules
                          defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: AdditionalTags is an optional set of tags to add to
                    an instance, in addition to the ones added by default by the AWS
                    provider. If both the AWSCluster and the AWSMachine specify the
                    same tag name with different values, the AWSMachine's value takes
                    precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: CloudInit defines options related to the bootstrapping
                    systems where CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: InsecureSkipSecretsManager, when set to true will
                        not use AWS Secrets Manager to ensure privacy of userdata.
                        By default, a cloud-init boothook shell script is prepended
                        to download the userdata from Secrets Manager and additionally
                        delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form
                        the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: SecretPrefix is the prefix for the secret name.
                        This is stored temporarily, and deleted when the machine registers
                        as a node against the workload cluster.
                      type: string
                  type: object
                failureDomain:
                  description: FailureDomain is the failure domain unique identifier
                    this Machine should be attached to, as defined in Cluster API.
                    For this infrastructure provider, the ID is equivalent to an AWS
                    Availability Zone. If multiple subnets are matched for the availability
                    zone, the first one returned is picked.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile
                    to assign to the instance
                  type: string
                imageLookupBaseOS:
                  description: ImageLookupBaseOS is the name of the base operating
                    system to use for image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: 'ImageLookupFormat is the AMI naming format to look
                    up the image for this machine It will be ignored if an explicit
                    AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                    with the base OS and kubernetes version, respectively. The BaseOS
                    will be the value in ImageLookupBaseOS or ubuntu (the default),
                    and the kubernetes version as defined by the packages produced
                    by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                    or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                    will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                    for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                    base OS. See also: https://golang.org/pkg/text/template/'
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of ENIs to associate with
                    the instance. A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by
                    the cloud provider.
                  type: string
                publicIP:
                  description: 'PublicIP specifies whether the instance should get
                    a public IP. Precedence for this setting is as follows: 1. This
                    field if set 2. Cluster/flavor setting 3. Subnet default'
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt
                        the volume. Can be either a KMS key ID or ARN. If Encrypted
                        is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the root storage
                        device. Must be greater than the image root snapshot size
                        or 8 (whichever is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    type:
                      description: Type is the type of the root volume (e.g. gp2,
                        io1, etc...).
                      type: string
                  required:
                  - size
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to
                    the instance. Valid values are empty string (do not use SSH keys),
                    a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: Subnet is a reference to the subnet to use for this
                    instance. If not specified, the cluster subnet will be used.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                uncompressedUserData:
                  description: UncompressedUserData specify whether the user data
                    is gzip-compressed before it is sent to ec2 instance. cloud-init
                    has built-in support for gzip-compressed user data user data stored
                    in aws secret manager is always gzip-compressed.
                  type: boolean
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for
                    this machine.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: infrastructure-aws
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVRENDQWppZ0F3SUJBZ0lSQU1iVmZCSkZ0N2ZTN1k2bWNNRjI4K0l3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQ2hNTVkyVnlkQzF0WVc1aFoyVnlNQjRYRFRJd01EWXdPVEF5TlRFeE0xb1hEVEl3TURrdwpOekF5TlRFeE0xb3dGekVWTUJNR0ExVUVDaE1NWTJWeWRDMXRZVzVoWjJWeU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhMbzJ6eStMNmRJVmxFOTRrTkszNFNTYmdOUGoveEFqbWpVaXZZdy8KNHVpVkpYMXFsM2JmSy9ZR0lKZXJGOUhPNFFrbjFRVS9PM1VvS2tXNnlockgrRmJ5Z243MnlsWUVPRi96eUxFcAozOWNqTEY2VXkxM1hvY3hNUWI4YUVEcjdiNmJaTk5kMm9YWUVWcjF5VHlYbzVweURHYkNTMGNWVHl3TmZFem8rCndob2ZQZll6eG16dHJtUWV1Mzk3Um5PbGhEczNvcUM5ek9ZeTlZZlFJSDljQnhNN2Vhc1pMdG05TzBVTitKM3oKWGZ5Z2FhcUZPKzByQ1gzS0xWeCtReER1bC9WVzdmZUpqbXNuQU9iTHUyMFJmWHJJNjgwZjJIVHRPN2kvQkhjQQo2YXkyKys1NkxUOWkyN1JqcmVTTzN2N1lKY3RvRUJuVWVxc0Y4UDFGdFVBQXVRSURBUUFCbzRHV01JR1RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFNQmdOVkhSTUJBZjhFQWpBQU1ITUdBMVVkRVFSc01HcUNMR05oY0dFdGQyVmkKYUc5dmF5MXpaWEoyYVdObExtTmhjR2t0ZDJWaWFHOXZheTF6ZVhOMFpXMHVjM1pqZ2pwallYQmhMWGRsWW1odgpiMnN0YzJWeWRtbGpaUzVqWVhCcExYZGxZbWh2YjJzdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzCk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTYvNHZ5RlF0SzBscmFSbC9aT3ppUlFCU2QvNjQxcUJ2bGk5bDcKVzhlenQvWDlkWXNJYWNyZW1naTRhNmpDNHhLak9CRlp6Q2RkK1pUQ0tKdSswVStaRDVjbXVockI5MVd2NmpQOAoxL05ZWVRXYTE3M0lpTzBqUVpaOXZYQ0Yra25pMWVEVU5FWHdNcGV3aHpGUVVXQ3JtUkZkQ1JVRytpazlkeHRzCldxaGhpMWZJaWFsZTV6WTF0YmxYQ0FHcFB5UGJnNkY1MmhIczFDU01nUU81QkdTZVczWFRNTitpMVJ0MTZpNG8Ka28zKzkxUXhaRVo5dG5KQm5JZGZMOEUvSDh1SUQyaUl0UmxONXNXVU9ZUVVaREUwMkM2RzJWSFAyZ2JseWJ4UQpUb0QyMmk0aS9ZVWlZVm81OFFmMTNhbi9DTDA0NHFUdDlJY2tlZlVjcS9JQ1BUUnQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capa-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: infrastructure.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: AWSMachineTemplate
      listKind: AWSMachineTemplateList
      plural: awsmachinetemplates
      singular: awsmachinetemplate
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the Schema for the awsmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any
                            security groups defined at the cluster level or in the
                            actuator.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID, ARN, or filters. Only one
                              of ID, ARN or Filters may be specified. Specifying more
                              than one will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which
                            to create the machine instance.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        availabilityZone:
                          description: AvailabilityZone is references the AWS availability
                            zone to use for this instance. If multiple subnets are
                            matched for the availability zone, the first one return
                            is picked.
                          type: string
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            enableSecureSecretsManager:
                              description: enableSecureSecretsManager, when set to
                                true will use AWS Secrets Manager to ensure userdata
                                privacy. A cloud-init boothook shell script is prepended
                                to download the userdata from Secrets Manager and
                                additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when
                                the machine registers as a node against the workload
                                cluster.
                              type: string
                          type: object
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                            Example: m4.xlarge'
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                            get a public IP. Precedence for this setting is as follows:
                            1. This field if set 2. Cluster/flavor setting 3. Subnet
                            default'
                          type: boolean
                        rootDeviceSize:
                          description: RootDeviceSize is the size of the root volume
                            in gigabytes(GB).
                          format: int64
                          type: integer
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance.
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use
                            for this instance. If not specified, the cluster subnet
                            will be used.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: false
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the Schema for the awsmachinetemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed
                    to create am AWSMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior
                        of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: AdditionalSecurityGroups is an array of references
                            to security groups that should be applied to the instance.
                            These security groups would be set in addition to any
                            security groups defined at the cluster level or in the
                            actuator.
                          items:
                            description: AWSResourceReference is a reference to a
                              specific AWS resource by ID, ARN, or filters. Only one
                              of ID, ARN or Filters may be specified. Specifying more
                              than one will result in a validation error.
                            properties:
                              arn:
                                description: ARN of resource
                                type: string
                              filters:
                                description: 'Filters is a set of key/value pairs
                                  used to identify a resource They are applied according
                                  to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                                items:
                                  description: Filter is a filter used to identify
                                    an AWS resource
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names
                                        are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter
                                        values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - name
                                  - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: AdditionalTags is an optional set of tags to
                            add to an instance, in addition to the ones added by default
                            by the AWS provider. If both the AWSCluster and the AWSMachine
                            specify the same tag name with different values, the AWSMachine's
                            value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which
                            to create the machine instance.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: CloudInit defines options related to the bootstrapping
                            systems where CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: InsecureSkipSecretsManager, when set to
                                true will not use AWS Secrets Manager to ensure privacy
                                of userdata. By default, a cloud-init boothook shell
                                script is prepended to download the userdata from
                                Secrets Manager and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used
                                to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: SecretPrefix is the prefix for the secret
                                name. This is stored temporarily, and deleted when
                                the machine registers as a node against the workload
                                cluster.
                              type: string
                          type: object
                        failureDomain:
                          description: FailureDomain is the failure domain unique
                            identifier this Machine should be attached to, as defined
                            in Cluster API. For this infrastructure provider, the
                            ID is equivalent to an AWS Availability Zone. If multiple
                            subnets are matched for the availability zone, the first
                            one returned is picked.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance
                            profile to assign to the instance
                          type: string
                        imageLookupBaseOS:
                          description: ImageLookupBaseOS is the name of the base operating
                            system to use for image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: 'ImageLookupFormat is the AMI naming format
                            to look up the image for this machine It will be ignored
                            if an explicit AMI is set. Supports substitutions for
                            {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes
                            version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes
                            version as defined by the packages produced by kubernetes/release
                            without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3.
                            For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                            will end up searching for AMIs that match the pattern
                            capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting
                            kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to
                            use for image lookup if AMI is not set.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create.
                            Example: m4.xlarge'
                          type: string
                        networkInterfaces:
                          description: NetworkInterfaces is a list of ENIs to associate
                            with the instance. A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified
                            by the cloud provider.
                          type: string
                        publicIP:
                          description: 'PublicIP specifies whether the instance should
                            get a public IP. Precedence for this setting is as follows:
                            1. This field if set 2. Cluster/flavor setting 3. Subnet
                            default'
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options
                            for the root volume
                          properties:
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the root
                                storage device. Must be greater than the image root
                                snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the root volume (e.g.
                                gp2, io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach
                            to the instance. Valid values are empty string (do not
                            use SSH keys), a valid SSH key name, or omitted (use the
                            default SSH key name)
                          type: string
                        subnet:
                          description: Subnet is a reference to the subnet to use
                            for this instance. If not specified, the cluster subnet
                            will be used.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        uncompressedUserData:
                          description: UncompressedUserData specify whether the user
                            data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user
                            data user data stored in aws secret manager is always
                            gzip-compressed.
                          type: boolean
                      type: object
                  required:
                  - spec
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: certificaterequests.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      kind: CertificateRequest
      listKind: CertificateRequestList
      plural: certificaterequests
      shortNames:
      - cr
      - crs
      singular: certificaterequest
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: CertificateRequest is a type to represent a Certificate Signing
            Request
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CertificateRequestSpec defines the desired state of CertificateRequest
              properties:
                csr:
                  description: Byte slice containing the PEM encoded CertificateSigningRequest
                  format: byte
                  type: string
                duration:
                  description: Requested certificate default Duration
                  type: string
                isCA:
                  description: IsCA will mark the resulting certificate as valid for
                    signing. This implies that the 'cert sign' usage is set
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this CertificateRequest.  If
                    the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                    with the given name in the same namespace as the CertificateRequest
                    will be used.  If the 'kind' field is set to 'ClusterIssuer',
                    a ClusterIssuer with the provided name will be used. The 'name'
                    field in this stanza is required at all times. The group field
                    refers to the API group of the issuer which defaults to 'cert-manager.io'
                    if empty.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                usages:
                  description: Usages is the set of x509 actions that are enabled
                    for a given key. Defaults are ('digital signature', 'key encipherment')
                    if empty
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              type: object
            status:
              description: CertificateStatus defines the observed state of CertificateRequest
                and resulting signed certificate.
              properties:
                ca:
                  description: Byte slice containing the PEM encoded certificate authority
                    of the signed certificate.
                  format: byte
                  type: string
                certificate:
                  description: Byte slice containing a PEM encoded signed certificate
                    resulting from the given certificate signing request.
                  format: byte
                  type: string
                conditions:
                  items:
                    description: CertificateRequestCondition contains condition information
                      for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                failureTime:
                  description: FailureTime stores the time that this CertificateRequest
                    failed. This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: certificates.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      kind: Certificate
      listKind: CertificateList
      plural: certificates
      shortNames:
      - cert
      - certs
      singular: certificate
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.conditions[?(@.type=="Ready")].status
        name: Ready
        type: string
      - jsonPath: .spec.secretName
        name: Secret
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.conditions[?(@.type=="Ready")].message
        name: Status
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Certificate is a type to represent a Certificate from ACME
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CertificateSpec defines the desired state of Certificate.
                A valid Certificate requires at least one of a CommonName, DNSName,
                or URISAN to be valid.
              properties:
                commonName:
                  description: CommonName is a common name to be used on the Certificate.
                    The CommonName should have a length of 64 characters or fewer
                    to avoid generating invalid CSRs.
                  type: string
                dnsNames:
                  description: DNSNames is a list of subject alt names to be used
                    on the Certificate.
                  items:
                    type: string
                  type: array
                duration:
                  description: Certificate default Duration
                  type: string
                ipAddresses:
                  description: IPAddresses is a list of IP addresses to be used on
                    the Certificate
                  items:
                    type: string
                  type: array
                isCA:
                  description: IsCA will mark this Certificate as valid for signing.
                    This implies that the 'cert sign' usage is set
                  type: boolean
                issuerRef:
                  description: IssuerRef is a reference to the issuer for this certificate.
                    If the 'kind' field is not set, or set to 'Issuer', an Issuer
                    resource with the given name in the same namespace as the Certificate
                    will be used. If the 'kind' field is set to 'ClusterIssuer', a
                    ClusterIssuer with the provided name will be used. The 'name'
                    field in this stanza is required at all times.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                keyAlgorithm:
                  description: KeyAlgorithm is the private key algorithm of the corresponding
                    private key for this certificate. If provided, allowed values
                    are either "rsa" or "ecdsa" If KeyAlgorithm is specified and KeySize
                    is not provided, key size of 256 will be used for "ecdsa" key
                    algorithm and key size of 2048 will be used for "rsa" key algorithm.
                  enum:
                  - rsa
                  - ecdsa
                  type: string
                keyEncoding:
                  description: KeyEncoding is the private key cryptography standards
                    (PKCS) for this certificate's private key to be encoded in. If
                    provided, allowed values are "pkcs1" and "pkcs8" standing for
                    PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified,
                    then PKCS#1 will be used by default.
                  enum:
                  - pkcs1
                  - pkcs8
                  type: string
                keySize:
                  description: KeySize is the key bit size of the corresponding private
                    key for this certificate. If provided, value must be between 2048
                    and 8192 inclusive when KeyAlgorithm is empty or is set to "rsa",
                    and value must be one of (256, 384, 521) when KeyAlgorithm is
                    set to "ecdsa".
                  type: integer
                organization:
                  description: Organization is the organization to be used on the
                    Certificate
                  items:
                    type: string
                  type: array
                renewBefore:
                  description: Certificate renew before expiration duration
                  type: string
                secretName:
                  description: SecretName is the name of the secret resource to store
                    this secret in
                  type: string
                uriSANs:
                  description: URISANs is a list of URI Subject Alternative Names
                    to be set on this Certificate.
                  items:
                    type: string
                  type: array
                usages:
                  description: Usages is the set of x509 actions that are enabled
                    for a given key. Defaults are ('digital signature', 'key encipherment')
                    if empty
                  items:
                    description: 'KeyUsage specifies valid usage contexts for keys.
                      See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12'
                    enum:
                    - signing
                    - digital signature
                    - content commitment
                    - key encipherment
                    - key agreement
                    - data encipherment
                    - cert sign
                    - crl sign
                    - encipher only
                    - decipher only
                    - any
                    - server auth
                    - client auth
                    - code signing
                    - email protection
                    - s/mime
                    - ipsec end system
                    - ipsec tunnel
                    - ipsec user
                    - timestamping
                    - ocsp signing
                    - microsoft sgc
                    - netscape sgc
                    type: string
                  type: array
              required:
              - issuerRef
              - secretName
              type: object
            status:
              description: CertificateStatus defines the observed state of Certificate
              properties:
                conditions:
                  items:
                    description: CertificateCondition contains condition information
                      for an Certificate.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                lastFailureTime:
                  format: date-time
                  type: string
                notAfter:
                  description: The expiration time of the certificate stored in the
                    secret named by this resource in spec.secretName.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: challenges.acme.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: acme.cert-manager.io
    names:
      kind: Challenge
      listKind: ChallengeList
      plural: challenges
      singular: challenge
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.dnsName
        name: Domain
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an
            ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                authzURL:
                  description: AuthzURL is the URL to the ACME Authorization resource
                    that this challenge is a part of.
                  type: string
                dnsName:
                  description: DNSName is the identifier that this challenge is for,
                    e.g. example.com.
                  type: string
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Challenge. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Challenge
                    will be marked as failed.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                key:
                  description: Key is the ACME challenge key for this challenge
                  type: string
                solver:
                  description: Solver contains the domain solving configuration that
                    should be used to solve this challenge resource. Only **one**
                    of 'config' or 'solver' may be specified, and if both are specified
                    then no action will be performed on the Challenge resource.
                  properties:
                    dns01:
                      properties:
                        acmedns:
                          description: ACMEIssuerDNS01ProviderAcmeDNS is a structure
                            containing the configuration for ACME-DNS servers
                          properties:
                            accountSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            host:
                              type: string
                          required:
                          - accountSecretRef
                          - host
                          type: object
                        akamai:
                          description: ACMEIssuerDNS01ProviderAkamai is a structure
                            containing the DNS configuration for Akamai DNS—Zone Record
                            Management API
                          properties:
                            accessTokenSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            clientSecretSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            clientTokenSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                          - accessTokenSecretRef
                          - clientSecretSecretRef
                          - clientTokenSecretRef
                          - serviceConsumerDomain
                          type: object
                        azuredns:
                          description: ACMEIssuerDNS01ProviderAzureDNS is a structure
                            containing the configuration for Azure DNS
                          properties:
                            clientID:
                              type: string
                            clientSecretSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            environment:
                              enum:
                              - AzurePublicCloud
                              - AzureChinaCloud
                              - AzureGermanCloud
                              - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              type: string
                            resourceGroupName:
                              type: string
                            subscriptionID:
                              type: string
                            tenantID:
                              type: string
                          required:
                          - clientID
                          - clientSecretSecretRef
                          - resourceGroupName
                          - subscriptionID
                          - tenantID
                          type: object
                        clouddns:
                          description: ACMEIssuerDNS01ProviderCloudDNS is a structure
                            containing the DNS configuration for Google Cloud DNS
                          properties:
                            project:
                              type: string
                            serviceAccountSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - project
                          - serviceAccountSecretRef
                          type: object
                        cloudflare:
                          description: ACMEIssuerDNS01ProviderCloudflare is a structure
                            containing the DNS configuration for Cloudflare
                          properties:
                            apiKeySecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                            email:
                              type: string
                          required:
                          - apiKeySecretRef
                          - email
                          type: object
                        cnameStrategy:
                          description: CNAMEStrategy configures how the DNS01 provider
                            should handle CNAME records when found in DNS zones.
                          enum:
                          - None
                          - Follow
                          type: string
                        digitalocean:
                          description: ACMEIssuerDNS01ProviderDigitalOcean is a structure
                            containing the DNS configuration for DigitalOcean Domains
                          properties:
                            tokenSecretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - tokenSecretRef
                          type: object
                        rfc2136:
                          description: ACMEIssuerDNS01ProviderRFC2136 is a structure
                            containing the configuration for RFC2136 DNS
                          properties:
                            nameserver:
                              description: 'The IP address of the DNS supporting RFC2136.
                                Required. Note: FQDN is not a valid value, only IP.'
                              type: string
                            tsigAlgorithm:
                              description: 'The TSIG Algorithm configured in the DNS
                                supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                and ``tsigKeyName`` are defined. Supported values
                                are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``,
                                ``HMACSHA256`` or ``HMACSHA512``.'
                              type: string
                            tsigKeyName:
                              description: The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field
                                is required.
                              type: string
                            tsigSecretSecretRef:
                              description: The name of the secret containing the TSIG
                                value. If ``tsigKeyName`` is defined, this field is
                                required.
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - nameserver
                          type: object
                        route53:
                          description: ACMEIssuerDNS01ProviderRoute53 is a structure
                            containing the Route 53 configuration for AWS
                          properties:
                            accessKeyID:
                              description: 'The AccessKeyID is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              type: string
                            hostedZoneID:
                              description: If set, the provider will manage only this
                                zone in Route53 and will not do an lookup using the
                                route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: Always set the region when using AccessKeyID
                                and SecretAccessKey
                              type: string
                            role:
                              description: Role is a Role ARN which the Route53 provider
                                will assume using either the explicit credentials
                                AccessKeyID/SecretAccessKey or the inferred credentials
                                from environment variables, shared credentials file
                                or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: The SecretAccessKey is used for authentication.
                                If not set we fall-back to using env vars, shared
                                credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - region
                          type: object
                        webhook:
                          description: ACMEIssuerDNS01ProviderWebhook specifies configuration
                            for a webhook DNS01 provider, including where to POST
                            ChallengePayload resources.
                          properties:
                            config:
                              description: Additional configuration that should be
                                passed to the webhook apiserver when challenges are
                                processed. This can contain arbitrary JSON data. Secret
                                values should not be specified in this stanza. If
                                secret values are needed (e.g. credentials for a DNS
                                service), you should use a SecretKeySelector to reference
                                a Secret resource. For details on the schema of this
                                field, consult the webhook provider implementation's
                                documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: The API group name that should be used
                                when POSTing ChallengePayload resources to the webhook
                                apiserver. This should be the same as the GroupName
                                specified in the webhook provider implementation.
                              type: string
                            solverName:
                              description: The name of the solver to use, as defined
                                in the webhook provider implementation. This will
                                typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                          - groupName
                          - solverName
                          type: object
                      type: object
                    http01:
                      description: ACMEChallengeSolverHTTP01 contains configuration
                        detailing how to solve HTTP01 challenges within a Kubernetes
                        cluster. Typically this is accomplished through creating 'routes'
                        of some description that configure ingress controllers to
                        direct traffic to 'solver pods', which are responsible for
                        responding to the ACME server's HTTP requests.
                      properties:
                        ingress:
                          description: The ingress based HTTP01 challenge solver will
                            solve challenges by creating or modifying Ingress resources
                            in order to route requests for '/.well-known/acme-challenge/XYZ'
                            to 'challenge solver' pods that are provisioned by cert-manager
                            for each Challenge to be completed.
                          properties:
                            class:
                              description: The ingress class to use when creating
                                Ingress resources to solve ACME challenges that use
                                this challenge solver. Only one of 'class' or 'name'
                                may be specified.
                              type: string
                            name:
                              description: The name of the ingress resource that should
                                have ACME challenge solving routes inserted into it
                                in order to solve HTTP01 challenges. This is typically
                                used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between
                                external IPs and ingress resources.
                              type: string
                            podTemplate:
                              description: Optional pod template used to configure
                                the ACME challenge solver pods used for HTTP01 challenges
                              properties:
                                metadata:
                                  description: ObjectMeta overrides for the pod used
                                    to solve HTTP01 challenges. Only the 'labels'
                                    and 'annotations' fields may be set. If labels
                                    or annotations overlap with in-built values, the
                                    values here will override the in-built values.
                                  type: object
                                spec:
                                  description: PodSpec defines overrides for the HTTP01
                                    challenge solver pod. Only the 'nodeSelector',
                                    'affinity' and 'tolerations' fields are supported
                                    currently. All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling
                                        constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling
                                            rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node matches the
                                                corresponding matchExpressions; the
                                                node(s) with the highest sum are the
                                                most preferred.
                                              items:
                                                description: An empty preferred scheduling
                                                  term matches all objects with implicit
                                                  weight 0 (i.e. it's a no-op). A
                                                  null preferred scheduling term matches
                                                  no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term,
                                                      associated with the corresponding
                                                      weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  weight:
                                                    description: Weight associated
                                                      with matching the corresponding
                                                      nodeSelectorTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - preference
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to an update), the system may or may
                                                not try to eventually evict the pod
                                                from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of
                                                    node selector terms. The terms
                                                    are ORed.
                                                  items:
                                                    description: A null or empty node
                                                      selector term matches no objects.
                                                      The requirements of them are
                                                      ANDed. The TopologySelectorTerm
                                                      type implements a subset of
                                                      the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's labels.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchFields:
                                                        description: A list of node
                                                          selector requirements by
                                                          node's fields.
                                                        items:
                                                          description: A node selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: The label
                                                                key that the selector
                                                                applies to.
                                                              type: string
                                                            operator:
                                                              description: Represents
                                                                a key's relationship
                                                                to a set of values.
                                                                Valid operators are
                                                                In, NotIn, Exists,
                                                                DoesNotExist. Gt,
                                                                and Lt.
                                                              type: string
                                                            values:
                                                              description: An array
                                                                of string values.
                                                                If the operator is
                                                                In or NotIn, the values
                                                                array must be non-empty.
                                                                If the operator is
                                                                Exists or DoesNotExist,
                                                                the values array must
                                                                be empty. If the operator
                                                                is Gt or Lt, the values
                                                                array must have a
                                                                single element, which
                                                                will be interpreted
                                                                as an integer. This
                                                                array is replaced
                                                                during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                    type: object
                                                  type: array
                                              required:
                                              - nodeSelectorTerms
                                              type: object
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling
                                            rules (e.g. co-locate this pod in the
                                            same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                affinity expressions, etc.), compute
                                                a sum by iterating through the elements
                                                of this field and adding "weight"
                                                to the sum if the node has pods which
                                                matches the corresponding podAffinityTerm;
                                                the node(s) with the highest sum are
                                                the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          which namespaces the labelSelector
                                                          applies to (matches against);
                                                          null or empty list means
                                                          "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                affinity requirements specified by
                                                this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      which namespaces the labelSelector
                                                      applies to (matches against);
                                                      null or empty list means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity
                                            scheduling rules (e.g. avoid putting this
                                            pod in the same node, zone, etc. as some
                                            other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: The scheduler will prefer
                                                to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified
                                                by this field, but it may choose a
                                                node that violates one or more of
                                                the expressions. The node that is
                                                most preferred is the one with the
                                                greatest sum of weights, i.e. for
                                                each node that meets all of the scheduling
                                                requirements (resource request, requiredDuringScheduling
                                                anti-affinity expressions, etc.),
                                                compute a sum by iterating through
                                                the elements of this field and adding
                                                "weight" to the sum if the node has
                                                pods which matches the corresponding
                                                podAffinityTerm; the node(s) with
                                                the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of
                                                  the matched WeightedPodAffinityTerm
                                                  fields are added per-node to find
                                                  the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity
                                                      term, associated with the corresponding
                                                      weight.
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                              required:
                                                              - key
                                                              - operator
                                                              type: object
                                                            type: array
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                        type: object
                                                      namespaces:
                                                        description: namespaces specifies
                                                          which namespaces the labelSelector
                                                          applies to (matches against);
                                                          null or empty list means
                                                          "this pod's namespace"
                                                        items:
                                                          type: string
                                                        type: array
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                                    required:
                                                    - topologyKey
                                                    type: object
                                                  weight:
                                                    description: weight associated
                                                      with matching the corresponding
                                                      podAffinityTerm, in the range
                                                      1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                - podAffinityTerm
                                                - weight
                                                type: object
                                              type: array
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: If the anti-affinity requirements
                                                specified by this field are not met
                                                at scheduling time, the pod will not
                                                be scheduled onto the node. If the
                                                anti-affinity requirements specified
                                                by this field cease to be met at some
                                                point during pod execution (e.g. due
                                                to a pod label update), the system
                                                may or may not try to eventually evict
                                                the pod from its node. When there
                                                are multiple elements, the lists of
                                                nodes corresponding to each podAffinityTerm
                                                are intersected, i.e. all terms must
                                                be satisfied.
                                              items:
                                                description: Defines a set of pods
                                                  (namely those matching the labelSelector
                                                  relative to the given namespace(s))
                                                  that this pod should be co-located
                                                  (affinity) or not co-located (anti-affinity)
                                                  with, where co-located is defined
                                                  as running on a node whose value
                                                  of the label with key <topologyKey>
                                                  matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: A label query over
                                                      a set of resources, in this
                                                      case pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions
                                                          is a list of label selector
                                                          requirements. The requirements
                                                          are ANDed.
                                                        items:
                                                          description: A label selector
                                                            requirement is a selector
                                                            that contains values,
                                                            a key, and an operator
                                                            that relates the key and
                                                            values.
                                                          properties:
                                                            key:
                                                              description: key is
                                                                the label key that
                                                                the selector applies
                                                                to.
                                                              type: string
                                                            operator:
                                                              description: operator
                                                                represents a key's
                                                                relationship to a
                                                                set of values. Valid
                                                                operators are In,
                                                                NotIn, Exists and
                                                                DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: values
                                                                is an array of string
                                                                values. If the operator
                                                                is In or NotIn, the
                                                                values array must
                                                                be non-empty. If the
                                                                operator is Exists
                                                                or DoesNotExist, the
                                                                values array must
                                                                be empty. This array
                                                                is replaced during
                                                                a strategic merge
                                                                patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                          required:
                                                          - key
                                                          - operator
                                                          type: object
                                                        type: array
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: matchLabels is
                                                          a map of {key,value} pairs.
                                                          A single {key,value} in
                                                          the matchLabels map is equivalent
                                                          to an element of matchExpressions,
                                                          whose key field is "key",
                                                          the operator is "In", and
                                                          the values array contains
                                                          only "value". The requirements
                                                          are ANDed.
                                                        type: object
                                                    type: object
                                                  namespaces:
                                                    description: namespaces specifies
                                                      which namespaces the labelSelector
                                                      applies to (matches against);
                                                      null or empty list means "this
                                                      pod's namespace"
                                                    items:
                                                      type: string
                                                    type: array
                                                  topologyKey:
                                                    description: This pod should be
                                                      co-located (affinity) or not
                                                      co-located (anti-affinity) with
                                                      the pods matching the labelSelector
                                                      in the specified namespaces,
                                                      where co-located is defined
                                                      as running on a node whose value
                                                      of the label with key topologyKey
                                                      matches that of any node on
                                                      which any of the selected pods
                                                      is running. Empty topologyKey
                                                      is not allowed.
                                                    type: string
                                                required:
                                                - topologyKey
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: 'NodeSelector is a selector which
                                        must be true for the pod to fit on a node.
                                        Selector which must match a node''s labels
                                        for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      type: object
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: The pod this Toleration is attached
                                          to tolerates any taint that matches the
                                          triple <key,value,effect> using the matching
                                          operator <operator>.
                                        properties:
                                          effect:
                                            description: Effect indicates the taint
                                              effect to match. Empty means match all
                                              taint effects. When specified, allowed
                                              values are NoSchedule, PreferNoSchedule
                                              and NoExecute.
                                            type: string
                                          key:
                                            description: Key is the taint key that
                                              the toleration applies to. Empty means
                                              match all taint keys. If the key is
                                              empty, operator must be Exists; this
                                              combination means to match all values
                                              and all keys.
                                            type: string
                                          operator:
                                            description: Operator represents a key's
                                              relationship to the value. Valid operators
                                              are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for
                                              value, so that a pod can tolerate all
                                              taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: TolerationSeconds represents
                                              the period of time the toleration (which
                                              must be of effect NoExecute, otherwise
                                              this field is ignored) tolerates the
                                              taint. By default, it is not set, which
                                              means tolerate the taint forever (do
                                              not evict). Zero and negative values
                                              will be treated as 0 (evict immediately)
                                              by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: Value is the taint value
                                              the toleration matches to. If the operator
                                              is Exists, the value should be empty,
                                              otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: Optional service type for Kubernetes solver
                                service
                              type: string
                          type: object
                      type: object
                    selector:
                      description: Selector selects a set of DNSNames on the Certificate
                        resource that should be solved using this challenge solver.
                      properties:
                        dnsNames:
                          description: List of DNSNames that this solver will be used
                            to solve. If specified and a match is found, a dnsNames
                            selector will take precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: List of DNSZones that this solver will be used
                            to solve. The most specific DNS zone match specified here
                            will take precedence over other DNS zone matches, so a
                            solver specifying sys.example.com will be selected over
                            one specifying example.com for the domain www.sys.example.com.
                            If multiple solvers match with the same dnsZones value,
                            the solver with the most matching labels in matchLabels
                            will be selected. If neither has more matches, the solver
                            defined earlier in the list will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: A label selector that is used to refine the
                            set of certificate's that this challenge solver will apply
                            to.
                          type: object
                      type: object
                  type: object
                token:
                  description: Token is the ACME challenge token for this challenge.
                  type: string
                type:
                  description: Type is the type of ACME challenge this resource represents,
                    e.g. "dns01" or "http01"
                  type: string
                url:
                  description: URL is the URL of the ACME Challenge resource for this
                    challenge. This can be used to lookup details about the status
                    of this challenge.
                  type: string
                wildcard:
                  description: Wildcard will be true if this challenge is for a wildcard
                    identifier, for example '*.example.com'
                  type: boolean
              required:
              - authzURL
              - dnsName
              - issuerRef
              - key
              - token
              - type
              - url
              type: object
            status:
              properties:
                presented:
                  description: Presented will be set to true if the challenge values
                    for this challenge are currently 'presented'. This *does not*
                    imply the self check is passing. Only that the values have been
                    'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration
                    has been configured).
                  type: boolean
                processing:
                  description: Processing is used to denote whether this challenge
                    should be processed or not. This field will only be set to true
                    by the 'scheduling' component. It will only be set to false by
                    the 'challenges' controller, after the challenge has reached a
                    final state or timed out. If this field is set to false, the challenge
                    controller will not take any more action.
                  type: boolean
                reason:
                  description: Reason contains human readable information on why the
                    Challenge is in the current state.
                  type: string
                state:
                  description: State contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: clusterissuers.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      kind: ClusterIssuer
      listKind: ClusterIssuerList
      plural: clusterissuers
      singular: clusterissuer
    preserveUnknownFields: true
    scope: Cluster
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IssuerSpec is the specification of an Issuer. This includes
                any configuration required for the issuer.
              properties:
                acme:
                  description: ACMEIssuer contains the specification for an ACME issuer
                  properties:
                    email:
                      description: Email is the email for this account
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a secret containing the
                        private key for this user account.
                      properties:
                        key:
                          description: The key of the secret to select from. Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: Server is the ACME server URL
                      type: string
                    skipTLSVerify:
                      description: If true, skip verifying the ACME server TLS certificate
                      type: boolean
                    solvers:
                      description: Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                      items:
                        properties:
                          dns01:
                            properties:
                              acmedns:
                                description: ACMEIssuerDNS01ProviderAcmeDNS is a structure
                                  containing the configuration for ACME-DNS servers
                                properties:
                                  accountSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: ACMEIssuerDNS01ProviderAkamai is a structure
                                  containing the DNS configuration for Akamai DNS—Zone
                                  Record Management API
                                properties:
                                  accessTokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: ACMEIssuerDNS01ProviderAzureDNS is a
                                  structure containing the configuration for Azure
                                  DNS
                                properties:
                                  clientID:
                                    type: string
                                  clientSecretSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    type: string
                                required:
                                - clientID
                                - clientSecretSecretRef
                                - resourceGroupName
                                - subscriptionID
                                - tenantID
                                type: object
                              clouddns:
                                description: ACMEIssuerDNS01ProviderCloudDNS is a
                                  structure containing the DNS configuration for Google
                                  Cloud DNS
                                properties:
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                - serviceAccountSecretRef
                                type: object
                              cloudflare:
                                description: ACMEIssuerDNS01ProviderCloudflare is
                                  a structure containing the DNS configuration for
                                  Cloudflare
                                properties:
                                  apiKeySecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    type: string
                                required:
                                - apiKeySecretRef
                                - email
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: ACMEIssuerDNS01ProviderDigitalOcean is
                                  a structure containing the DNS configuration for
                                  DigitalOcean Domains
                                properties:
                                  tokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: ACMEIssuerDNS01ProviderRFC2136 is a structure
                                  containing the configuration for RFC2136 DNS
                                properties:
                                  nameserver:
                                    description: 'The IP address of the DNS supporting
                                      RFC2136. Required. Note: FQDN is not a valid
                                      value, only IP.'
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: ACMEIssuerDNS01ProviderRoute53 is a structure
                                  containing the Route 53 configuration for AWS
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: ACMEIssuerDNS01ProviderWebhook specifies
                                  configuration for a webhook DNS01 provider, including
                                  where to POST ChallengePayload resources.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: ACMEChallengeSolverHTTP01 contains configuration
                              detailing how to solve HTTP01 challenges within a Kubernetes
                              cluster. Typically this is accomplished through creating
                              'routes' of some description that configure ingress
                              controllers to direct traffic to 'solver pods', which
                              are responsible for responding to the ACME server's
                              HTTP requests.
                            properties:
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'nodeSelector', 'affinity' and 'tolerations'
                                          fields are supported currently. All other
                                          fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  properties:
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  type: object
                vault:
                  properties:
                    auth:
                      description: Vault authentication
                      properties:
                        appRole:
                          description: This Secret contains a AppRole and Secret
                          properties:
                            path:
                              description: Where the authentication path is mounted
                                in Vault.
                              type: string
                            roleId:
                              type: string
                            secretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: This contains a Role and Secret with a ServiceAccount
                            token to authenticate with vault.
                          properties:
                            mountPath:
                              description: The value here will be used as part of
                                the path used when authenticating with vault, for
                                example if you set a value of "foo", the path used
                                will be `/v1/auth/foo/login`. If unspecified, the
                                default value "kubernetes" will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: This Secret contains the Vault token key
                          properties:
                            key:
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: Base64 encoded CA bundle to validate Vault server
                        certificate. Only used if the Server URL is using HTTPS protocol.
                        This parameter is ignored for plain HTTP protocol connection.
                        If not set the system root certificates are used to validate
                        the TLS connection.
                      format: byte
                      type: string
                    path:
                      description: Vault URL path to the certificate role
                      type: string
                    server:
                      description: Server is the vault connection address
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: VenafiIssuer describes issuer configuration details
                    for Venafi Cloud.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud
                          type: string
                      required:
                      - apiTokenSecretRef
                      - url
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certifiate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for the Venafi TPP instance
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: IssuerStatus contains status information about an Issuer
              properties:
                acme:
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: clusters.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lRWDVHTXVGbWNQVjZSVEZ1UnJvRzJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNFdoY05NakF3T1RBMwpNREkxTVRBNFdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEw1UGRQT3ViUW1rdTNWWGxveExXaHh0VTBONmlsSzRZY1JwdXI0WUMKTkdRZ09NMnZoNE5wUHpzeTRjeDFUOVQyaW1rSEN4OEJkTVdIVmFtbVVqelh1R1JETTJ2QzhzeWtGRkFrbkdKbwp4NTRqZlBsRWEwMTZBQkxNTnZDZldhWUVoRk9XQWtWQW5hSFBPUi82c0ZrakxHK2FydlhtOUQxbGZRL29TMkZxClBKSDFWTnhyL3NJa2lUOEt0OWxuQThWNk5NTm14aUhPTDJxN281eEEyc2VPazJDVnA4NDhzeHBZb2pVa0hrRkYKTzljNmtVZ3JmYk05R0NjNTFtUEVxRW1rd2thSTdLZlR5NUFVanVoektTcEJFR1VxbXB6Vmd3VDBrSnM2MmFpLwpyaURxeVpHQklBNTVvT1JkUjFqZ2ZaNS9UNGpvQ2g5d1M0WC9GQUFJWGhDMUFnTUJBQUdqZ1pZd2daTXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2N3WURWUjBSQkd3d2FvSXNZMkZ3YVMxM1pXSm8KYjI5ckxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU9DT21OaGNHa3RkMlZpYUc5dgpheTF6WlhKMmFXTmxMbU5oY0drdGQyVmlhRzl2YXkxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJdmVLKzBjaEhHanV3M0FzT2VFV2dWMmpCZ2swRnpsZUxveitCLzUKL3JqMXFTUzl6eHhDRFpwdWlQeW5ncWxMekN6RmtrU3lGVzJHWmZQR2FWTUpxYjBieFdqdDNFWnZua3VXdlhCVAozblcxWlp5MmJvczQzZ3dJazl0TTMwVDU4ZSt6cEVzRlJCdXpIUm9Td1Z3amdseXRvSmsydm1WN2loUkJLQ1RMCldlZml5RUdpUDRXN0VvMUlxQkxzN0dKTE1qeG13Nm5XUEFQNUN4NkFXL2h0T1pwSGVmWnJTSFdkd0F4b0xiaHoKcjQwdFNoYm96cnZCYklaL3A2VVNtV3FvMG5IV0FJWVBLS1A5eXBGSnBVYUVoUFhmdG80YkNkK05lZkUvajZOKwo3M2EzUVRZRzh1UkdxZkdOdUQzcEhCTlNod3hFYmFWczVXaUlMMjY1WjlIcTJZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capi-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Cluster
      listKind: ClusterList
      plural: clusters
      shortNames:
      - cl
      singular: cluster
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
        jsonPath: .status.phase
        name: Phase
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster
              properties:
                clusterNetwork:
                  description: Cluster network configuration
                  properties:
                    apiServerPort:
                      description: APIServerPort specifies the port the API Server
                        should bind to. Defaults to 6443.
                      format: int32
                      type: integer
                    pods:
                      description: The network ranges from which Pod networks are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                    serviceDomain:
                      description: Domain name for services.
                      type: string
                    services:
                      description: The network ranges from which service VIPs are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                  type: object
                infrastructureRef:
                  description: InfrastructureRef is a reference to a provider-specific
                    resource that holds the details for provisioning infrastructure
                    for a cluster in said provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster
              properties:
                apiEndpoints:
                  description: APIEndpoints represents the endpoints to communicate
                    with the control plane.
                  items:
                    description: APIEndpoint represents a reachable Kubernetes API
                      endpoint.
                    properties:
                      host:
                        description: The hostname on which the API server is serving.
                        type: string
                      port:
                        description: The port on which the API server is serving.
                        type: integer
                    required:
                    - host
                    - port
                    type: object
                  type: array
                controlPlaneInitialized:
                  description: ControlPlaneInitialized defines if the control plane
                    has been initialized.
                  type: boolean
                errorMessage:
                  description: ErrorMessage indicates that there is a problem reconciling
                    the state, and will be set to a descriptive error message.
                  type: string
                errorReason:
                  description: ErrorReason indicates that there is a problem reconciling
                    the state, and will be set to a token value suitable for programmatic
                    interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: false
    - additionalPrinterColumns:
      - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
        jsonPath: .status.phase
        name: Phase
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec defines the desired state of Cluster
              properties:
                clusterNetwork:
                  description: Cluster network configuration.
                  properties:
                    apiServerPort:
                      description: APIServerPort specifies the port the API Server
                        should bind to. Defaults to 6443.
                      format: int32
                      type: integer
                    pods:
                      description: The network ranges from which Pod networks are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                    serviceDomain:
                      description: Domain name for services.
                      type: string
                    services:
                      description: The network ranges from which service VIPs are
                        allocated.
                      properties:
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                      required:
                      - cidrBlocks
                      type: object
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to
                    communicate with the control plane.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                controlPlaneRef:
                  description: ControlPlaneRef is an optional reference to a provider-specific
                    resource that holds the details for provisioning the Control Plane
                    for a Cluster.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                infrastructureRef:
                  description: InfrastructureRef is a reference to a provider-specific
                    resource that holds the details for provisioning infrastructure
                    for a cluster in said provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                paused:
                  description: Paused can be used to prevent controllers from processing
                    the Cluster and all its associated objects.
                  type: boolean
              type: object
            status:
              description: ClusterStatus defines the observed state of Cluster
              properties:
                controlPlaneInitialized:
                  description: ControlPlaneInitialized defines if the control plane
                    has been initialized.
                  type: boolean
                controlPlaneReady:
                  description: ControlPlaneReady defines if the control plane is ready.
                  type: boolean
                failureDomains:
                  additionalProperties:
                    description: FailureDomainSpec is the Schema for Cluster API failure
                      domains. It allows controllers to understand how many failure
                      domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is a free form map of attributes an
                          infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: ControlPlane determines if this failure domain
                          is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of failure domain objects
                    synced from the infrastructure provider.
                  type: object
                failureMessage:
                  description: FailureMessage indicates that there is a fatal problem
                    reconciling the state, and will be set to a descriptive error
                    message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a fatal problem
                    reconciling the state, and will be set to a token value suitable
                    for programmatic interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: issuers.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: cert-manager.io
    names:
      kind: Issuer
      listKind: IssuerList
      plural: issuers
      singular: issuer
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: IssuerSpec is the specification of an Issuer. This includes
                any configuration required for the issuer.
              properties:
                acme:
                  description: ACMEIssuer contains the specification for an ACME issuer
                  properties:
                    email:
                      description: Email is the email for this account
                      type: string
                    privateKeySecretRef:
                      description: PrivateKey is the name of a secret containing the
                        private key for this user account.
                      properties:
                        key:
                          description: The key of the secret to select from. Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      required:
                      - name
                      type: object
                    server:
                      description: Server is the ACME server URL
                      type: string
                    skipTLSVerify:
                      description: If true, skip verifying the ACME server TLS certificate
                      type: boolean
                    solvers:
                      description: Solvers is a list of challenge solvers that will
                        be used to solve ACME challenges for the matching domains.
                      items:
                        properties:
                          dns01:
                            properties:
                              acmedns:
                                description: ACMEIssuerDNS01ProviderAcmeDNS is a structure
                                  containing the configuration for ACME-DNS servers
                                properties:
                                  accountSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                - accountSecretRef
                                - host
                                type: object
                              akamai:
                                description: ACMEIssuerDNS01ProviderAkamai is a structure
                                  containing the DNS configuration for Akamai DNS—Zone
                                  Record Management API
                                properties:
                                  accessTokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientSecretSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  clientTokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                - accessTokenSecretRef
                                - clientSecretSecretRef
                                - clientTokenSecretRef
                                - serviceConsumerDomain
                                type: object
                              azuredns:
                                description: ACMEIssuerDNS01ProviderAzureDNS is a
                                  structure containing the configuration for Azure
                                  DNS
                                properties:
                                  clientID:
                                    type: string
                                  clientSecretSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  environment:
                                    enum:
                                    - AzurePublicCloud
                                    - AzureChinaCloud
                                    - AzureGermanCloud
                                    - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    type: string
                                  resourceGroupName:
                                    type: string
                                  subscriptionID:
                                    type: string
                                  tenantID:
                                    type: string
                                required:
                                - clientID
                                - clientSecretSecretRef
                                - resourceGroupName
                                - subscriptionID
                                - tenantID
                                type: object
                              clouddns:
                                description: ACMEIssuerDNS01ProviderCloudDNS is a
                                  structure containing the DNS configuration for Google
                                  Cloud DNS
                                properties:
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - project
                                - serviceAccountSecretRef
                                type: object
                              cloudflare:
                                description: ACMEIssuerDNS01ProviderCloudflare is
                                  a structure containing the DNS configuration for
                                  Cloudflare
                                properties:
                                  apiKeySecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  email:
                                    type: string
                                required:
                                - apiKeySecretRef
                                - email
                                type: object
                              cnameStrategy:
                                description: CNAMEStrategy configures how the DNS01
                                  provider should handle CNAME records when found
                                  in DNS zones.
                                enum:
                                - None
                                - Follow
                                type: string
                              digitalocean:
                                description: ACMEIssuerDNS01ProviderDigitalOcean is
                                  a structure containing the DNS configuration for
                                  DigitalOcean Domains
                                properties:
                                  tokenSecretRef:
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - tokenSecretRef
                                type: object
                              rfc2136:
                                description: ACMEIssuerDNS01ProviderRFC2136 is a structure
                                  containing the configuration for RFC2136 DNS
                                properties:
                                  nameserver:
                                    description: 'The IP address of the DNS supporting
                                      RFC2136. Required. Note: FQDN is not a valid
                                      value, only IP.'
                                    type: string
                                  tsigAlgorithm:
                                    description: 'The TSIG Algorithm configured in
                                      the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef``
                                      and ``tsigKeyName`` are defined. Supported values
                                      are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.'
                                    type: string
                                  tsigKeyName:
                                    description: The TSIG Key name configured in the
                                      DNS. If ``tsigSecretSecretRef`` is defined,
                                      this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: The name of the secret containing
                                      the TSIG value. If ``tsigKeyName`` is defined,
                                      this field is required.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - nameserver
                                type: object
                              route53:
                                description: ACMEIssuerDNS01ProviderRoute53 is a structure
                                  containing the Route 53 configuration for AWS
                                properties:
                                  accessKeyID:
                                    description: 'The AccessKeyID is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata see:
                                      https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    type: string
                                  hostedZoneID:
                                    description: If set, the provider will manage
                                      only this zone in Route53 and will not do an
                                      lookup using the route53:ListHostedZonesByName
                                      api call.
                                    type: string
                                  region:
                                    description: Always set the region when using
                                      AccessKeyID and SecretAccessKey
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the Route53
                                      provider will assume using either the explicit
                                      credentials AccessKeyID/SecretAccessKey or the
                                      inferred credentials from environment variables,
                                      shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication.
                                      If not set we fall-back to using env vars, shared
                                      credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from. Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    required:
                                    - name
                                    type: object
                                required:
                                - region
                                type: object
                              webhook:
                                description: ACMEIssuerDNS01ProviderWebhook specifies
                                  configuration for a webhook DNS01 provider, including
                                  where to POST ChallengePayload resources.
                                properties:
                                  config:
                                    description: Additional configuration that should
                                      be passed to the webhook apiserver when challenges
                                      are processed. This can contain arbitrary JSON
                                      data. Secret values should not be specified
                                      in this stanza. If secret values are needed
                                      (e.g. credentials for a DNS service), you should
                                      use a SecretKeySelector to reference a Secret
                                      resource. For details on the schema of this
                                      field, consult the webhook provider implementation's
                                      documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: The API group name that should be
                                      used when POSTing ChallengePayload resources
                                      to the webhook apiserver. This should be the
                                      same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: The name of the solver to use, as
                                      defined in the webhook provider implementation.
                                      This will typically be the name of the provider,
                                      e.g. 'cloudflare'.
                                    type: string
                                required:
                                - groupName
                                - solverName
                                type: object
                            type: object
                          http01:
                            description: ACMEChallengeSolverHTTP01 contains configuration
                              detailing how to solve HTTP01 challenges within a Kubernetes
                              cluster. Typically this is accomplished through creating
                              'routes' of some description that configure ingress
                              controllers to direct traffic to 'solver pods', which
                              are responsible for responding to the ACME server's
                              HTTP requests.
                            properties:
                              ingress:
                                description: The ingress based HTTP01 challenge solver
                                  will solve challenges by creating or modifying Ingress
                                  resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                                  to 'challenge solver' pods that are provisioned
                                  by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: The ingress class to use when creating
                                      Ingress resources to solve ACME challenges that
                                      use this challenge solver. Only one of 'class'
                                      or 'name' may be specified.
                                    type: string
                                  name:
                                    description: The name of the ingress resource
                                      that should have ACME challenge solving routes
                                      inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress
                                      controllers like ingress-gce, which maintains
                                      a 1:1 mapping between external IPs and ingress
                                      resources.
                                    type: string
                                  podTemplate:
                                    description: Optional pod template used to configure
                                      the ACME challenge solver pods used for HTTP01
                                      challenges
                                    properties:
                                      metadata:
                                        description: ObjectMeta overrides for the
                                          pod used to solve HTTP01 challenges. Only
                                          the 'labels' and 'annotations' fields may
                                          be set. If labels or annotations overlap
                                          with in-built values, the values here will
                                          override the in-built values.
                                        type: object
                                      spec:
                                        description: PodSpec defines overrides for
                                          the HTTP01 challenge solver pod. Only the
                                          'nodeSelector', 'affinity' and 'tolerations'
                                          fields are supported currently. All other
                                          fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling
                                              constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity
                                                  scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      matches the corresponding matchExpressions;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: An empty preferred
                                                        scheduling term matches all
                                                        objects with implicit weight
                                                        0 (i.e. it's a no-op). A null
                                                        preferred scheduling term
                                                        matches no objects (i.e. is
                                                        also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector
                                                            term, associated with
                                                            the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        weight:
                                                          description: Weight associated
                                                            with matching the corresponding
                                                            nodeSelectorTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - preference
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to an update), the system
                                                      may or may not try to eventually
                                                      evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list
                                                          of node selector terms.
                                                          The terms are ORed.
                                                        items:
                                                          description: A null or empty
                                                            node selector term matches
                                                            no objects. The requirements
                                                            of them are ANDed. The
                                                            TopologySelectorTerm type
                                                            implements a subset of
                                                            the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's labels.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchFields:
                                                              description: A list
                                                                of node selector requirements
                                                                by node's fields.
                                                              items:
                                                                description: A node
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: The
                                                                      label key that
                                                                      the selector
                                                                      applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: Represents
                                                                      a key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists,
                                                                      DoesNotExist.
                                                                      Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: An
                                                                      array of string
                                                                      values. If the
                                                                      operator is
                                                                      In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      If the operator
                                                                      is Gt or Lt,
                                                                      the values array
                                                                      must have a
                                                                      single element,
                                                                      which will be
                                                                      interpreted
                                                                      as an integer.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                          type: object
                                                        type: array
                                                    required:
                                                    - nodeSelectorTerms
                                                    type: object
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity
                                                  scheduling rules (e.g. co-locate
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the affinity expressions
                                                      specified by this field, but
                                                      it may choose a node that violates
                                                      one or more of the expressions.
                                                      The node that is most preferred
                                                      is the one with the greatest
                                                      sum of weights, i.e. for each
                                                      node that meets all of the scheduling
                                                      requirements (resource request,
                                                      requiredDuringScheduling affinity
                                                      expressions, etc.), compute
                                                      a sum by iterating through the
                                                      elements of this field and adding
                                                      "weight" to the sum if the node
                                                      has pods which matches the corresponding
                                                      podAffinityTerm; the node(s)
                                                      with the highest sum are the
                                                      most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the affinity requirements
                                                      specified by this field are
                                                      not met at scheduling time,
                                                      the pod will not be scheduled
                                                      onto the node. If the affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity
                                                  scheduling rules (e.g. avoid putting
                                                  this pod in the same node, zone,
                                                  etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: The scheduler will
                                                      prefer to schedule pods to nodes
                                                      that satisfy the anti-affinity
                                                      expressions specified by this
                                                      field, but it may choose a node
                                                      that violates one or more of
                                                      the expressions. The node that
                                                      is most preferred is the one
                                                      with the greatest sum of weights,
                                                      i.e. for each node that meets
                                                      all of the scheduling requirements
                                                      (resource request, requiredDuringScheduling
                                                      anti-affinity expressions, etc.),
                                                      compute a sum by iterating through
                                                      the elements of this field and
                                                      adding "weight" to the sum if
                                                      the node has pods which matches
                                                      the corresponding podAffinityTerm;
                                                      the node(s) with the highest
                                                      sum are the most preferred.
                                                    items:
                                                      description: The weights of
                                                        all of the matched WeightedPodAffinityTerm
                                                        fields are added per-node
                                                        to find the most preferred
                                                        node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A
                                                            pod affinity term, associated
                                                            with the corresponding
                                                            weight.
                                                          properties:
                                                            labelSelector:
                                                              description: A label
                                                                query over a set of
                                                                resources, in this
                                                                case pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions
                                                                    is a list of label
                                                                    selector requirements.
                                                                    The requirements
                                                                    are ANDed.
                                                                  items:
                                                                    description: A
                                                                      label selector
                                                                      requirement
                                                                      is a selector
                                                                      that contains
                                                                      values, a key,
                                                                      and an operator
                                                                      that relates
                                                                      the key and
                                                                      values.
                                                                    properties:
                                                                      key:
                                                                        description: key
                                                                          is the label
                                                                          key that
                                                                          the selector
                                                                          applies
                                                                          to.
                                                                        type: string
                                                                      operator:
                                                                        description: operator
                                                                          represents
                                                                          a key's
                                                                          relationship
                                                                          to a set
                                                                          of values.
                                                                          Valid operators
                                                                          are In,
                                                                          NotIn, Exists
                                                                          and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: values
                                                                          is an array
                                                                          of string
                                                                          values.
                                                                          If the operator
                                                                          is In or
                                                                          NotIn, the
                                                                          values array
                                                                          must be
                                                                          non-empty.
                                                                          If the operator
                                                                          is Exists
                                                                          or DoesNotExist,
                                                                          the values
                                                                          array must
                                                                          be empty.
                                                                          This array
                                                                          is replaced
                                                                          during a
                                                                          strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                    required:
                                                                    - key
                                                                    - operator
                                                                    type: object
                                                                  type: array
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: matchLabels
                                                                    is a map of {key,value}
                                                                    pairs. A single
                                                                    {key,value} in
                                                                    the matchLabels
                                                                    map is equivalent
                                                                    to an element
                                                                    of matchExpressions,
                                                                    whose key field
                                                                    is "key", the
                                                                    operator is "In",
                                                                    and the values
                                                                    array contains
                                                                    only "value".
                                                                    The requirements
                                                                    are ANDed.
                                                                  type: object
                                                              type: object
                                                            namespaces:
                                                              description: namespaces
                                                                specifies which namespaces
                                                                the labelSelector
                                                                applies to (matches
                                                                against); null or
                                                                empty list means "this
                                                                pod's namespace"
                                                              items:
                                                                type: string
                                                              type: array
                                                            topologyKey:
                                                              description: This pod
                                                                should be co-located
                                                                (affinity) or not
                                                                co-located (anti-affinity)
                                                                with the pods matching
                                                                the labelSelector
                                                                in the specified namespaces,
                                                                where co-located is
                                                                defined as running
                                                                on a node whose value
                                                                of the label with
                                                                key topologyKey matches
                                                                that of any node on
                                                                which any of the selected
                                                                pods is running. Empty
                                                                topologyKey is not
                                                                allowed.
                                                              type: string
                                                          required:
                                                          - topologyKey
                                                          type: object
                                                        weight:
                                                          description: weight associated
                                                            with matching the corresponding
                                                            podAffinityTerm, in the
                                                            range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                      - podAffinityTerm
                                                      - weight
                                                      type: object
                                                    type: array
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: If the anti-affinity
                                                      requirements specified by this
                                                      field are not met at scheduling
                                                      time, the pod will not be scheduled
                                                      onto the node. If the anti-affinity
                                                      requirements specified by this
                                                      field cease to be met at some
                                                      point during pod execution (e.g.
                                                      due to a pod label update),
                                                      the system may or may not try
                                                      to eventually evict the pod
                                                      from its node. When there are
                                                      multiple elements, the lists
                                                      of nodes corresponding to each
                                                      podAffinityTerm are intersected,
                                                      i.e. all terms must be satisfied.
                                                    items:
                                                      description: Defines a set of
                                                        pods (namely those matching
                                                        the labelSelector relative
                                                        to the given namespace(s))
                                                        that this pod should be co-located
                                                        (affinity) or not co-located
                                                        (anti-affinity) with, where
                                                        co-located is defined as running
                                                        on a node whose value of the
                                                        label with key <topologyKey>
                                                        matches that of any node on
                                                        which a pod of the set of
                                                        pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                    type: string
                                                                  operator:
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                required:
                                                                - key
                                                                - operator
                                                                type: object
                                                              type: array
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                              type: object
                                                          type: object
                                                        namespaces:
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                          type: array
                                                        topologyKey:
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                          type: string
                                                      required:
                                                      - topologyKey
                                                      type: object
                                                    type: array
                                                type: object
                                            type: object
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: 'NodeSelector is a selector
                                              which must be true for the pod to fit
                                              on a node. Selector which must match
                                              a node''s labels for the pod to be scheduled
                                              on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                            type: object
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: The pod this Toleration
                                                is attached to tolerates any taint
                                                that matches the triple <key,value,effect>
                                                using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: Effect indicates the
                                                    taint effect to match. Empty means
                                                    match all taint effects. When
                                                    specified, allowed values are
                                                    NoSchedule, PreferNoSchedule and
                                                    NoExecute.
                                                  type: string
                                                key:
                                                  description: Key is the taint key
                                                    that the toleration applies to.
                                                    Empty means match all taint keys.
                                                    If the key is empty, operator
                                                    must be Exists; this combination
                                                    means to match all values and
                                                    all keys.
                                                  type: string
                                                operator:
                                                  description: Operator represents
                                                    a key's relationship to the value.
                                                    Valid operators are Exists and
                                                    Equal. Defaults to Equal. Exists
                                                    is equivalent to wildcard for
                                                    value, so that a pod can tolerate
                                                    all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: TolerationSeconds represents
                                                    the period of time the toleration
                                                    (which must be of effect NoExecute,
                                                    otherwise this field is ignored)
                                                    tolerates the taint. By default,
                                                    it is not set, which means tolerate
                                                    the taint forever (do not evict).
                                                    Zero and negative values will
                                                    be treated as 0 (evict immediately)
                                                    by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: Value is the taint
                                                    value the toleration matches to.
                                                    If the operator is Exists, the
                                                    value should be empty, otherwise
                                                    just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: Optional service type for Kubernetes
                                      solver service
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: Selector selects a set of DNSNames on the
                              Certificate resource that should be solved using this
                              challenge solver.
                            properties:
                              dnsNames:
                                description: List of DNSNames that this solver will
                                  be used to solve. If specified and a match is found,
                                  a dnsNames selector will take precedence over a
                                  dnsZones selector. If multiple solvers match with
                                  the same dnsNames value, the solver with the most
                                  matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined
                                  earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: List of DNSZones that this solver will
                                  be used to solve. The most specific DNS zone match
                                  specified here will take precedence over other DNS
                                  zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com
                                  for the domain www.sys.example.com. If multiple
                                  solvers match with the same dnsZones value, the
                                  solver with the most matching labels in matchLabels
                                  will be selected. If neither has more matches, the
                                  solver defined earlier in the list will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: A label selector that is used to refine
                                  the set of certificate's that this challenge solver
                                  will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                  - privateKeySecretRef
                  - server
                  type: object
                ca:
                  properties:
                    secretName:
                      description: SecretName is the name of the secret used to sign
                        Certificates issued by this Issuer.
                      type: string
                  required:
                  - secretName
                  type: object
                selfSigned:
                  type: object
                vault:
                  properties:
                    auth:
                      description: Vault authentication
                      properties:
                        appRole:
                          description: This Secret contains a AppRole and Secret
                          properties:
                            path:
                              description: Where the authentication path is mounted
                                in Vault.
                              type: string
                            roleId:
                              type: string
                            secretRef:
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - path
                          - roleId
                          - secretRef
                          type: object
                        kubernetes:
                          description: This contains a Role and Secret with a ServiceAccount
                            token to authenticate with vault.
                          properties:
                            mountPath:
                              description: The value here will be used as part of
                                the path used when authenticating with vault, for
                                example if you set a value of "foo", the path used
                                will be `/v1/auth/foo/login`. If unspecified, the
                                default value "kubernetes" will be used.
                              type: string
                            role:
                              description: A required field containing the Vault Role
                                to assume. A Role binds a Kubernetes ServiceAccount
                                with a set of Vault policies.
                              type: string
                            secretRef:
                              description: The required Secret field containing a
                                Kubernetes ServiceAccount JWT used for authenticating
                                with Vault. Use of 'ambient credentials' is not supported.
                              properties:
                                key:
                                  description: The key of the secret to select from.
                                    Must be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - role
                          - secretRef
                          type: object
                        tokenSecretRef:
                          description: This Secret contains the Vault token key
                          properties:
                            key:
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                    caBundle:
                      description: Base64 encoded CA bundle to validate Vault server
                        certificate. Only used if the Server URL is using HTTPS protocol.
                        This parameter is ignored for plain HTTP protocol connection.
                        If not set the system root certificates are used to validate
                        the TLS connection.
                      format: byte
                      type: string
                    path:
                      description: Vault URL path to the certificate role
                      type: string
                    server:
                      description: Server is the vault connection address
                      type: string
                  required:
                  - auth
                  - path
                  - server
                  type: object
                venafi:
                  description: VenafiIssuer describes issuer configuration details
                    for Venafi Cloud.
                  properties:
                    cloud:
                      description: Cloud specifies the Venafi cloud configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector
                            for the Venafi Cloud API token.
                          properties:
                            key:
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for Venafi Cloud
                          type: string
                      required:
                      - apiTokenSecretRef
                      - url
                      type: object
                    tpp:
                      description: TPP specifies Trust Protection Platform configuration
                        settings. Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: CABundle is a PEM encoded TLS certifiate to
                            use to verify connections to the TPP instance. If specified,
                            system roots will not be used and the issuing CA for the
                            TPP instance must be verifiable using the provided root.
                            If not specified, the connection will be verified using
                            the cert-manager system root certificates.
                          format: byte
                          type: string
                        credentialsRef:
                          description: CredentialsRef is a reference to a Secret containing
                            the username and password for the TPP server. The secret
                            must contain two keys, 'username' and 'password'.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          required:
                          - name
                          type: object
                        url:
                          description: URL is the base URL for the Venafi TPP instance
                          type: string
                      required:
                      - credentialsRef
                      - url
                      type: object
                    zone:
                      description: Zone is the Venafi Policy Zone to use for this
                        issuer. All requests made to the Venafi platform will be restricted
                        by the named zone policy. This field is required.
                      type: string
                  required:
                  - zone
                  type: object
              type: object
            status:
              description: IssuerStatus contains status information about an Issuer
              properties:
                acme:
                  properties:
                    lastRegisteredEmail:
                      description: LastRegisteredEmail is the email associated with
                        the latest registered ACME account, in order to track changes
                        made to registered account associated with the  Issuer
                      type: string
                    uri:
                      description: URI is the unique account identifier, which can
                        also be used to retrieve account details from the CA
                      type: string
                  type: object
                conditions:
                  items:
                    description: IssuerCondition contains condition information for
                      an Issuer.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the timestamp corresponding
                          to the last status change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: Message is a human readable description of the
                          details of the last transition, complementing reason.
                        type: string
                      reason:
                        description: Reason is a brief machine readable explanation
                          for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of ('True', 'False',
                          'Unknown').
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: Type of the condition, currently ('Ready').
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-kubeadm-bootstrap-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: bootstrap-kubeadm
      cluster.x-k8s.io/v1alpha2: v1alpha2
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: kubeadmconfigs.bootstrap.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lRRzcvdk1zK0xXWFIwR1loTkZ2cWQ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNVdoY05NakF3T1RBMwpNREkxTVRBNVdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETk5NRitWVXo1MjVYMU4yQ1hjZTIyYXdvNlhVdGU4T0pmNDZJSGh4WlMKSTRXTnl0eHJRZnNLdHlQMmNiL2RadnRnc1BmaTQ1MHdJUXd5cS9QanlUcGVjNUFFckVKMnUxbTlSNllHanF5TApyUXJxQytIYzQ3VWY5cGNGUUJjUGlNVlUyQTc4STl6b09UOTdFME9keEU2MEZRVzNmKzZwS1VwbGt5NzJRbzdCCk9sK29YWDhld1JURkFQQ2REUVA1OUpUT3JZcVlJTUxGMHVUay9HQ1hDTVl3SXlCRytSTzRLenRFWllENlUvNloKc0U2a01RNUZVdHYxd3pSWE9MMjU3WCs2bE5mSHV3aU1mYy9DQjBGYy9kVktjcnYyeDBHMkdoQ0JuczNKL1RMaQp0NzNYYlEzdEhxeTVBN1RYY1BoYzlvaGRMemlialViWGpDWE9IQ0VEbVc5WEFnTUJBQUdqZ2Iwd2dib3dEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2daa0dBMVVkRVFTQmtUQ0Jqb0krWTJGd2FTMXIKZFdKbFlXUnRMV0p2YjNSemRISmhjQzEzWldKb2IyOXJMWE5sY25acFkyVXVZMkZ3YVMxM1pXSm9iMjlyTFhONQpjM1JsYlM1emRtT0NUR05oY0drdGEzVmlaV0ZrYlMxaWIyOTBjM1J5WVhBdGQyVmlhRzl2YXkxelpYSjJhV05sCkxtTmhjR2t0ZDJWaWFHOXZheTF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUkwYXFkNG1LQ2VUb3k4NG4vd2ZFZ2xXZXp1M3pPUlpzM3ZHcGVyRnA1dHVyWnpXZjU5VQpoblZaVG1rZ3grZ0NKSFcxeGdtempTM1Z6Y2lnci9GUWM5dUlvT2had2NkQlZ0NzZSWTkzakRQbVQxQXhYY0ZmCjVkczZCYUtrcEJtYlJ2OGx6bjRWaUR0Q2MrOTNwL21kSVF6WXdxNllsaTl2UDZYdVNuYmpxSFprQmdlZWsrYVEKdytabkpVS3A4cHdrckJTT2xkaE1jZU5QZFpIMWRoT09hbllCbXcxWS9QcUNndGRpWFQ0Y0Vld2pPZ3FDekUzMwpVa3psK0RRaURucXp0bkZsRzBzalBKdG5FLzlVOVVaYlRhSTRmUlU3NlpYVUdKeXFWdjMvS2lkNnZQTzc5a2ZHCm03ZHVMb3YyaEV3eVdNL3lDQkplMVlTeUhQR0UxUjZOUGNNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: capi-kubeadm-bootstrap-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: bootstrap.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubeadmConfig
      listKind: KubeadmConfigList
      plural: kubeadmconfigs
      singular: kubeadmconfig
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: KubeadmConfig is the Schema for the kubeadmconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeadmConfigSpec defines the desired state of KubeadmConfig.
                Either ClusterConfiguration and InitConfiguration should be defined
                or the JoinConfiguration should be defined.
              properties:
                clusterConfiguration:
                  description: ClusterConfiguration along with InitConfiguration are
                    the configurations necessary for the init command
                  properties:
                    apiServer:
                      description: APIServer contains extra settings for the API server
                        control plane component
                      properties:
                        certSANs:
                          description: CertSANs sets extra Subject Alternative Names
                            for the API Server signing cert.
                          items:
                            type: string
                          type: array
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                        timeoutForControlPlane:
                          description: TimeoutForControlPlane controls the timeout
                            that we use for API server to appear
                          type: string
                      type: object
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    certificatesDir:
                      description: 'CertificatesDir specifies where to store or look
                        for all required certificates. NB: if not provided, this will
                        default to `/etc/kubernetes/pki`'
                      type: string
                    clusterName:
                      description: The cluster name
                      type: string
                    controlPlaneEndpoint:
                      description: 'ControlPlaneEndpoint sets a stable IP address
                        or DNS name for the control plane; it can be a valid IP address
                        or a RFC-1123 DNS subdomain, both with optional TCP port.
                        In case the ControlPlaneEndpoint is not specified, the AdvertiseAddress
                        + BindPort are used; in case the ControlPlaneEndpoint is specified
                        but without a TCP port, the BindPort is used. Possible usages
                        are: e.g. In a cluster with more than one control plane instances,
                        this field should be assigned the address of the external
                        load balancer in front of the control plane instances. e.g.  in
                        environments with enforced node recycling, the ControlPlaneEndpoint
                        could be used for assigning a stable DNS to the control plane.
                        NB: This value defaults to the first value in the Cluster
                        object status.apiEndpoints array.'
                      type: string
                    controllerManager:
                      description: ControllerManager contains extra settings for the
                        controller manager control plane component
                      properties:
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                      type: object
                    dns:
                      description: DNS defines the options for the DNS add-on installed
                        in the cluster.
                      properties:
                        imageRepository:
                          description: ImageRepository sets the container registry
                            to pull images from. if not set, the ImageRepository defined
                            in ClusterConfiguration will be used instead.
                          type: string
                        imageTag:
                          description: ImageTag allows to specify a tag for the image.
                            In case this value is set, kubeadm does not change automatically
                            the version of the above components during upgrades.
                          type: string
                        type:
                          description: Type defines the DNS add-on to be used
                          type: string
                      type: object
                    etcd:
                      description: 'Etcd holds configuration for etcd. NB: This value
                        defaults to a Local (stacked) etcd'
                      properties:
                        external:
                          description: External describes how to connect to an external
                            etcd cluster Local and External are mutually exclusive
                          properties:
                            caFile:
                              description: CAFile is an SSL Certificate Authority
                                file used to secure etcd communication. Required if
                                using a TLS connection.
                              type: string
                            certFile:
                              description: CertFile is an SSL certification file used
                                to secure etcd communication. Required if using a
                                TLS connection.
                              type: string
                            endpoints:
                              description: Endpoints of etcd members. Required for
                                ExternalEtcd.
                              items:
                                type: string
                              type: array
                            keyFile:
                              description: KeyFile is an SSL key file used to secure
                                etcd communication. Required if using a TLS connection.
                              type: string
                          required:
                          - caFile
                          - certFile
                          - endpoints
                          - keyFile
                          type: object
                        local:
                          description: Local provides configuration knobs for configuring
                            the local etcd instance Local and External are mutually
                            exclusive
                          properties:
                            dataDir:
                              description: DataDir is the directory etcd will place
                                its data. Defaults to "/var/lib/etcd".
                              type: string
                            extraArgs:
                              additionalProperties:
                                type: string
                              description: ExtraArgs are extra arguments provided
                                to the etcd binary when run inside a static pod.
                              type: object
                            imageRepository:
                              description: ImageRepository sets the container registry
                                to pull images from. if not set, the ImageRepository
                                defined in ClusterConfiguration will be used instead.
                              type: string
                            imageTag:
                              description: ImageTag allows to specify a tag for the
                                image. In case this value is set, kubeadm does not
                                change automatically the version of the above components
                                during upgrades.
                              type: string
                            peerCertSANs:
                              description: PeerCertSANs sets extra Subject Alternative
                                Names for the etcd peer signing cert.
                              items:
                                type: string
                              type: array
                            serverCertSANs:
                              description: ServerCertSANs sets extra Subject Alternative
                                Names for the etcd server signing cert.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    featureGates:
                      additionalProperties:
                        type: boolean
                      description: FeatureGates enabled by the user.
                      type: object
                    imageRepository:
                      description: ImageRepository sets the container registry to
                        pull images from. If empty, `k8s.gcr.io` will be used by default;
                        in case of kubernetes version is a CI build (kubernetes version
                        starts with `ci/` or `ci-cross/`) `gcr.io/kubernetes-ci-images`
                        will be used as a default for control plane components and
                        for kube-proxy, while `k8s.gcr.io` will be used for all the
                        other images.
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    kubernetesVersion:
                      description: 'KubernetesVersion is the target version of the
                        control plane. NB: This value defaults to the Machine object
                        spec.kuberentesVersion'
                      type: string
                    networking:
                      description: 'Networking holds configuration for the networking
                        topology of the cluster. NB: This value defaults to the Cluster
                        object spec.clusterNetwork.'
                      properties:
                        dnsDomain:
                          description: DNSDomain is the dns domain used by k8s services.
                            Defaults to "cluster.local".
                          type: string
                        podSubnet:
                          description: PodSubnet is the subnet used by pods. If unset,
                            the API server will not allocate CIDR ranges for every
                            node. Defaults to the first element of the Cluster object's
                            spec.clusterNetwork.services.cidrBlocks if that is set
                          type: string
                        serviceSubnet:
                          description: ServiceSubnet is the subnet used by k8s services.
                            Defaults to the first element of the Cluster object's
                            spec.clusterNetwork.pods.cidrBlocks field, or to "10.96.0.0/12"
                            if that's unset.
                          type: string
                      type: object
                    scheduler:
                      description: Scheduler contains extra settings for the scheduler
                        control plane component
                      properties:
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                      type: object
                    useHyperKubeImage:
                      description: UseHyperKubeImage controls if hyperkube should
                        be used for Kubernetes components instead of their respective
                        separate images
                      type: boolean
                  type: object
                files:
                  description: Files specifies extra files to be passed to user_data
                    upon creation.
                  items:
                    description: File defines the input for generating write_files
                      in cloud-init.
                    properties:
                      content:
                        description: Content is the actual content of the file.
                        type: string
                      encoding:
                        description: Encoding specifies the encoding of the file contents.
                        enum:
                        - base64
                        - gzip
                        - gzip+base64
                        type: string
                      owner:
                        description: Owner specifies the ownership of the file, e.g.
                          "root:root".
                        type: string
                      path:
                        description: Path specifies the full path on disk where to
                          store the file.
                        type: string
                      permissions:
                        description: Permissions specifies the permissions to assign
                          to the file, e.g. "0640".
                        type: string
                    required:
                    - content
                    - path
                    type: object
                  type: array
                format:
                  description: Format specifies the output format of the bootstrap
                    data
                  enum:
                  - cloud-config
                  type: string
                initConfiguration:
                  description: InitConfiguration along with ClusterConfiguration are
                    the configurations necessary for the init command
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    bootstrapTokens:
                      description: BootstrapTokens is respected at `kubeadm init`
                        time and describes a set of Bootstrap Tokens to create. This
                        information IS NOT uploaded to the kubeadm cluster configmap,
                        partly because of its sensitive nature
                      items:
                        description: BootstrapToken describes one bootstrap token,
                          stored as a Secret in the cluster
                        properties:
                          description:
                            description: Description sets a human-friendly message
                              why this token exists and what it's used for, so other
                              administrators can know its purpose.
                            type: string
                          expires:
                            description: Expires specifies the timestamp when this
                              token expires. Defaults to being set dynamically at
                              runtime based on the TTL. Expires and TTL are mutually
                              exclusive.
                            format: date-time
                            type: string
                          groups:
                            description: Groups specifies the extra groups that this
                              token will authenticate as when/if used for authentication
                            items:
                              type: string
                            type: array
                          token:
                            description: Token is used for establishing bidirectional
                              trust between nodes and control-planes. Used for joining
                              nodes in the cluster.
                            type: object
                          ttl:
                            description: TTL defines the time to live for this token.
                              Defaults to 24h. Expires and TTL are mutually exclusive.
                            type: string
                          usages:
                            description: Usages describes the ways in which this token
                              can be used. Can by default be used for establishing
                              bidirectional trust, but that can be changed here.
                            items:
                              type: string
                            type: array
                        required:
                        - token
                        type: object
                      type: array
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    localAPIEndpoint:
                      description: LocalAPIEndpoint represents the endpoint of the
                        API server instance that's deployed on this control plane
                        node In HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint
                        in the sense that ControlPlaneEndpoint is the global endpoint
                        for the cluster, which then loadbalances the requests to each
                        individual API server. This configuration object lets you
                        customize what IP/DNS name and port the local API server advertises
                        it's accessible on. By default, kubeadm tries to auto-detect
                        the IP of the default interface and use that, but in case
                        that process fails you may set the desired value here.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress sets the IP address for the
                            API server to advertise.
                          type: string
                        bindPort:
                          description: BindPort sets the secure port for the API Server
                            to bind to. Defaults to 6443.
                          format: int32
                          type: integer
                      required:
                      - advertiseAddress
                      - bindPort
                      type: object
                    nodeRegistration:
                      description: NodeRegistration holds fields that relate to registering
                        the new control-plane node to the cluster
                      properties:
                        criSocket:
                          description: CRISocket is used to retrieve container runtime
                            info. This information will be annotated to the Node API
                            object, for later re-use
                          type: string
                        kubeletExtraArgs:
                          additionalProperties:
                            type: string
                          description: KubeletExtraArgs passes through extra arguments
                            to the kubelet. The arguments here are passed to the kubelet
                            command line via the environment file kubeadm writes at
                            runtime for the kubelet to source. This overrides the
                            generic base-level configuration in the kubelet-config-1.X
                            ConfigMap Flags have higher priority when parsing. These
                            values are local and specific to the node kubeadm is executing
                            on.
                          type: object
                        name:
                          description: Name is the `.Metadata.Name` field of the Node
                            API object that will be created in this `kubeadm init`
                            or `kubeadm join` operation. This field is also used in
                            the CommonName field of the kubelet's client certificate
                            to the API server. Defaults to the hostname of the node
                            if not provided.
                          type: string
                        taints:
                          description: 'Taints specifies the taints the Node API object
                            should be registered with. If this field is unset, i.e.
                            nil, in the `kubeadm init` process it will be defaulted
                            to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                            If you don''t want to taint your control-plane node, set
                            this field to an empty slice, i.e. `taints: {}` in the
                            YAML file. This field is solely used for Node registration.'
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: Required. The taint value corresponding
                                  to the taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      type: object
                  type: object
                joinConfiguration:
                  description: JoinConfiguration is the kubeadm configuration for
                    the join command
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    caCertPath:
                      description: 'CACertPath is the path to the SSL certificate
                        authority used to secure comunications between node and control-plane.
                        Defaults to "/etc/kubernetes/pki/ca.crt". TODO: revisit when
                        there is defaulting from k/k'
                      type: string
                    controlPlane:
                      description: ControlPlane defines the additional control plane
                        instance to be deployed on the joining node. If nil, no additional
                        control plane instance will be deployed.
                      properties:
                        localAPIEndpoint:
                          description: LocalAPIEndpoint represents the endpoint of
                            the API server instance to be deployed on this node.
                          properties:
                            advertiseAddress:
                              description: AdvertiseAddress sets the IP address for
                                the API server to advertise.
                              type: string
                            bindPort:
                              description: BindPort sets the secure port for the API
                                Server to bind to. Defaults to 6443.
                              format: int32
                              type: integer
                          required:
                          - advertiseAddress
                          - bindPort
                          type: object
                      type: object
                    discovery:
                      description: 'Discovery specifies the options for the kubelet
                        to use during the TLS Bootstrap process TODO: revisit when
                        there is defaulting from k/k'
                      properties:
                        bootstrapToken:
                          description: BootstrapToken is used to set the options for
                            bootstrap token based discovery BootstrapToken and File
                            are mutually exclusive
                          properties:
                            apiServerEndpoint:
                              description: APIServerEndpoint is an IP or domain name
                                to the API server from which info will be fetched.
                              type: string
                            caCertHashes:
                              description: 'CACertHashes specifies a set of public
                                key pins to verify when token-based discovery is used.
                                The root CA found during discovery must match one
                                of these values. Specifying an empty set disables
                                root CA pinning, which can be unsafe. Each hash is
                                specified as "<type>:<value>", where the only currently
                                supported type is "sha256". This is a hex-encoded
                                SHA-256 hash of the Subject Public Key Info (SPKI)
                                object in DER-encoded ASN.1. These hashes can be calculated
                                using, for example, OpenSSL: openssl x509 -pubkey
                                -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null
                                | openssl dgst -sha256 -hex'
                              items:
                                type: string
                              type: array
                            token:
                              description: Token is a token used to validate cluster
                                information fetched from the control-plane.
                              type: string
                            unsafeSkipCAVerification:
                              description: UnsafeSkipCAVerification allows token-based
                                discovery without CA verification via CACertHashes.
                                This can weaken the security of kubeadm since other
                                nodes can impersonate the control-plane.
                              type: boolean
                          required:
                          - token
                          - unsafeSkipCAVerification
                          type: object
                        file:
                          description: File is used to specify a file or URL to a
                            kubeconfig file from which to load cluster information
                            BootstrapToken and File are mutually exclusive
                          properties:
                            kubeConfigPath:
                              description: KubeConfigPath is used to specify the actual
                                file path or URL to the kubeconfig file from which
                                to load cluster information
                              type: string
                          required:
                          - kubeConfigPath
                          type: object
                        timeout:
                          description: Timeout modifies the discovery timeout
                          type: string
                        tlsBootstrapToken:
                          description: 'TLSBootstrapToken is a token used for TLS
                            bootstrapping. If .BootstrapToken is set, this field is
                            defaulted to .BootstrapToken.Token, but can be overridden.
                            If .File is set, this field **must be set** in case the
                            KubeConfigFile does not contain any other authentication
                            information TODO: revisit when there is defaulting from
                            k/k'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    nodeRegistration:
                      description: NodeRegistration holds fields that relate to registering
                        the new control-plane node to the cluster
                      properties:
                        criSocket:
                          description: CRISocket is used to retrieve container runtime
                            info. This information will be annotated to the Node API
                            object, for later re-use
                          type: string
                        kubeletExtraArgs:
                          additionalProperties:
                            type: string
                          description: KubeletExtraArgs passes through extra arguments
                            to the kubelet. The arguments here are passed to the kubelet
                            command line via the environment file kubeadm writes at
                            runtime for the kubelet to source. This overrides the
                            generic base-level configuration in the kubelet-config-1.X
                            ConfigMap Flags have higher priority when parsing. These
                            values are local and specific to the node kubeadm is executing
                            on.
                          type: object
                        name:
                          description: Name is the `.Metadata.Name` field of the Node
                            API object that will be created in this `kubeadm init`
                            or `kubeadm join` operation. This field is also used in
                            the CommonName field of the kubelet's client certificate
                            to the API server. Defaults to the hostname of the node
                            if not provided.
                          type: string
                        taints:
                          description: 'Taints specifies the taints the Node API object
                            should be registered with. If this field is unset, i.e.
                            nil, in the `kubeadm init` process it will be defaulted
                            to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                            If you don''t want to taint your control-plane node, set
                            this field to an empty slice, i.e. `taints: {}` in the
                            YAML file. This field is solely used for Node registration.'
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: Required. The taint value corresponding
                                  to the taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      type: object
                  type: object
                ntp:
                  description: NTP specifies NTP configuration
                  properties:
                    enabled:
                      description: Enabled specifies whether NTP should be enabled
                      type: boolean
                    servers:
                      description: Servers specifies which NTP servers to use
                      items:
                        type: string
                      type: array
                  type: object
                postKubeadmCommands:
                  description: PostKubeadmCommands specifies extra commands to run
                    after kubeadm runs
                  items:
                    type: string
                  type: array
                preKubeadmCommands:
                  description: PreKubeadmCommands specifies extra commands to run
                    before kubeadm runs
                  items:
                    type: string
                  type: array
                users:
                  description: Users specifies extra users to add
                  items:
                    description: User defines the input for a generated user in cloud-init.
                    properties:
                      gecos:
                        description: Gecos specifies the gecos to use for the user
                        type: string
                      groups:
                        description: Groups specifies the additional groups for the
                          user
                        type: string
                      homeDir:
                        description: HomeDir specifies the home directory to use for
                          the user
                        type: string
                      inactive:
                        description: Inactive specifies whether to mark the user as
                          inactive
                        type: boolean
                      lockPassword:
                        description: LockPassword specifies if password login should
                          be disabled
                        type: boolean
                      name:
                        description: Name specifies the user name
                        type: string
                      passwd:
                        description: Passwd specifies a hashed password for the user
                        type: string
                      primaryGroup:
                        description: PrimaryGroup specifies the primary group for
                          the user
                        type: string
                      shell:
                        description: Shell specifies the user's shell
                        type: string
                      sshAuthorizedKeys:
                        description: SSHAuthorizedKeys specifies a list of ssh authorized
                          keys for the user
                        items:
                          type: string
                        type: array
                      sudo:
                        description: Sudo specifies a sudo role for the user
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              type: object
            status:
              description: KubeadmConfigStatus defines the observed state of KubeadmConfig
              properties:
                bootstrapData:
                  description: BootstrapData will be a cloud-init script for now
                  format: byte
                  type: string
                errorMessage:
                  description: ErrorMessage will be set on non-retryable errors
                  type: string
                errorReason:
                  description: ErrorReason will be set on non-retryable errors
                  type: string
                ready:
                  description: Ready indicates the BootstrapData field is ready to
                    be consumed
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: KubeadmConfig is the Schema for the kubeadmconfigs API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeadmConfigSpec defines the desired state of KubeadmConfig.
                Either ClusterConfiguration and InitConfiguration should be defined
                or the JoinConfiguration should be defined.
              properties:
                clusterConfiguration:
                  description: ClusterConfiguration along with InitConfiguration are
                    the configurations necessary for the init command
                  properties:
                    apiServer:
                      description: APIServer contains extra settings for the API server
                        control plane component
                      properties:
                        certSANs:
                          description: CertSANs sets extra Subject Alternative Names
                            for the API Server signing cert.
                          items:
                            type: string
                          type: array
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                        timeoutForControlPlane:
                          description: TimeoutForControlPlane controls the timeout
                            that we use for API server to appear
                          type: string
                      type: object
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    certificatesDir:
                      description: 'CertificatesDir specifies where to store or look
                        for all required certificates. NB: if not provided, this will
                        default to `/etc/kubernetes/pki`'
                      type: string
                    clusterName:
                      description: The cluster name
                      type: string
                    controlPlaneEndpoint:
                      description: 'ControlPlaneEndpoint sets a stable IP address
                        or DNS name for the control plane; it can be a valid IP address
                        or a RFC-1123 DNS subdomain, both with optional TCP port.
                        In case the ControlPlaneEndpoint is not specified, the AdvertiseAddress
                        + BindPort are used; in case the ControlPlaneEndpoint is specified
                        but without a TCP port, the BindPort is used. Possible usages
                        are: e.g. In a cluster with more than one control plane instances,
                        this field should be assigned the address of the external
                        load balancer in front of the control plane instances. e.g.  in
                        environments with enforced node recycling, the ControlPlaneEndpoint
                        could be used for assigning a stable DNS to the control plane.
                        NB: This value defaults to the first value in the Cluster
                        object status.apiEndpoints array.'
                      type: string
                    controllerManager:
                      description: ControllerManager contains extra settings for the
                        controller manager control plane component
                      properties:
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                      type: object
                    dns:
                      description: DNS defines the options for the DNS add-on installed
                        in the cluster.
                      properties:
                        imageRepository:
                          description: ImageRepository sets the container registry
                            to pull images from. if not set, the ImageRepository defined
                            in ClusterConfiguration will be used instead.
                          type: string
                        imageTag:
                          description: ImageTag allows to specify a tag for the image.
                            In case this value is set, kubeadm does not change automatically
                            the version of the above components during upgrades.
                          type: string
                        type:
                          description: Type defines the DNS add-on to be used
                          type: string
                      type: object
                    etcd:
                      description: 'Etcd holds configuration for etcd. NB: This value
                        defaults to a Local (stacked) etcd'
                      properties:
                        external:
                          description: External describes how to connect to an external
                            etcd cluster Local and External are mutually exclusive
                          properties:
                            caFile:
                              description: CAFile is an SSL Certificate Authority
                                file used to secure etcd communication. Required if
                                using a TLS connection.
                              type: string
                            certFile:
                              description: CertFile is an SSL certification file used
                                to secure etcd communication. Required if using a
                                TLS connection.
                              type: string
                            endpoints:
                              description: Endpoints of etcd members. Required for
                                ExternalEtcd.
                              items:
                                type: string
                              type: array
                            keyFile:
                              description: KeyFile is an SSL key file used to secure
                                etcd communication. Required if using a TLS connection.
                              type: string
                          required:
                          - caFile
                          - certFile
                          - endpoints
                          - keyFile
                          type: object
                        local:
                          description: Local provides configuration knobs for configuring
                            the local etcd instance Local and External are mutually
                            exclusive
                          properties:
                            dataDir:
                              description: DataDir is the directory etcd will place
                                its data. Defaults to "/var/lib/etcd".
                              type: string
                            extraArgs:
                              additionalProperties:
                                type: string
                              description: ExtraArgs are extra arguments provided
                                to the etcd binary when run inside a static pod.
                              type: object
                            imageRepository:
                              description: ImageRepository sets the container registry
                                to pull images from. if not set, the ImageRepository
                                defined in ClusterConfiguration will be used instead.
                              type: string
                            imageTag:
                              description: ImageTag allows to specify a tag for the
                                image. In case this value is set, kubeadm does not
                                change automatically the version of the above components
                                during upgrades.
                              type: string
                            peerCertSANs:
                              description: PeerCertSANs sets extra Subject Alternative
                                Names for the etcd peer signing cert.
                              items:
                                type: string
                              type: array
                            serverCertSANs:
                              description: ServerCertSANs sets extra Subject Alternative
                                Names for the etcd server signing cert.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    featureGates:
                      additionalProperties:
                        type: boolean
                      description: FeatureGates enabled by the user.
                      type: object
                    imageRepository:
                      description: ImageRepository sets the container registry to
                        pull images from. If empty, `k8s.gcr.io` will be used by default;
                        in case of kubernetes version is a CI build (kubernetes version
                        starts with `ci/` or `ci-cross/`) `gcr.io/kubernetes-ci-images`
                        will be used as a default for control plane components and
                        for kube-proxy, while `k8s.gcr.io` will be used for all the
                        other images.
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    kubernetesVersion:
                      description: 'KubernetesVersion is the target version of the
                        control plane. NB: This value defaults to the Machine object
                        spec.kuberentesVersion'
                      type: string
                    networking:
                      description: 'Networking holds configuration for the networking
                        topology of the cluster. NB: This value defaults to the Cluster
                        object spec.clusterNetwork.'
                      properties:
                        dnsDomain:
                          description: DNSDomain is the dns domain used by k8s services.
                            Defaults to "cluster.local".
                          type: string
                        podSubnet:
                          description: PodSubnet is the subnet used by pods. If unset,
                            the API server will not allocate CIDR ranges for every
                            node. Defaults to the first element of the Cluster object's
                            spec.clusterNetwork.services.cidrBlocks if that is set
                          type: string
                        serviceSubnet:
                          description: ServiceSubnet is the subnet used by k8s services.
                            Defaults to the first element of the Cluster object's
                            spec.clusterNetwork.pods.cidrBlocks field, or to "10.96.0.0/12"
                            if that's unset.
                          type: string
                      type: object
                    scheduler:
                      description: Scheduler contains extra settings for the scheduler
                        control plane component
                      properties:
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: 'ExtraArgs is an extra set of flags to pass
                            to the control plane component. TODO: This is temporary
                            and ideally we would like to switch all components to
                            use ComponentConfig + ConfigMaps.'
                          type: object
                        extraVolumes:
                          description: ExtraVolumes is an extra set of host volumes,
                            mounted to the control plane component.
                          items:
                            description: HostPathMount contains elements describing
                              volumes that are mounted from the host.
                            properties:
                              hostPath:
                                description: HostPath is the path in the host that
                                  will be mounted inside the pod.
                                type: string
                              mountPath:
                                description: MountPath is the path inside the pod
                                  where hostPath will be mounted.
                                type: string
                              name:
                                description: Name of the volume inside the pod template.
                                type: string
                              pathType:
                                description: PathType is the type of the HostPath.
                                type: string
                              readOnly:
                                description: ReadOnly controls write access to the
                                  volume
                                type: boolean
                            required:
                            - hostPath
                            - mountPath
                            - name
                            type: object
                          type: array
                      type: object
                    useHyperKubeImage:
                      description: UseHyperKubeImage controls if hyperkube should
                        be used for Kubernetes components instead of their respective
                        separate images
                      type: boolean
                  type: object
                files:
                  description: Files specifies extra files to be passed to user_data
                    upon creation.
                  items:
                    description: File defines the input for generating write_files
                      in cloud-init.
                    properties:
                      content:
                        description: Content is the actual content of the file.
                        type: string
                      encoding:
                        description: Encoding specifies the encoding of the file contents.
                        enum:
                        - base64
                        - gzip
                        - gzip+base64
                        type: string
                      owner:
                        description: Owner specifies the ownership of the file, e.g.
                          "root:root".
                        type: string
                      path:
                        description: Path specifies the full path on disk where to
                          store the file.
                        type: string
                      permissions:
                        description: Permissions specifies the permissions to assign
                          to the file, e.g. "0640".
                        type: string
                    required:
                    - content
                    - path
                    type: object
                  type: array
                format:
                  description: Format specifies the output format of the bootstrap
                    data
                  enum:
                  - cloud-config
                  type: string
                initConfiguration:
                  description: InitConfiguration along with ClusterConfiguration are
                    the configurations necessary for the init command
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    bootstrapTokens:
                      description: BootstrapTokens is respected at `kubeadm init`
                        time and describes a set of Bootstrap Tokens to create. This
                        information IS NOT uploaded to the kubeadm cluster configmap,
                        partly because of its sensitive nature
                      items:
                        description: BootstrapToken describes one bootstrap token,
                          stored as a Secret in the cluster
                        properties:
                          description:
                            description: Description sets a human-friendly message
                              why this token exists and what it's used for, so other
                              administrators can know its purpose.
                            type: string
                          expires:
                            description: Expires specifies the timestamp when this
                              token expires. Defaults to being set dynamically at
                              runtime based on the TTL. Expires and TTL are mutually
                              exclusive.
                            format: date-time
                            type: string
                          groups:
                            description: Groups specifies the extra groups that this
                              token will authenticate as when/if used for authentication
                            items:
                              type: string
                            type: array
                          token:
                            description: Token is used for establishing bidirectional
                              trust between nodes and control-planes. Used for joining
                              nodes in the cluster.
                            type: object
                          ttl:
                            description: TTL defines the time to live for this token.
                              Defaults to 24h. Expires and TTL are mutually exclusive.
                            type: string
                          usages:
                            description: Usages describes the ways in which this token
                              can be used. Can by default be used for establishing
                              bidirectional trust, but that can be changed here.
                            items:
                              type: string
                            type: array
                        required:
                        - token
                        type: object
                      type: array
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    localAPIEndpoint:
                      description: LocalAPIEndpoint represents the endpoint of the
                        API server instance that's deployed on this control plane
                        node In HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint
                        in the sense that ControlPlaneEndpoint is the global endpoint
                        for the cluster, which then loadbalances the requests to each
                        individual API server. This configuration object lets you
                        customize what IP/DNS name and port the local API server advertises
                        it's accessible on. By default, kubeadm tries to auto-detect
                        the IP of the default interface and use that, but in case
                        that process fails you may set the desired value here.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress sets the IP address for the
                            API server to advertise.
                          type: string
                        bindPort:
                          description: BindPort sets the secure port for the API Server
                            to bind to. Defaults to 6443.
                          format: int32
                          type: integer
                      required:
                      - advertiseAddress
                      - bindPort
                      type: object
                    nodeRegistration:
                      description: NodeRegistration holds fields that relate to registering
                        the new control-plane node to the cluster
                      properties:
                        criSocket:
                          description: CRISocket is used to retrieve container runtime
                            info. This information will be annotated to the Node API
                            object, for later re-use
                          type: string
                        kubeletExtraArgs:
                          additionalProperties:
                            type: string
                          description: KubeletExtraArgs passes through extra arguments
                            to the kubelet. The arguments here are passed to the kubelet
                            command line via the environment file kubeadm writes at
                            runtime for the kubelet to source. This overrides the
                            generic base-level configuration in the kubelet-config-1.X
                            ConfigMap Flags have higher priority when parsing. These
                            values are local and specific to the node kubeadm is executing
                            on.
                          type: object
                        name:
                          description: Name is the `.Metadata.Name` field of the Node
                            API object that will be created in this `kubeadm init`
                            or `kubeadm join` operation. This field is also used in
                            the CommonName field of the kubelet's client certificate
                            to the API server. Defaults to the hostname of the node
                            if not provided.
                          type: string
                        taints:
                          description: 'Taints specifies the taints the Node API object
                            should be registered with. If this field is unset, i.e.
                            nil, in the `kubeadm init` process it will be defaulted
                            to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                            If you don''t want to taint your control-plane node, set
                            this field to an empty slice, i.e. `taints: {}` in the
                            YAML file. This field is solely used for Node registration.'
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: Required. The taint value corresponding
                                  to the taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      type: object
                  type: object
                joinConfiguration:
                  description: JoinConfiguration is the kubeadm configuration for
                    the join command
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    caCertPath:
                      description: 'CACertPath is the path to the SSL certificate
                        authority used to secure comunications between node and control-plane.
                        Defaults to "/etc/kubernetes/pki/ca.crt". TODO: revisit when
                        there is defaulting from k/k'
                      type: string
                    controlPlane:
                      description: ControlPlane defines the additional control plane
                        instance to be deployed on the joining node. If nil, no additional
                        control plane instance will be deployed.
                      properties:
                        localAPIEndpoint:
                          description: LocalAPIEndpoint represents the endpoint of
                            the API server instance to be deployed on this node.
                          properties:
                            advertiseAddress:
                              description: AdvertiseAddress sets the IP address for
                                the API server to advertise.
                              type: string
                            bindPort:
                              description: BindPort sets the secure port for the API
                                Server to bind to. Defaults to 6443.
                              format: int32
                              type: integer
                          required:
                          - advertiseAddress
                          - bindPort
                          type: object
                      type: object
                    discovery:
                      description: 'Discovery specifies the options for the kubelet
                        to use during the TLS Bootstrap process TODO: revisit when
                        there is defaulting from k/k'
                      properties:
                        bootstrapToken:
                          description: BootstrapToken is used to set the options for
                            bootstrap token based discovery BootstrapToken and File
                            are mutually exclusive
                          properties:
                            apiServerEndpoint:
                              description: APIServerEndpoint is an IP or domain name
                                to the API server from which info will be fetched.
                              type: string
                            caCertHashes:
                              description: 'CACertHashes specifies a set of public
                                key pins to verify when token-based discovery is used.
                                The root CA found during discovery must match one
                                of these values. Specifying an empty set disables
                                root CA pinning, which can be unsafe. Each hash is
                                specified as "<type>:<value>", where the only currently
                                supported type is "sha256". This is a hex-encoded
                                SHA-256 hash of the Subject Public Key Info (SPKI)
                                object in DER-encoded ASN.1. These hashes can be calculated
                                using, for example, OpenSSL: openssl x509 -pubkey
                                -in ca.crt openssl rsa -pubin -outform der 2>&/dev/null
                                | openssl dgst -sha256 -hex'
                              items:
                                type: string
                              type: array
                            token:
                              description: Token is a token used to validate cluster
                                information fetched from the control-plane.
                              type: string
                            unsafeSkipCAVerification:
                              description: UnsafeSkipCAVerification allows token-based
                                discovery without CA verification via CACertHashes.
                                This can weaken the security of kubeadm since other
                                nodes can impersonate the control-plane.
                              type: boolean
                          required:
                          - token
                          - unsafeSkipCAVerification
                          type: object
                        file:
                          description: File is used to specify a file or URL to a
                            kubeconfig file from which to load cluster information
                            BootstrapToken and File are mutually exclusive
                          properties:
                            kubeConfigPath:
                              description: KubeConfigPath is used to specify the actual
                                file path or URL to the kubeconfig file from which
                                to load cluster information
                              type: string
                          required:
                          - kubeConfigPath
                          type: object
                        timeout:
                          description: Timeout modifies the discovery timeout
                          type: string
                        tlsBootstrapToken:
                          description: 'TLSBootstrapToken is a token used for TLS
                            bootstrapping. If .BootstrapToken is set, this field is
                            defaulted to .BootstrapToken.Token, but can be overridden.
                            If .File is set, this field **must be set** in case the
                            KubeConfigFile does not contain any other authentication
                            information TODO: revisit when there is defaulting from
                            k/k'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    nodeRegistration:
                      description: NodeRegistration holds fields that relate to registering
                        the new control-plane node to the cluster
                      properties:
                        criSocket:
                          description: CRISocket is used to retrieve container runtime
                            info. This information will be annotated to the Node API
                            object, for later re-use
                          type: string
                        kubeletExtraArgs:
                          additionalProperties:
                            type: string
                          description: KubeletExtraArgs passes through extra arguments
                            to the kubelet. The arguments here are passed to the kubelet
                            command line via the environment file kubeadm writes at
                            runtime for the kubelet to source. This overrides the
                            generic base-level configuration in the kubelet-config-1.X
                            ConfigMap Flags have higher priority when parsing. These
                            values are local and specific to the node kubeadm is executing
                            on.
                          type: object
                        name:
                          description: Name is the `.Metadata.Name` field of the Node
                            API object that will be created in this `kubeadm init`
                            or `kubeadm join` operation. This field is also used in
                            the CommonName field of the kubelet's client certificate
                            to the API server. Defaults to the hostname of the node
                            if not provided.
                          type: string
                        taints:
                          description: 'Taints specifies the taints the Node API object
                            should be registered with. If this field is unset, i.e.
                            nil, in the `kubeadm init` process it will be defaulted
                            to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                            If you don''t want to taint your control-plane node, set
                            this field to an empty slice, i.e. `taints: {}` in the
                            YAML file. This field is solely used for Node registration.'
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: Required. The taint value corresponding
                                  to the taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                      type: object
                  type: object
                ntp:
                  description: NTP specifies NTP configuration
                  properties:
                    enabled:
                      description: Enabled specifies whether NTP should be enabled
                      type: boolean
                    servers:
                      description: Servers specifies which NTP servers to use
                      items:
                        type: string
                      type: array
                  type: object
                postKubeadmCommands:
                  description: PostKubeadmCommands specifies extra commands to run
                    after kubeadm runs
                  items:
                    type: string
                  type: array
                preKubeadmCommands:
                  description: PreKubeadmCommands specifies extra commands to run
                    before kubeadm runs
                  items:
                    type: string
                  type: array
                useExperimentalRetryJoin:
                  description: "UseExperimentalRetryJoin replaces a basic kubeadm
                    command with a shell script with retries for joins. \n This is
                    meant to be an experimental temporary workaround on some environments
                    where joins fail due to timing (and other issues). The long term
                    goal is to add retries to kubeadm proper and use that functionality.
                    \n This will add about 40KB to userdata \n For more information,
                    refer to https://github.com/kubernetes-sigs/cluster-api/pull/2763#discussion_r397306055."
                  type: boolean
                users:
                  description: Users specifies extra users to add
                  items:
                    description: User defines the input for a generated user in cloud-init.
                    properties:
                      gecos:
                        description: Gecos specifies the gecos to use for the user
                        type: string
                      groups:
                        description: Groups specifies the additional groups for the
                          user
                        type: string
                      homeDir:
                        description: HomeDir specifies the home directory to use for
                          the user
                        type: string
                      inactive:
                        description: Inactive specifies whether to mark the user as
                          inactive
                        type: boolean
                      lockPassword:
                        description: LockPassword specifies if password login should
                          be disabled
                        type: boolean
                      name:
                        description: Name specifies the user name
                        type: string
                      passwd:
                        description: Passwd specifies a hashed password for the user
                        type: string
                      primaryGroup:
                        description: PrimaryGroup specifies the primary group for
                          the user
                        type: string
                      shell:
                        description: Shell specifies the user's shell
                        type: string
                      sshAuthorizedKeys:
                        description: SSHAuthorizedKeys specifies a list of ssh authorized
                          keys for the user
                        items:
                          type: string
                        type: array
                      sudo:
                        description: Sudo specifies a sudo role for the user
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                verbosity:
                  description: Verbosity is the number for the kubeadm log level verbosity.
                    It overrides the `--v` flag in kubeadm commands.
                  format: int32
                  type: integer
              type: object
            status:
              description: KubeadmConfigStatus defines the observed state of KubeadmConfig
              properties:
                bootstrapData:
                  description: "BootstrapData will be a cloud-init script for now.
                    \n Deprecated: This field has been deprecated in v1alpha3 and
                    will be removed in a future version. Switch to DataSecretName."
                  format: byte
                  type: string
                dataSecretName:
                  description: DataSecretName is the name of the secret that stores
                    the bootstrap data script.
                  type: string
                failureMessage:
                  description: FailureMessage will be set on non-retryable errors
                  type: string
                failureReason:
                  description: FailureReason will be set on non-retryable errors
                  type: string
                ready:
                  description: Ready indicates the BootstrapData field is ready to
                    be consumed
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-kubeadm-bootstrap-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: bootstrap-kubeadm
      cluster.x-k8s.io/v1alpha2: v1alpha2
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: kubeadmconfigtemplates.bootstrap.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lRRzcvdk1zK0xXWFIwR1loTkZ2cWQ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNVdoY05NakF3T1RBMwpNREkxTVRBNVdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETk5NRitWVXo1MjVYMU4yQ1hjZTIyYXdvNlhVdGU4T0pmNDZJSGh4WlMKSTRXTnl0eHJRZnNLdHlQMmNiL2RadnRnc1BmaTQ1MHdJUXd5cS9QanlUcGVjNUFFckVKMnUxbTlSNllHanF5TApyUXJxQytIYzQ3VWY5cGNGUUJjUGlNVlUyQTc4STl6b09UOTdFME9keEU2MEZRVzNmKzZwS1VwbGt5NzJRbzdCCk9sK29YWDhld1JURkFQQ2REUVA1OUpUT3JZcVlJTUxGMHVUay9HQ1hDTVl3SXlCRytSTzRLenRFWllENlUvNloKc0U2a01RNUZVdHYxd3pSWE9MMjU3WCs2bE5mSHV3aU1mYy9DQjBGYy9kVktjcnYyeDBHMkdoQ0JuczNKL1RMaQp0NzNYYlEzdEhxeTVBN1RYY1BoYzlvaGRMemlialViWGpDWE9IQ0VEbVc5WEFnTUJBQUdqZ2Iwd2dib3dEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2daa0dBMVVkRVFTQmtUQ0Jqb0krWTJGd2FTMXIKZFdKbFlXUnRMV0p2YjNSemRISmhjQzEzWldKb2IyOXJMWE5sY25acFkyVXVZMkZ3YVMxM1pXSm9iMjlyTFhONQpjM1JsYlM1emRtT0NUR05oY0drdGEzVmlaV0ZrYlMxaWIyOTBjM1J5WVhBdGQyVmlhRzl2YXkxelpYSjJhV05sCkxtTmhjR2t0ZDJWaWFHOXZheTF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUkwYXFkNG1LQ2VUb3k4NG4vd2ZFZ2xXZXp1M3pPUlpzM3ZHcGVyRnA1dHVyWnpXZjU5VQpoblZaVG1rZ3grZ0NKSFcxeGdtempTM1Z6Y2lnci9GUWM5dUlvT2had2NkQlZ0NzZSWTkzakRQbVQxQXhYY0ZmCjVkczZCYUtrcEJtYlJ2OGx6bjRWaUR0Q2MrOTNwL21kSVF6WXdxNllsaTl2UDZYdVNuYmpxSFprQmdlZWsrYVEKdytabkpVS3A4cHdrckJTT2xkaE1jZU5QZFpIMWRoT09hbllCbXcxWS9QcUNndGRpWFQ0Y0Vld2pPZ3FDekUzMwpVa3psK0RRaURucXp0bkZsRzBzalBKdG5FLzlVOVVaYlRhSTRmUlU3NlpYVUdKeXFWdjMvS2lkNnZQTzc5a2ZHCm03ZHVMb3YyaEV3eVdNL3lDQkplMVlTeUhQR0UxUjZOUGNNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: capi-kubeadm-bootstrap-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: bootstrap.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubeadmConfigTemplate
      listKind: KubeadmConfigTemplateList
      plural: kubeadmconfigtemplates
      singular: kubeadmconfigtemplate
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: KubeadmConfigTemplate is the Schema for the kubeadmconfigtemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeadmConfigTemplateSpec defines the desired state of
                KubeadmConfigTemplate
              properties:
                template:
                  description: KubeadmConfigTemplateResource defines the Template
                    structure
                  properties:
                    spec:
                      description: KubeadmConfigSpec defines the desired state of
                        KubeadmConfig. Either ClusterConfiguration and InitConfiguration
                        should be defined or the JoinConfiguration should be defined.
                      properties:
                        clusterConfiguration:
                          description: ClusterConfiguration along with InitConfiguration
                            are the configurations necessary for the init command
                          properties:
                            apiServer:
                              description: APIServer contains extra settings for the
                                API server control plane component
                              properties:
                                certSANs:
                                  description: CertSANs sets extra Subject Alternative
                                    Names for the API Server signing cert.
                                  items:
                                    type: string
                                  type: array
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                timeoutForControlPlane:
                                  description: TimeoutForControlPlane controls the
                                    timeout that we use for API server to appear
                                  type: string
                              type: object
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            certificatesDir:
                              description: 'CertificatesDir specifies where to store
                                or look for all required certificates. NB: if not
                                provided, this will default to `/etc/kubernetes/pki`'
                              type: string
                            clusterName:
                              description: The cluster name
                              type: string
                            controlPlaneEndpoint:
                              description: 'ControlPlaneEndpoint sets a stable IP
                                address or DNS name for the control plane; it can
                                be a valid IP address or a RFC-1123 DNS subdomain,
                                both with optional TCP port. In case the ControlPlaneEndpoint
                                is not specified, the AdvertiseAddress + BindPort
                                are used; in case the ControlPlaneEndpoint is specified
                                but without a TCP port, the BindPort is used. Possible
                                usages are: e.g. In a cluster with more than one control
                                plane instances, this field should be assigned the
                                address of the external load balancer in front of
                                the control plane instances. e.g.  in environments
                                with enforced node recycling, the ControlPlaneEndpoint
                                could be used for assigning a stable DNS to the control
                                plane. NB: This value defaults to the first value
                                in the Cluster object status.apiEndpoints array.'
                              type: string
                            controllerManager:
                              description: ControllerManager contains extra settings
                                for the controller manager control plane component
                              properties:
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                              type: object
                            dns:
                              description: DNS defines the options for the DNS add-on
                                installed in the cluster.
                              properties:
                                imageRepository:
                                  description: ImageRepository sets the container
                                    registry to pull images from. if not set, the
                                    ImageRepository defined in ClusterConfiguration
                                    will be used instead.
                                  type: string
                                imageTag:
                                  description: ImageTag allows to specify a tag for
                                    the image. In case this value is set, kubeadm
                                    does not change automatically the version of the
                                    above components during upgrades.
                                  type: string
                                type:
                                  description: Type defines the DNS add-on to be used
                                  type: string
                              type: object
                            etcd:
                              description: 'Etcd holds configuration for etcd. NB:
                                This value defaults to a Local (stacked) etcd'
                              properties:
                                external:
                                  description: External describes how to connect to
                                    an external etcd cluster Local and External are
                                    mutually exclusive
                                  properties:
                                    caFile:
                                      description: CAFile is an SSL Certificate Authority
                                        file used to secure etcd communication. Required
                                        if using a TLS connection.
                                      type: string
                                    certFile:
                                      description: CertFile is an SSL certification
                                        file used to secure etcd communication. Required
                                        if using a TLS connection.
                                      type: string
                                    endpoints:
                                      description: Endpoints of etcd members. Required
                                        for ExternalEtcd.
                                      items:
                                        type: string
                                      type: array
                                    keyFile:
                                      description: KeyFile is an SSL key file used
                                        to secure etcd communication. Required if
                                        using a TLS connection.
                                      type: string
                                  required:
                                  - caFile
                                  - certFile
                                  - endpoints
                                  - keyFile
                                  type: object
                                local:
                                  description: Local provides configuration knobs
                                    for configuring the local etcd instance Local
                                    and External are mutually exclusive
                                  properties:
                                    dataDir:
                                      description: DataDir is the directory etcd will
                                        place its data. Defaults to "/var/lib/etcd".
                                      type: string
                                    extraArgs:
                                      additionalProperties:
                                        type: string
                                      description: ExtraArgs are extra arguments provided
                                        to the etcd binary when run inside a static
                                        pod.
                                      type: object
                                    imageRepository:
                                      description: ImageRepository sets the container
                                        registry to pull images from. if not set,
                                        the ImageRepository defined in ClusterConfiguration
                                        will be used instead.
                                      type: string
                                    imageTag:
                                      description: ImageTag allows to specify a tag
                                        for the image. In case this value is set,
                                        kubeadm does not change automatically the
                                        version of the above components during upgrades.
                                      type: string
                                    peerCertSANs:
                                      description: PeerCertSANs sets extra Subject
                                        Alternative Names for the etcd peer signing
                                        cert.
                                      items:
                                        type: string
                                      type: array
                                    serverCertSANs:
                                      description: ServerCertSANs sets extra Subject
                                        Alternative Names for the etcd server signing
                                        cert.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            featureGates:
                              additionalProperties:
                                type: boolean
                              description: FeatureGates enabled by the user.
                              type: object
                            imageRepository:
                              description: ImageRepository sets the container registry
                                to pull images from. If empty, `k8s.gcr.io` will be
                                used by default; in case of kubernetes version is
                                a CI build (kubernetes version starts with `ci/` or
                                `ci-cross/`) `gcr.io/kubernetes-ci-images` will be
                                used as a default for control plane components and
                                for kube-proxy, while `k8s.gcr.io` will be used for
                                all the other images.
                              type: string
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            kubernetesVersion:
                              description: 'KubernetesVersion is the target version
                                of the control plane. NB: This value defaults to the
                                Machine object spec.kuberentesVersion'
                              type: string
                            networking:
                              description: 'Networking holds configuration for the
                                networking topology of the cluster. NB: This value
                                defaults to the Cluster object spec.clusterNetwork.'
                              properties:
                                dnsDomain:
                                  description: DNSDomain is the dns domain used by
                                    k8s services. Defaults to "cluster.local".
                                  type: string
                                podSubnet:
                                  description: PodSubnet is the subnet used by pods.
                                    If unset, the API server will not allocate CIDR
                                    ranges for every node. Defaults to the first element
                                    of the Cluster object's spec.clusterNetwork.services.cidrBlocks
                                    if that is set
                                  type: string
                                serviceSubnet:
                                  description: ServiceSubnet is the subnet used by
                                    k8s services. Defaults to the first element of
                                    the Cluster object's spec.clusterNetwork.pods.cidrBlocks
                                    field, or to "10.96.0.0/12" if that's unset.
                                  type: string
                              type: object
                            scheduler:
                              description: Scheduler contains extra settings for the
                                scheduler control plane component
                              properties:
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                              type: object
                            useHyperKubeImage:
                              description: UseHyperKubeImage controls if hyperkube
                                should be used for Kubernetes components instead of
                                their respective separate images
                              type: boolean
                          type: object
                        files:
                          description: Files specifies extra files to be passed to
                            user_data upon creation.
                          items:
                            description: File defines the input for generating write_files
                              in cloud-init.
                            properties:
                              content:
                                description: Content is the actual content of the
                                  file.
                                type: string
                              encoding:
                                description: Encoding specifies the encoding of the
                                  file contents.
                                enum:
                                - base64
                                - gzip
                                - gzip+base64
                                type: string
                              owner:
                                description: Owner specifies the ownership of the
                                  file, e.g. "root:root".
                                type: string
                              path:
                                description: Path specifies the full path on disk
                                  where to store the file.
                                type: string
                              permissions:
                                description: Permissions specifies the permissions
                                  to assign to the file, e.g. "0640".
                                type: string
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        format:
                          description: Format specifies the output format of the bootstrap
                            data
                          enum:
                          - cloud-config
                          type: string
                        initConfiguration:
                          description: InitConfiguration along with ClusterConfiguration
                            are the configurations necessary for the init command
                          properties:
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            bootstrapTokens:
                              description: BootstrapTokens is respected at `kubeadm
                                init` time and describes a set of Bootstrap Tokens
                                to create. This information IS NOT uploaded to the
                                kubeadm cluster configmap, partly because of its sensitive
                                nature
                              items:
                                description: BootstrapToken describes one bootstrap
                                  token, stored as a Secret in the cluster
                                properties:
                                  description:
                                    description: Description sets a human-friendly
                                      message why this token exists and what it's
                                      used for, so other administrators can know its
                                      purpose.
                                    type: string
                                  expires:
                                    description: Expires specifies the timestamp when
                                      this token expires. Defaults to being set dynamically
                                      at runtime based on the TTL. Expires and TTL
                                      are mutually exclusive.
                                    format: date-time
                                    type: string
                                  groups:
                                    description: Groups specifies the extra groups
                                      that this token will authenticate as when/if
                                      used for authentication
                                    items:
                                      type: string
                                    type: array
                                  token:
                                    description: Token is used for establishing bidirectional
                                      trust between nodes and control-planes. Used
                                      for joining nodes in the cluster.
                                    type: object
                                  ttl:
                                    description: TTL defines the time to live for
                                      this token. Defaults to 24h. Expires and TTL
                                      are mutually exclusive.
                                    type: string
                                  usages:
                                    description: Usages describes the ways in which
                                      this token can be used. Can by default be used
                                      for establishing bidirectional trust, but that
                                      can be changed here.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - token
                                type: object
                              type: array
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            localAPIEndpoint:
                              description: LocalAPIEndpoint represents the endpoint
                                of the API server instance that's deployed on this
                                control plane node In HA setups, this differs from
                                ClusterConfiguration.ControlPlaneEndpoint in the sense
                                that ControlPlaneEndpoint is the global endpoint for
                                the cluster, which then loadbalances the requests
                                to each individual API server. This configuration
                                object lets you customize what IP/DNS name and port
                                the local API server advertises it's accessible on.
                                By default, kubeadm tries to auto-detect the IP of
                                the default interface and use that, but in case that
                                process fails you may set the desired value here.
                              properties:
                                advertiseAddress:
                                  description: AdvertiseAddress sets the IP address
                                    for the API server to advertise.
                                  type: string
                                bindPort:
                                  description: BindPort sets the secure port for the
                                    API Server to bind to. Defaults to 6443.
                                  format: int32
                                  type: integer
                              required:
                              - advertiseAddress
                              - bindPort
                              type: object
                            nodeRegistration:
                              description: NodeRegistration holds fields that relate
                                to registering the new control-plane node to the cluster
                              properties:
                                criSocket:
                                  description: CRISocket is used to retrieve container
                                    runtime info. This information will be annotated
                                    to the Node API object, for later re-use
                                  type: string
                                kubeletExtraArgs:
                                  additionalProperties:
                                    type: string
                                  description: KubeletExtraArgs passes through extra
                                    arguments to the kubelet. The arguments here are
                                    passed to the kubelet command line via the environment
                                    file kubeadm writes at runtime for the kubelet
                                    to source. This overrides the generic base-level
                                    configuration in the kubelet-config-1.X ConfigMap
                                    Flags have higher priority when parsing. These
                                    values are local and specific to the node kubeadm
                                    is executing on.
                                  type: object
                                name:
                                  description: Name is the `.Metadata.Name` field
                                    of the Node API object that will be created in
                                    this `kubeadm init` or `kubeadm join` operation.
                                    This field is also used in the CommonName field
                                    of the kubelet's client certificate to the API
                                    server. Defaults to the hostname of the node if
                                    not provided.
                                  type: string
                                taints:
                                  description: 'Taints specifies the taints the Node
                                    API object should be registered with. If this
                                    field is unset, i.e. nil, in the `kubeadm init`
                                    process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                    If you don''t want to taint your control-plane
                                    node, set this field to an empty slice, i.e. `taints:
                                    {}` in the YAML file. This field is solely used
                                    for Node registration.'
                                  items:
                                    description: The node this Taint is attached to
                                      has the "effect" on any pod that does not tolerate
                                      the Taint.
                                    properties:
                                      effect:
                                        description: Required. The effect of the taint
                                          on pods that do not tolerate the taint.
                                          Valid effects are NoSchedule, PreferNoSchedule
                                          and NoExecute.
                                        type: string
                                      key:
                                        description: Required. The taint key to be
                                          applied to a node.
                                        type: string
                                      timeAdded:
                                        description: TimeAdded represents the time
                                          at which the taint was added. It is only
                                          written for NoExecute taints.
                                        format: date-time
                                        type: string
                                      value:
                                        description: Required. The taint value corresponding
                                          to the taint key.
                                        type: string
                                    required:
                                    - effect
                                    - key
                                    type: object
                                  type: array
                              type: object
                          type: object
                        joinConfiguration:
                          description: JoinConfiguration is the kubeadm configuration
                            for the join command
                          properties:
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            caCertPath:
                              description: 'CACertPath is the path to the SSL certificate
                                authority used to secure comunications between node
                                and control-plane. Defaults to "/etc/kubernetes/pki/ca.crt".
                                TODO: revisit when there is defaulting from k/k'
                              type: string
                            controlPlane:
                              description: ControlPlane defines the additional control
                                plane instance to be deployed on the joining node.
                                If nil, no additional control plane instance will
                                be deployed.
                              properties:
                                localAPIEndpoint:
                                  description: LocalAPIEndpoint represents the endpoint
                                    of the API server instance to be deployed on this
                                    node.
                                  properties:
                                    advertiseAddress:
                                      description: AdvertiseAddress sets the IP address
                                        for the API server to advertise.
                                      type: string
                                    bindPort:
                                      description: BindPort sets the secure port for
                                        the API Server to bind to. Defaults to 6443.
                                      format: int32
                                      type: integer
                                  required:
                                  - advertiseAddress
                                  - bindPort
                                  type: object
                              type: object
                            discovery:
                              description: 'Discovery specifies the options for the
                                kubelet to use during the TLS Bootstrap process TODO:
                                revisit when there is defaulting from k/k'
                              properties:
                                bootstrapToken:
                                  description: BootstrapToken is used to set the options
                                    for bootstrap token based discovery BootstrapToken
                                    and File are mutually exclusive
                                  properties:
                                    apiServerEndpoint:
                                      description: APIServerEndpoint is an IP or domain
                                        name to the API server from which info will
                                        be fetched.
                                      type: string
                                    caCertHashes:
                                      description: 'CACertHashes specifies a set of
                                        public key pins to verify when token-based
                                        discovery is used. The root CA found during
                                        discovery must match one of these values.
                                        Specifying an empty set disables root CA pinning,
                                        which can be unsafe. Each hash is specified
                                        as "<type>:<value>", where the only currently
                                        supported type is "sha256". This is a hex-encoded
                                        SHA-256 hash of the Subject Public Key Info
                                        (SPKI) object in DER-encoded ASN.1. These
                                        hashes can be calculated using, for example,
                                        OpenSSL: openssl x509 -pubkey -in ca.crt openssl
                                        rsa -pubin -outform der 2>&/dev/null | openssl
                                        dgst -sha256 -hex'
                                      items:
                                        type: string
                                      type: array
                                    token:
                                      description: Token is a token used to validate
                                        cluster information fetched from the control-plane.
                                      type: string
                                    unsafeSkipCAVerification:
                                      description: UnsafeSkipCAVerification allows
                                        token-based discovery without CA verification
                                        via CACertHashes. This can weaken the security
                                        of kubeadm since other nodes can impersonate
                                        the control-plane.
                                      type: boolean
                                  required:
                                  - token
                                  - unsafeSkipCAVerification
                                  type: object
                                file:
                                  description: File is used to specify a file or URL
                                    to a kubeconfig file from which to load cluster
                                    information BootstrapToken and File are mutually
                                    exclusive
                                  properties:
                                    kubeConfigPath:
                                      description: KubeConfigPath is used to specify
                                        the actual file path or URL to the kubeconfig
                                        file from which to load cluster information
                                      type: string
                                  required:
                                  - kubeConfigPath
                                  type: object
                                timeout:
                                  description: Timeout modifies the discovery timeout
                                  type: string
                                tlsBootstrapToken:
                                  description: 'TLSBootstrapToken is a token used
                                    for TLS bootstrapping. If .BootstrapToken is set,
                                    this field is defaulted to .BootstrapToken.Token,
                                    but can be overridden. If .File is set, this field
                                    **must be set** in case the KubeConfigFile does
                                    not contain any other authentication information
                                    TODO: revisit when there is defaulting from k/k'
                                  type: string
                              type: object
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            nodeRegistration:
                              description: NodeRegistration holds fields that relate
                                to registering the new control-plane node to the cluster
                              properties:
                                criSocket:
                                  description: CRISocket is used to retrieve container
                                    runtime info. This information will be annotated
                                    to the Node API object, for later re-use
                                  type: string
                                kubeletExtraArgs:
                                  additionalProperties:
                                    type: string
                                  description: KubeletExtraArgs passes through extra
                                    arguments to the kubelet. The arguments here are
                                    passed to the kubelet command line via the environment
                                    file kubeadm writes at runtime for the kubelet
                                    to source. This overrides the generic base-level
                                    configuration in the kubelet-config-1.X ConfigMap
                                    Flags have higher priority when parsing. These
                                    values are local and specific to the node kubeadm
                                    is executing on.
                                  type: object
                                name:
                                  description: Name is the `.Metadata.Name` field
                                    of the Node API object that will be created in
                                    this `kubeadm init` or `kubeadm join` operation.
                                    This field is also used in the CommonName field
                                    of the kubelet's client certificate to the API
                                    server. Defaults to the hostname of the node if
                                    not provided.
                                  type: string
                                taints:
                                  description: 'Taints specifies the taints the Node
                                    API object should be registered with. If this
                                    field is unset, i.e. nil, in the `kubeadm init`
                                    process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                    If you don''t want to taint your control-plane
                                    node, set this field to an empty slice, i.e. `taints:
                                    {}` in the YAML file. This field is solely used
                                    for Node registration.'
                                  items:
                                    description: The node this Taint is attached to
                                      has the "effect" on any pod that does not tolerate
                                      the Taint.
                                    properties:
                                      effect:
                                        description: Required. The effect of the taint
                                          on pods that do not tolerate the taint.
                                          Valid effects are NoSchedule, PreferNoSchedule
                                          and NoExecute.
                                        type: string
                                      key:
                                        description: Required. The taint key to be
                                          applied to a node.
                                        type: string
                                      timeAdded:
                                        description: TimeAdded represents the time
                                          at which the taint was added. It is only
                                          written for NoExecute taints.
                                        format: date-time
                                        type: string
                                      value:
                                        description: Required. The taint value corresponding
                                          to the taint key.
                                        type: string
                                    required:
                                    - effect
                                    - key
                                    type: object
                                  type: array
                              type: object
                          type: object
                        ntp:
                          description: NTP specifies NTP configuration
                          properties:
                            enabled:
                              description: Enabled specifies whether NTP should be
                                enabled
                              type: boolean
                            servers:
                              description: Servers specifies which NTP servers to
                                use
                              items:
                                type: string
                              type: array
                          type: object
                        postKubeadmCommands:
                          description: PostKubeadmCommands specifies extra commands
                            to run after kubeadm runs
                          items:
                            type: string
                          type: array
                        preKubeadmCommands:
                          description: PreKubeadmCommands specifies extra commands
                            to run before kubeadm runs
                          items:
                            type: string
                          type: array
                        users:
                          description: Users specifies extra users to add
                          items:
                            description: User defines the input for a generated user
                              in cloud-init.
                            properties:
                              gecos:
                                description: Gecos specifies the gecos to use for
                                  the user
                                type: string
                              groups:
                                description: Groups specifies the additional groups
                                  for the user
                                type: string
                              homeDir:
                                description: HomeDir specifies the home directory
                                  to use for the user
                                type: string
                              inactive:
                                description: Inactive specifies whether to mark the
                                  user as inactive
                                type: boolean
                              lockPassword:
                                description: LockPassword specifies if password login
                                  should be disabled
                                type: boolean
                              name:
                                description: Name specifies the user name
                                type: string
                              passwd:
                                description: Passwd specifies a hashed password for
                                  the user
                                type: string
                              primaryGroup:
                                description: PrimaryGroup specifies the primary group
                                  for the user
                                type: string
                              shell:
                                description: Shell specifies the user's shell
                                type: string
                              sshAuthorizedKeys:
                                description: SSHAuthorizedKeys specifies a list of
                                  ssh authorized keys for the user
                                items:
                                  type: string
                                type: array
                              sudo:
                                description: Sudo specifies a sudo role for the user
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                      type: object
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: false
    - name: v1alpha3
      schema:
        openAPIV3Schema:
          description: KubeadmConfigTemplate is the Schema for the kubeadmconfigtemplates
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeadmConfigTemplateSpec defines the desired state of
                KubeadmConfigTemplate
              properties:
                template:
                  description: KubeadmConfigTemplateResource defines the Template
                    structure
                  properties:
                    spec:
                      description: KubeadmConfigSpec defines the desired state of
                        KubeadmConfig. Either ClusterConfiguration and InitConfiguration
                        should be defined or the JoinConfiguration should be defined.
                      properties:
                        clusterConfiguration:
                          description: ClusterConfiguration along with InitConfiguration
                            are the configurations necessary for the init command
                          properties:
                            apiServer:
                              description: APIServer contains extra settings for the
                                API server control plane component
                              properties:
                                certSANs:
                                  description: CertSANs sets extra Subject Alternative
                                    Names for the API Server signing cert.
                                  items:
                                    type: string
                                  type: array
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                timeoutForControlPlane:
                                  description: TimeoutForControlPlane controls the
                                    timeout that we use for API server to appear
                                  type: string
                              type: object
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            certificatesDir:
                              description: 'CertificatesDir specifies where to store
                                or look for all required certificates. NB: if not
                                provided, this will default to `/etc/kubernetes/pki`'
                              type: string
                            clusterName:
                              description: The cluster name
                              type: string
                            controlPlaneEndpoint:
                              description: 'ControlPlaneEndpoint sets a stable IP
                                address or DNS name for the control plane; it can
                                be a valid IP address or a RFC-1123 DNS subdomain,
                                both with optional TCP port. In case the ControlPlaneEndpoint
                                is not specified, the AdvertiseAddress + BindPort
                                are used; in case the ControlPlaneEndpoint is specified
                                but without a TCP port, the BindPort is used. Possible
                                usages are: e.g. In a cluster with more than one control
                                plane instances, this field should be assigned the
                                address of the external load balancer in front of
                                the control plane instances. e.g.  in environments
                                with enforced node recycling, the ControlPlaneEndpoint
                                could be used for assigning a stable DNS to the control
                                plane. NB: This value defaults to the first value
                                in the Cluster object status.apiEndpoints array.'
                              type: string
                            controllerManager:
                              description: ControllerManager contains extra settings
                                for the controller manager control plane component
                              properties:
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                              type: object
                            dns:
                              description: DNS defines the options for the DNS add-on
                                installed in the cluster.
                              properties:
                                imageRepository:
                                  description: ImageRepository sets the container
                                    registry to pull images from. if not set, the
                                    ImageRepository defined in ClusterConfiguration
                                    will be used instead.
                                  type: string
                                imageTag:
                                  description: ImageTag allows to specify a tag for
                                    the image. In case this value is set, kubeadm
                                    does not change automatically the version of the
                                    above components during upgrades.
                                  type: string
                                type:
                                  description: Type defines the DNS add-on to be used
                                  type: string
                              type: object
                            etcd:
                              description: 'Etcd holds configuration for etcd. NB:
                                This value defaults to a Local (stacked) etcd'
                              properties:
                                external:
                                  description: External describes how to connect to
                                    an external etcd cluster Local and External are
                                    mutually exclusive
                                  properties:
                                    caFile:
                                      description: CAFile is an SSL Certificate Authority
                                        file used to secure etcd communication. Required
                                        if using a TLS connection.
                                      type: string
                                    certFile:
                                      description: CertFile is an SSL certification
                                        file used to secure etcd communication. Required
                                        if using a TLS connection.
                                      type: string
                                    endpoints:
                                      description: Endpoints of etcd members. Required
                                        for ExternalEtcd.
                                      items:
                                        type: string
                                      type: array
                                    keyFile:
                                      description: KeyFile is an SSL key file used
                                        to secure etcd communication. Required if
                                        using a TLS connection.
                                      type: string
                                  required:
                                  - caFile
                                  - certFile
                                  - endpoints
                                  - keyFile
                                  type: object
                                local:
                                  description: Local provides configuration knobs
                                    for configuring the local etcd instance Local
                                    and External are mutually exclusive
                                  properties:
                                    dataDir:
                                      description: DataDir is the directory etcd will
                                        place its data. Defaults to "/var/lib/etcd".
                                      type: string
                                    extraArgs:
                                      additionalProperties:
                                        type: string
                                      description: ExtraArgs are extra arguments provided
                                        to the etcd binary when run inside a static
                                        pod.
                                      type: object
                                    imageRepository:
                                      description: ImageRepository sets the container
                                        registry to pull images from. if not set,
                                        the ImageRepository defined in ClusterConfiguration
                                        will be used instead.
                                      type: string
                                    imageTag:
                                      description: ImageTag allows to specify a tag
                                        for the image. In case this value is set,
                                        kubeadm does not change automatically the
                                        version of the above components during upgrades.
                                      type: string
                                    peerCertSANs:
                                      description: PeerCertSANs sets extra Subject
                                        Alternative Names for the etcd peer signing
                                        cert.
                                      items:
                                        type: string
                                      type: array
                                    serverCertSANs:
                                      description: ServerCertSANs sets extra Subject
                                        Alternative Names for the etcd server signing
                                        cert.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            featureGates:
                              additionalProperties:
                                type: boolean
                              description: FeatureGates enabled by the user.
                              type: object
                            imageRepository:
                              description: ImageRepository sets the container registry
                                to pull images from. If empty, `k8s.gcr.io` will be
                                used by default; in case of kubernetes version is
                                a CI build (kubernetes version starts with `ci/` or
                                `ci-cross/`) `gcr.io/kubernetes-ci-images` will be
                                used as a default for control plane components and
                                for kube-proxy, while `k8s.gcr.io` will be used for
                                all the other images.
                              type: string
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            kubernetesVersion:
                              description: 'KubernetesVersion is the target version
                                of the control plane. NB: This value defaults to the
                                Machine object spec.kuberentesVersion'
                              type: string
                            networking:
                              description: 'Networking holds configuration for the
                                networking topology of the cluster. NB: This value
                                defaults to the Cluster object spec.clusterNetwork.'
                              properties:
                                dnsDomain:
                                  description: DNSDomain is the dns domain used by
                                    k8s services. Defaults to "cluster.local".
                                  type: string
                                podSubnet:
                                  description: PodSubnet is the subnet used by pods.
                                    If unset, the API server will not allocate CIDR
                                    ranges for every node. Defaults to the first element
                                    of the Cluster object's spec.clusterNetwork.services.cidrBlocks
                                    if that is set
                                  type: string
                                serviceSubnet:
                                  description: ServiceSubnet is the subnet used by
                                    k8s services. Defaults to the first element of
                                    the Cluster object's spec.clusterNetwork.pods.cidrBlocks
                                    field, or to "10.96.0.0/12" if that's unset.
                                  type: string
                              type: object
                            scheduler:
                              description: Scheduler contains extra settings for the
                                scheduler control plane component
                              properties:
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: 'ExtraArgs is an extra set of flags
                                    to pass to the control plane component. TODO:
                                    This is temporary and ideally we would like to
                                    switch all components to use ComponentConfig +
                                    ConfigMaps.'
                                  type: object
                                extraVolumes:
                                  description: ExtraVolumes is an extra set of host
                                    volumes, mounted to the control plane component.
                                  items:
                                    description: HostPathMount contains elements describing
                                      volumes that are mounted from the host.
                                    properties:
                                      hostPath:
                                        description: HostPath is the path in the host
                                          that will be mounted inside the pod.
                                        type: string
                                      mountPath:
                                        description: MountPath is the path inside
                                          the pod where hostPath will be mounted.
                                        type: string
                                      name:
                                        description: Name of the volume inside the
                                          pod template.
                                        type: string
                                      pathType:
                                        description: PathType is the type of the HostPath.
                                        type: string
                                      readOnly:
                                        description: ReadOnly controls write access
                                          to the volume
                                        type: boolean
                                    required:
                                    - hostPath
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                              type: object
                            useHyperKubeImage:
                              description: UseHyperKubeImage controls if hyperkube
                                should be used for Kubernetes components instead of
                                their respective separate images
                              type: boolean
                          type: object
                        files:
                          description: Files specifies extra files to be passed to
                            user_data upon creation.
                          items:
                            description: File defines the input for generating write_files
                              in cloud-init.
                            properties:
                              content:
                                description: Content is the actual content of the
                                  file.
                                type: string
                              encoding:
                                description: Encoding specifies the encoding of the
                                  file contents.
                                enum:
                                - base64
                                - gzip
                                - gzip+base64
                                type: string
                              owner:
                                description: Owner specifies the ownership of the
                                  file, e.g. "root:root".
                                type: string
                              path:
                                description: Path specifies the full path on disk
                                  where to store the file.
                                type: string
                              permissions:
                                description: Permissions specifies the permissions
                                  to assign to the file, e.g. "0640".
                                type: string
                            required:
                            - content
                            - path
                            type: object
                          type: array
                        format:
                          description: Format specifies the output format of the bootstrap
                            data
                          enum:
                          - cloud-config
                          type: string
                        initConfiguration:
                          description: InitConfiguration along with ClusterConfiguration
                            are the configurations necessary for the init command
                          properties:
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            bootstrapTokens:
                              description: BootstrapTokens is respected at `kubeadm
                                init` time and describes a set of Bootstrap Tokens
                                to create. This information IS NOT uploaded to the
                                kubeadm cluster configmap, partly because of its sensitive
                                nature
                              items:
                                description: BootstrapToken describes one bootstrap
                                  token, stored as a Secret in the cluster
                                properties:
                                  description:
                                    description: Description sets a human-friendly
                                      message why this token exists and what it's
                                      used for, so other administrators can know its
                                      purpose.
                                    type: string
                                  expires:
                                    description: Expires specifies the timestamp when
                                      this token expires. Defaults to being set dynamically
                                      at runtime based on the TTL. Expires and TTL
                                      are mutually exclusive.
                                    format: date-time
                                    type: string
                                  groups:
                                    description: Groups specifies the extra groups
                                      that this token will authenticate as when/if
                                      used for authentication
                                    items:
                                      type: string
                                    type: array
                                  token:
                                    description: Token is used for establishing bidirectional
                                      trust between nodes and control-planes. Used
                                      for joining nodes in the cluster.
                                    type: object
                                  ttl:
                                    description: TTL defines the time to live for
                                      this token. Defaults to 24h. Expires and TTL
                                      are mutually exclusive.
                                    type: string
                                  usages:
                                    description: Usages describes the ways in which
                                      this token can be used. Can by default be used
                                      for establishing bidirectional trust, but that
                                      can be changed here.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - token
                                type: object
                              type: array
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            localAPIEndpoint:
                              description: LocalAPIEndpoint represents the endpoint
                                of the API server instance that's deployed on this
                                control plane node In HA setups, this differs from
                                ClusterConfiguration.ControlPlaneEndpoint in the sense
                                that ControlPlaneEndpoint is the global endpoint for
                                the cluster, which then loadbalances the requests
                                to each individual API server. This configuration
                                object lets you customize what IP/DNS name and port
                                the local API server advertises it's accessible on.
                                By default, kubeadm tries to auto-detect the IP of
                                the default interface and use that, but in case that
                                process fails you may set the desired value here.
                              properties:
                                advertiseAddress:
                                  description: AdvertiseAddress sets the IP address
                                    for the API server to advertise.
                                  type: string
                                bindPort:
                                  description: BindPort sets the secure port for the
                                    API Server to bind to. Defaults to 6443.
                                  format: int32
                                  type: integer
                              required:
                              - advertiseAddress
                              - bindPort
                              type: object
                            nodeRegistration:
                              description: NodeRegistration holds fields that relate
                                to registering the new control-plane node to the cluster
                              properties:
                                criSocket:
                                  description: CRISocket is used to retrieve container
                                    runtime info. This information will be annotated
                                    to the Node API object, for later re-use
                                  type: string
                                kubeletExtraArgs:
                                  additionalProperties:
                                    type: string
                                  description: KubeletExtraArgs passes through extra
                                    arguments to the kubelet. The arguments here are
                                    passed to the kubelet command line via the environment
                                    file kubeadm writes at runtime for the kubelet
                                    to source. This overrides the generic base-level
                                    configuration in the kubelet-config-1.X ConfigMap
                                    Flags have higher priority when parsing. These
                                    values are local and specific to the node kubeadm
                                    is executing on.
                                  type: object
                                name:
                                  description: Name is the `.Metadata.Name` field
                                    of the Node API object that will be created in
                                    this `kubeadm init` or `kubeadm join` operation.
                                    This field is also used in the CommonName field
                                    of the kubelet's client certificate to the API
                                    server. Defaults to the hostname of the node if
                                    not provided.
                                  type: string
                                taints:
                                  description: 'Taints specifies the taints the Node
                                    API object should be registered with. If this
                                    field is unset, i.e. nil, in the `kubeadm init`
                                    process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                    If you don''t want to taint your control-plane
                                    node, set this field to an empty slice, i.e. `taints:
                                    {}` in the YAML file. This field is solely used
                                    for Node registration.'
                                  items:
                                    description: The node this Taint is attached to
                                      has the "effect" on any pod that does not tolerate
                                      the Taint.
                                    properties:
                                      effect:
                                        description: Required. The effect of the taint
                                          on pods that do not tolerate the taint.
                                          Valid effects are NoSchedule, PreferNoSchedule
                                          and NoExecute.
                                        type: string
                                      key:
                                        description: Required. The taint key to be
                                          applied to a node.
                                        type: string
                                      timeAdded:
                                        description: TimeAdded represents the time
                                          at which the taint was added. It is only
                                          written for NoExecute taints.
                                        format: date-time
                                        type: string
                                      value:
                                        description: Required. The taint value corresponding
                                          to the taint key.
                                        type: string
                                    required:
                                    - effect
                                    - key
                                    type: object
                                  type: array
                              type: object
                          type: object
                        joinConfiguration:
                          description: JoinConfiguration is the kubeadm configuration
                            for the join command
                          properties:
                            apiVersion:
                              description: 'APIVersion defines the versioned schema
                                of this representation of an object. Servers should
                                convert recognized schemas to the latest internal
                                value, and may reject unrecognized values. More info:
                                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                              type: string
                            caCertPath:
                              description: 'CACertPath is the path to the SSL certificate
                                authority used to secure comunications between node
                                and control-plane. Defaults to "/etc/kubernetes/pki/ca.crt".
                                TODO: revisit when there is defaulting from k/k'
                              type: string
                            controlPlane:
                              description: ControlPlane defines the additional control
                                plane instance to be deployed on the joining node.
                                If nil, no additional control plane instance will
                                be deployed.
                              properties:
                                localAPIEndpoint:
                                  description: LocalAPIEndpoint represents the endpoint
                                    of the API server instance to be deployed on this
                                    node.
                                  properties:
                                    advertiseAddress:
                                      description: AdvertiseAddress sets the IP address
                                        for the API server to advertise.
                                      type: string
                                    bindPort:
                                      description: BindPort sets the secure port for
                                        the API Server to bind to. Defaults to 6443.
                                      format: int32
                                      type: integer
                                  required:
                                  - advertiseAddress
                                  - bindPort
                                  type: object
                              type: object
                            discovery:
                              description: 'Discovery specifies the options for the
                                kubelet to use during the TLS Bootstrap process TODO:
                                revisit when there is defaulting from k/k'
                              properties:
                                bootstrapToken:
                                  description: BootstrapToken is used to set the options
                                    for bootstrap token based discovery BootstrapToken
                                    and File are mutually exclusive
                                  properties:
                                    apiServerEndpoint:
                                      description: APIServerEndpoint is an IP or domain
                                        name to the API server from which info will
                                        be fetched.
                                      type: string
                                    caCertHashes:
                                      description: 'CACertHashes specifies a set of
                                        public key pins to verify when token-based
                                        discovery is used. The root CA found during
                                        discovery must match one of these values.
                                        Specifying an empty set disables root CA pinning,
                                        which can be unsafe. Each hash is specified
                                        as "<type>:<value>", where the only currently
                                        supported type is "sha256". This is a hex-encoded
                                        SHA-256 hash of the Subject Public Key Info
                                        (SPKI) object in DER-encoded ASN.1. These
                                        hashes can be calculated using, for example,
                                        OpenSSL: openssl x509 -pubkey -in ca.crt openssl
                                        rsa -pubin -outform der 2>&/dev/null | openssl
                                        dgst -sha256 -hex'
                                      items:
                                        type: string
                                      type: array
                                    token:
                                      description: Token is a token used to validate
                                        cluster information fetched from the control-plane.
                                      type: string
                                    unsafeSkipCAVerification:
                                      description: UnsafeSkipCAVerification allows
                                        token-based discovery without CA verification
                                        via CACertHashes. This can weaken the security
                                        of kubeadm since other nodes can impersonate
                                        the control-plane.
                                      type: boolean
                                  required:
                                  - token
                                  - unsafeSkipCAVerification
                                  type: object
                                file:
                                  description: File is used to specify a file or URL
                                    to a kubeconfig file from which to load cluster
                                    information BootstrapToken and File are mutually
                                    exclusive
                                  properties:
                                    kubeConfigPath:
                                      description: KubeConfigPath is used to specify
                                        the actual file path or URL to the kubeconfig
                                        file from which to load cluster information
                                      type: string
                                  required:
                                  - kubeConfigPath
                                  type: object
                                timeout:
                                  description: Timeout modifies the discovery timeout
                                  type: string
                                tlsBootstrapToken:
                                  description: 'TLSBootstrapToken is a token used
                                    for TLS bootstrapping. If .BootstrapToken is set,
                                    this field is defaulted to .BootstrapToken.Token,
                                    but can be overridden. If .File is set, this field
                                    **must be set** in case the KubeConfigFile does
                                    not contain any other authentication information
                                    TODO: revisit when there is defaulting from k/k'
                                  type: string
                              type: object
                            kind:
                              description: 'Kind is a string value representing the
                                REST resource this object represents. Servers may
                                infer this from the endpoint the client submits requests
                                to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            nodeRegistration:
                              description: NodeRegistration holds fields that relate
                                to registering the new control-plane node to the cluster
                              properties:
                                criSocket:
                                  description: CRISocket is used to retrieve container
                                    runtime info. This information will be annotated
                                    to the Node API object, for later re-use
                                  type: string
                                kubeletExtraArgs:
                                  additionalProperties:
                                    type: string
                                  description: KubeletExtraArgs passes through extra
                                    arguments to the kubelet. The arguments here are
                                    passed to the kubelet command line via the environment
                                    file kubeadm writes at runtime for the kubelet
                                    to source. This overrides the generic base-level
                                    configuration in the kubelet-config-1.X ConfigMap
                                    Flags have higher priority when parsing. These
                                    values are local and specific to the node kubeadm
                                    is executing on.
                                  type: object
                                name:
                                  description: Name is the `.Metadata.Name` field
                                    of the Node API object that will be created in
                                    this `kubeadm init` or `kubeadm join` operation.
                                    This field is also used in the CommonName field
                                    of the kubelet's client certificate to the API
                                    server. Defaults to the hostname of the node if
                                    not provided.
                                  type: string
                                taints:
                                  description: 'Taints specifies the taints the Node
                                    API object should be registered with. If this
                                    field is unset, i.e. nil, in the `kubeadm init`
                                    process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                    If you don''t want to taint your control-plane
                                    node, set this field to an empty slice, i.e. `taints:
                                    {}` in the YAML file. This field is solely used
                                    for Node registration.'
                                  items:
                                    description: The node this Taint is attached to
                                      has the "effect" on any pod that does not tolerate
                                      the Taint.
                                    properties:
                                      effect:
                                        description: Required. The effect of the taint
                                          on pods that do not tolerate the taint.
                                          Valid effects are NoSchedule, PreferNoSchedule
                                          and NoExecute.
                                        type: string
                                      key:
                                        description: Required. The taint key to be
                                          applied to a node.
                                        type: string
                                      timeAdded:
                                        description: TimeAdded represents the time
                                          at which the taint was added. It is only
                                          written for NoExecute taints.
                                        format: date-time
                                        type: string
                                      value:
                                        description: Required. The taint value corresponding
                                          to the taint key.
                                        type: string
                                    required:
                                    - effect
                                    - key
                                    type: object
                                  type: array
                              type: object
                          type: object
                        ntp:
                          description: NTP specifies NTP configuration
                          properties:
                            enabled:
                              description: Enabled specifies whether NTP should be
                                enabled
                              type: boolean
                            servers:
                              description: Servers specifies which NTP servers to
                                use
                              items:
                                type: string
                              type: array
                          type: object
                        postKubeadmCommands:
                          description: PostKubeadmCommands specifies extra commands
                            to run after kubeadm runs
                          items:
                            type: string
                          type: array
                        preKubeadmCommands:
                          description: PreKubeadmCommands specifies extra commands
                            to run before kubeadm runs
                          items:
                            type: string
                          type: array
                        useExperimentalRetryJoin:
                          description: "UseExperimentalRetryJoin replaces a basic
                            kubeadm command with a shell script with retries for joins.
                            \n This is meant to be an experimental temporary workaround
                            on some environments where joins fail due to timing (and
                            other issues). The long term goal is to add retries to
                            kubeadm proper and use that functionality. \n This will
                            add about 40KB to userdata \n For more information, refer
                            to https://github.com/kubernetes-sigs/cluster-api/pull/2763#discussion_r397306055."
                          type: boolean
                        users:
                          description: Users specifies extra users to add
                          items:
                            description: User defines the input for a generated user
                              in cloud-init.
                            properties:
                              gecos:
                                description: Gecos specifies the gecos to use for
                                  the user
                                type: string
                              groups:
                                description: Groups specifies the additional groups
                                  for the user
                                type: string
                              homeDir:
                                description: HomeDir specifies the home directory
                                  to use for the user
                                type: string
                              inactive:
                                description: Inactive specifies whether to mark the
                                  user as inactive
                                type: boolean
                              lockPassword:
                                description: LockPassword specifies if password login
                                  should be disabled
                                type: boolean
                              name:
                                description: Name specifies the user name
                                type: string
                              passwd:
                                description: Passwd specifies a hashed password for
                                  the user
                                type: string
                              primaryGroup:
                                description: PrimaryGroup specifies the primary group
                                  for the user
                                type: string
                              shell:
                                description: Shell specifies the user's shell
                                type: string
                              sshAuthorizedKeys:
                                description: SSHAuthorizedKeys specifies a list of
                                  ssh authorized keys for the user
                                items:
                                  type: string
                                type: array
                              sudo:
                                description: Sudo specifies a sudo role for the user
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        verbosity:
                          description: Verbosity is the number for the kubeadm log
                            level verbosity. It overrides the `--v` flag in kubeadm
                            commands.
                          format: int32
                          type: integer
                      type: object
                  type: object
              required:
              - template
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-kubeadm-control-plane-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: control-plane-kubeadm
      cluster.x-k8s.io/v1alpha3: v1alpha3
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: kubeadmcontrolplanes.controlplane.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmakNDQW1hZ0F3SUJBZ0lRQzJsUGVibllTb290QTkzWTRid0MwekFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRFd1doY05NakF3T1RBMwpNREkxTVRFd1dqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDL3VNSXpxSnBjL3hyZkpQdUVRbUdtV2pYTWJLeksyOHFKdWZYYVA2QWwKTktmZ0tqbGNkZTBoUnJ4NzNNUWxJTVJSbUMzSmlOYWplUURCZ2V5and1YmUvQ25QRnB0YTdxL3ZaUDF0UlhyWgo1RGtXUWdhZzBycWNMVUcvRndlTE9QcHMyekMxVGRvSERuZHFzNmU5aUN6ci9KSExhQmhlVkgzMzdnUmhZQ1V3ClRMS0pDZ0gxZGlSd0VHRWpySy84Y0VPZ1ZMY1FaU2c0ZHk1TmJyOFNNWlBBL3BKTmsvdWNSdDRIQzlQb0kyQjUKYk9xNDJtdFljRXoxa0dNeWFFcTJCeXBpQWVDNkJKYnRUMDhpSHNhTE93bXhYUG1seW00Ykora2RDbWlsWHpqMQpCYVkxeXZ0RHBlcWlxam9mK3hEa1o5dU54QXpKN2tkZjBNeEJ5NzI4MS84VEFnTUJBQUdqZ2NVd2djSXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2dhRUdBMVVkRVFTQm1UQ0Jsb0pDWTJGd2FTMXIKZFdKbFlXUnRMV052Ym5SeWIyd3RjR3hoYm1VdGQyVmlhRzl2YXkxelpYSjJhV05sTG1OaGNHa3RkMlZpYUc5dgpheTF6ZVhOMFpXMHVjM1pqZ2xCallYQnBMV3QxWW1WaFpHMHRZMjl1ZEhKdmJDMXdiR0Z1WlMxM1pXSm9iMjlyCkxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBY1lkL2I1cWV0UUcrK3VFS2hNYUNlcGJoRTYzS282UE1EaGVSd0d2cQorb1pYL3NVNUtKcWRtMGJWRzFJVTk2Z29xL1krcFVGcExFYVhncEVDSzBCY2Z3b1IwaGFDVEgxM0lib2ZuaWQ4Ci9DT29qclZvTjZwbUlYSXhRL2pvSHNGVUQ4Z0RrT0hDWTZocmNyUzEwUnRQZ21VajRURkZwbGJGeFh1bThXK3AKZW8waDVmUWlRdTdTbThhVWFsNk1uMng5QzRJcEord3FUOEJnbG0yczM1L1pzckdranFLakIxemhjbGxOSDlnQwpTYmxKQ0EwczUzZXAwbUhJV3hqTkVCdnZmL2RiWCs4di9SUEROdW1xZzRvNXUyQXFqOFlLV2lzdUZDcUJBbEFGCnY3YkFCMVhKUGkxVXJLSkN6WUxXQVhxOCt2NE9nTlJ2NkFtQTZCQmRHcnZ1d3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          service:
            name: capi-kubeadm-control-plane-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: controlplane.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: KubeadmControlPlane
      listKind: KubeadmControlPlaneList
      plural: kubeadmcontrolplanes
      shortNames:
      - kcp
      singular: kubeadmcontrolplane
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: KubeadmControlPlane API Server is ready to receive requests
        jsonPath: .status.ready
        name: Ready
        type: boolean
      - description: This denotes whether or not the control plane has the uploaded
          kubeadm-config configmap
        jsonPath: .status.initialized
        name: Initialized
        type: boolean
      - description: Total number of non-terminated machines targeted by this control
          plane
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of fully running and ready control plane machines
        jsonPath: .status.readyReplicas
        name: Ready Replicas
        type: integer
      - description: Total number of non-terminated machines targeted by this control
          plane that have the desired template spec
        jsonPath: .status.updatedReplicas
        name: Updated Replicas
        type: integer
      - description: Total number of unavailable machines targeted by this control
          plane
        jsonPath: .status.unavailableReplicas
        name: Unavailable Replicas
        type: integer
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: KubeadmControlPlane is the Schema for the KubeadmControlPlane
            API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: KubeadmControlPlaneSpec defines the desired state of KubeadmControlPlane.
              properties:
                infrastructureTemplate:
                  description: InfrastructureTemplate is a required reference to a
                    custom resource offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                kubeadmConfigSpec:
                  description: KubeadmConfigSpec is a KubeadmConfigSpec to use for
                    initializing and joining machines to the control plane.
                  properties:
                    clusterConfiguration:
                      description: ClusterConfiguration along with InitConfiguration
                        are the configurations necessary for the init command
                      properties:
                        apiServer:
                          description: APIServer contains extra settings for the API
                            server control plane component
                          properties:
                            certSANs:
                              description: CertSANs sets extra Subject Alternative
                                Names for the API Server signing cert.
                              items:
                                type: string
                              type: array
                            extraArgs:
                              additionalProperties:
                                type: string
                              description: 'ExtraArgs is an extra set of flags to
                                pass to the control plane component. TODO: This is
                                temporary and ideally we would like to switch all
                                components to use ComponentConfig + ConfigMaps.'
                              type: object
                            extraVolumes:
                              description: ExtraVolumes is an extra set of host volumes,
                                mounted to the control plane component.
                              items:
                                description: HostPathMount contains elements describing
                                  volumes that are mounted from the host.
                                properties:
                                  hostPath:
                                    description: HostPath is the path in the host
                                      that will be mounted inside the pod.
                                    type: string
                                  mountPath:
                                    description: MountPath is the path inside the
                                      pod where hostPath will be mounted.
                                    type: string
                                  name:
                                    description: Name of the volume inside the pod
                                      template.
                                    type: string
                                  pathType:
                                    description: PathType is the type of the HostPath.
                                    type: string
                                  readOnly:
                                    description: ReadOnly controls write access to
                                      the volume
                                    type: boolean
                                required:
                                - hostPath
                                - mountPath
                                - name
                                type: object
                              type: array
                            timeoutForControlPlane:
                              description: TimeoutForControlPlane controls the timeout
                                that we use for API server to appear
                              type: string
                          type: object
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        certificatesDir:
                          description: 'CertificatesDir specifies where to store or
                            look for all required certificates. NB: if not provided,
                            this will default to `/etc/kubernetes/pki`'
                          type: string
                        clusterName:
                          description: The cluster name
                          type: string
                        controlPlaneEndpoint:
                          description: 'ControlPlaneEndpoint sets a stable IP address
                            or DNS name for the control plane; it can be a valid IP
                            address or a RFC-1123 DNS subdomain, both with optional
                            TCP port. In case the ControlPlaneEndpoint is not specified,
                            the AdvertiseAddress + BindPort are used; in case the
                            ControlPlaneEndpoint is specified but without a TCP port,
                            the BindPort is used. Possible usages are: e.g. In a cluster
                            with more than one control plane instances, this field
                            should be assigned the address of the external load balancer
                            in front of the control plane instances. e.g.  in environments
                            with enforced node recycling, the ControlPlaneEndpoint
                            could be used for assigning a stable DNS to the control
                            plane. NB: This value defaults to the first value in the
                            Cluster object status.apiEndpoints array.'
                          type: string
                        controllerManager:
                          description: ControllerManager contains extra settings for
                            the controller manager control plane component
                          properties:
                            extraArgs:
                              additionalProperties:
                                type: string
                              description: 'ExtraArgs is an extra set of flags to
                                pass to the control plane component. TODO: This is
                                temporary and ideally we would like to switch all
                                components to use ComponentConfig + ConfigMaps.'
                              type: object
                            extraVolumes:
                              description: ExtraVolumes is an extra set of host volumes,
                                mounted to the control plane component.
                              items:
                                description: HostPathMount contains elements describing
                                  volumes that are mounted from the host.
                                properties:
                                  hostPath:
                                    description: HostPath is the path in the host
                                      that will be mounted inside the pod.
                                    type: string
                                  mountPath:
                                    description: MountPath is the path inside the
                                      pod where hostPath will be mounted.
                                    type: string
                                  name:
                                    description: Name of the volume inside the pod
                                      template.
                                    type: string
                                  pathType:
                                    description: PathType is the type of the HostPath.
                                    type: string
                                  readOnly:
                                    description: ReadOnly controls write access to
                                      the volume
                                    type: boolean
                                required:
                                - hostPath
                                - mountPath
                                - name
                                type: object
                              type: array
                          type: object
                        dns:
                          description: DNS defines the options for the DNS add-on
                            installed in the cluster.
                          properties:
                            imageRepository:
                              description: ImageRepository sets the container registry
                                to pull images from. if not set, the ImageRepository
                                defined in ClusterConfiguration will be used instead.
                              type: string
                            imageTag:
                              description: ImageTag allows to specify a tag for the
                                image. In case this value is set, kubeadm does not
                                change automatically the version of the above components
                                during upgrades.
                              type: string
                            type:
                              description: Type defines the DNS add-on to be used
                              type: string
                          type: object
                        etcd:
                          description: 'Etcd holds configuration for etcd. NB: This
                            value defaults to a Local (stacked) etcd'
                          properties:
                            external:
                              description: External describes how to connect to an
                                external etcd cluster Local and External are mutually
                                exclusive
                              properties:
                                caFile:
                                  description: CAFile is an SSL Certificate Authority
                                    file used to secure etcd communication. Required
                                    if using a TLS connection.
                                  type: string
                                certFile:
                                  description: CertFile is an SSL certification file
                                    used to secure etcd communication. Required if
                                    using a TLS connection.
                                  type: string
                                endpoints:
                                  description: Endpoints of etcd members. Required
                                    for ExternalEtcd.
                                  items:
                                    type: string
                                  type: array
                                keyFile:
                                  description: KeyFile is an SSL key file used to
                                    secure etcd communication. Required if using a
                                    TLS connection.
                                  type: string
                              required:
                              - caFile
                              - certFile
                              - endpoints
                              - keyFile
                              type: object
                            local:
                              description: Local provides configuration knobs for
                                configuring the local etcd instance Local and External
                                are mutually exclusive
                              properties:
                                dataDir:
                                  description: DataDir is the directory etcd will
                                    place its data. Defaults to "/var/lib/etcd".
                                  type: string
                                extraArgs:
                                  additionalProperties:
                                    type: string
                                  description: ExtraArgs are extra arguments provided
                                    to the etcd binary when run inside a static pod.
                                  type: object
                                imageRepository:
                                  description: ImageRepository sets the container
                                    registry to pull images from. if not set, the
                                    ImageRepository defined in ClusterConfiguration
                                    will be used instead.
                                  type: string
                                imageTag:
                                  description: ImageTag allows to specify a tag for
                                    the image. In case this value is set, kubeadm
                                    does not change automatically the version of the
                                    above components during upgrades.
                                  type: string
                                peerCertSANs:
                                  description: PeerCertSANs sets extra Subject Alternative
                                    Names for the etcd peer signing cert.
                                  items:
                                    type: string
                                  type: array
                                serverCertSANs:
                                  description: ServerCertSANs sets extra Subject Alternative
                                    Names for the etcd server signing cert.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        featureGates:
                          additionalProperties:
                            type: boolean
                          description: FeatureGates enabled by the user.
                          type: object
                        imageRepository:
                          description: ImageRepository sets the container registry
                            to pull images from. If empty, `k8s.gcr.io` will be used
                            by default; in case of kubernetes version is a CI build
                            (kubernetes version starts with `ci/` or `ci-cross/`)
                            `gcr.io/kubernetes-ci-images` will be used as a default
                            for control plane components and for kube-proxy, while
                            `k8s.gcr.io` will be used for all the other images.
                          type: string
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        kubernetesVersion:
                          description: 'KubernetesVersion is the target version of
                            the control plane. NB: This value defaults to the Machine
                            object spec.kuberentesVersion'
                          type: string
                        networking:
                          description: 'Networking holds configuration for the networking
                            topology of the cluster. NB: This value defaults to the
                            Cluster object spec.clusterNetwork.'
                          properties:
                            dnsDomain:
                              description: DNSDomain is the dns domain used by k8s
                                services. Defaults to "cluster.local".
                              type: string
                            podSubnet:
                              description: PodSubnet is the subnet used by pods. If
                                unset, the API server will not allocate CIDR ranges
                                for every node. Defaults to the first element of the
                                Cluster object's spec.clusterNetwork.services.cidrBlocks
                                if that is set
                              type: string
                            serviceSubnet:
                              description: ServiceSubnet is the subnet used by k8s
                                services. Defaults to the first element of the Cluster
                                object's spec.clusterNetwork.pods.cidrBlocks field,
                                or to "10.96.0.0/12" if that's unset.
                              type: string
                          type: object
                        scheduler:
                          description: Scheduler contains extra settings for the scheduler
                            control plane component
                          properties:
                            extraArgs:
                              additionalProperties:
                                type: string
                              description: 'ExtraArgs is an extra set of flags to
                                pass to the control plane component. TODO: This is
                                temporary and ideally we would like to switch all
                                components to use ComponentConfig + ConfigMaps.'
                              type: object
                            extraVolumes:
                              description: ExtraVolumes is an extra set of host volumes,
                                mounted to the control plane component.
                              items:
                                description: HostPathMount contains elements describing
                                  volumes that are mounted from the host.
                                properties:
                                  hostPath:
                                    description: HostPath is the path in the host
                                      that will be mounted inside the pod.
                                    type: string
                                  mountPath:
                                    description: MountPath is the path inside the
                                      pod where hostPath will be mounted.
                                    type: string
                                  name:
                                    description: Name of the volume inside the pod
                                      template.
                                    type: string
                                  pathType:
                                    description: PathType is the type of the HostPath.
                                    type: string
                                  readOnly:
                                    description: ReadOnly controls write access to
                                      the volume
                                    type: boolean
                                required:
                                - hostPath
                                - mountPath
                                - name
                                type: object
                              type: array
                          type: object
                        useHyperKubeImage:
                          description: UseHyperKubeImage controls if hyperkube should
                            be used for Kubernetes components instead of their respective
                            separate images
                          type: boolean
                      type: object
                    files:
                      description: Files specifies extra files to be passed to user_data
                        upon creation.
                      items:
                        description: File defines the input for generating write_files
                          in cloud-init.
                        properties:
                          content:
                            description: Content is the actual content of the file.
                            type: string
                          encoding:
                            description: Encoding specifies the encoding of the file
                              contents.
                            enum:
                            - base64
                            - gzip
                            - gzip+base64
                            type: string
                          owner:
                            description: Owner specifies the ownership of the file,
                              e.g. "root:root".
                            type: string
                          path:
                            description: Path specifies the full path on disk where
                              to store the file.
                            type: string
                          permissions:
                            description: Permissions specifies the permissions to
                              assign to the file, e.g. "0640".
                            type: string
                        required:
                        - content
                        - path
                        type: object
                      type: array
                    format:
                      description: Format specifies the output format of the bootstrap
                        data
                      enum:
                      - cloud-config
                      type: string
                    initConfiguration:
                      description: InitConfiguration along with ClusterConfiguration
                        are the configurations necessary for the init command
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        bootstrapTokens:
                          description: BootstrapTokens is respected at `kubeadm init`
                            time and describes a set of Bootstrap Tokens to create.
                            This information IS NOT uploaded to the kubeadm cluster
                            configmap, partly because of its sensitive nature
                          items:
                            description: BootstrapToken describes one bootstrap token,
                              stored as a Secret in the cluster
                            properties:
                              description:
                                description: Description sets a human-friendly message
                                  why this token exists and what it's used for, so
                                  other administrators can know its purpose.
                                type: string
                              expires:
                                description: Expires specifies the timestamp when
                                  this token expires. Defaults to being set dynamically
                                  at runtime based on the TTL. Expires and TTL are
                                  mutually exclusive.
                                format: date-time
                                type: string
                              groups:
                                description: Groups specifies the extra groups that
                                  this token will authenticate as when/if used for
                                  authentication
                                items:
                                  type: string
                                type: array
                              token:
                                description: Token is used for establishing bidirectional
                                  trust between nodes and control-planes. Used for
                                  joining nodes in the cluster.
                                type: object
                              ttl:
                                description: TTL defines the time to live for this
                                  token. Defaults to 24h. Expires and TTL are mutually
                                  exclusive.
                                type: string
                              usages:
                                description: Usages describes the ways in which this
                                  token can be used. Can by default be used for establishing
                                  bidirectional trust, but that can be changed here.
                                items:
                                  type: string
                                type: array
                            required:
                            - token
                            type: object
                          type: array
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        localAPIEndpoint:
                          description: LocalAPIEndpoint represents the endpoint of
                            the API server instance that's deployed on this control
                            plane node In HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint
                            in the sense that ControlPlaneEndpoint is the global endpoint
                            for the cluster, which then loadbalances the requests
                            to each individual API server. This configuration object
                            lets you customize what IP/DNS name and port the local
                            API server advertises it's accessible on. By default,
                            kubeadm tries to auto-detect the IP of the default interface
                            and use that, but in case that process fails you may set
                            the desired value here.
                          properties:
                            advertiseAddress:
                              description: AdvertiseAddress sets the IP address for
                                the API server to advertise.
                              type: string
                            bindPort:
                              description: BindPort sets the secure port for the API
                                Server to bind to. Defaults to 6443.
                              format: int32
                              type: integer
                          required:
                          - advertiseAddress
                          - bindPort
                          type: object
                        nodeRegistration:
                          description: NodeRegistration holds fields that relate to
                            registering the new control-plane node to the cluster
                          properties:
                            criSocket:
                              description: CRISocket is used to retrieve container
                                runtime info. This information will be annotated to
                                the Node API object, for later re-use
                              type: string
                            kubeletExtraArgs:
                              additionalProperties:
                                type: string
                              description: KubeletExtraArgs passes through extra arguments
                                to the kubelet. The arguments here are passed to the
                                kubelet command line via the environment file kubeadm
                                writes at runtime for the kubelet to source. This
                                overrides the generic base-level configuration in
                                the kubelet-config-1.X ConfigMap Flags have higher
                                priority when parsing. These values are local and
                                specific to the node kubeadm is executing on.
                              type: object
                            name:
                              description: Name is the `.Metadata.Name` field of the
                                Node API object that will be created in this `kubeadm
                                init` or `kubeadm join` operation. This field is also
                                used in the CommonName field of the kubelet's client
                                certificate to the API server. Defaults to the hostname
                                of the node if not provided.
                              type: string
                            taints:
                              description: 'Taints specifies the taints the Node API
                                object should be registered with. If this field is
                                unset, i.e. nil, in the `kubeadm init` process it
                                will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                If you don''t want to taint your control-plane node,
                                set this field to an empty slice, i.e. `taints: {}`
                                in the YAML file. This field is solely used for Node
                                registration.'
                              items:
                                description: The node this Taint is attached to has
                                  the "effect" on any pod that does not tolerate the
                                  Taint.
                                properties:
                                  effect:
                                    description: Required. The effect of the taint
                                      on pods that do not tolerate the taint. Valid
                                      effects are NoSchedule, PreferNoSchedule and
                                      NoExecute.
                                    type: string
                                  key:
                                    description: Required. The taint key to be applied
                                      to a node.
                                    type: string
                                  timeAdded:
                                    description: TimeAdded represents the time at
                                      which the taint was added. It is only written
                                      for NoExecute taints.
                                    format: date-time
                                    type: string
                                  value:
                                    description: Required. The taint value corresponding
                                      to the taint key.
                                    type: string
                                required:
                                - effect
                                - key
                                type: object
                              type: array
                          type: object
                      type: object
                    joinConfiguration:
                      description: JoinConfiguration is the kubeadm configuration
                        for the join command
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                          type: string
                        caCertPath:
                          description: 'CACertPath is the path to the SSL certificate
                            authority used to secure comunications between node and
                            control-plane. Defaults to "/etc/kubernetes/pki/ca.crt".
                            TODO: revisit when there is defaulting from k/k'
                          type: string
                        controlPlane:
                          description: ControlPlane defines the additional control
                            plane instance to be deployed on the joining node. If
                            nil, no additional control plane instance will be deployed.
                          properties:
                            localAPIEndpoint:
                              description: LocalAPIEndpoint represents the endpoint
                                of the API server instance to be deployed on this
                                node.
                              properties:
                                advertiseAddress:
                                  description: AdvertiseAddress sets the IP address
                                    for the API server to advertise.
                                  type: string
                                bindPort:
                                  description: BindPort sets the secure port for the
                                    API Server to bind to. Defaults to 6443.
                                  format: int32
                                  type: integer
                              required:
                              - advertiseAddress
                              - bindPort
                              type: object
                          type: object
                        discovery:
                          description: 'Discovery specifies the options for the kubelet
                            to use during the TLS Bootstrap process TODO: revisit
                            when there is defaulting from k/k'
                          properties:
                            bootstrapToken:
                              description: BootstrapToken is used to set the options
                                for bootstrap token based discovery BootstrapToken
                                and File are mutually exclusive
                              properties:
                                apiServerEndpoint:
                                  description: APIServerEndpoint is an IP or domain
                                    name to the API server from which info will be
                                    fetched.
                                  type: string
                                caCertHashes:
                                  description: 'CACertHashes specifies a set of public
                                    key pins to verify when token-based discovery
                                    is used. The root CA found during discovery must
                                    match one of these values. Specifying an empty
                                    set disables root CA pinning, which can be unsafe.
                                    Each hash is specified as "<type>:<value>", where
                                    the only currently supported type is "sha256".
                                    This is a hex-encoded SHA-256 hash of the Subject
                                    Public Key Info (SPKI) object in DER-encoded ASN.1.
                                    These hashes can be calculated using, for example,
                                    OpenSSL: openssl x509 -pubkey -in ca.crt openssl
                                    rsa -pubin -outform der 2>&/dev/null | openssl
                                    dgst -sha256 -hex'
                                  items:
                                    type: string
                                  type: array
                                token:
                                  description: Token is a token used to validate cluster
                                    information fetched from the control-plane.
                                  type: string
                                unsafeSkipCAVerification:
                                  description: UnsafeSkipCAVerification allows token-based
                                    discovery without CA verification via CACertHashes.
                                    This can weaken the security of kubeadm since
                                    other nodes can impersonate the control-plane.
                                  type: boolean
                              required:
                              - token
                              - unsafeSkipCAVerification
                              type: object
                            file:
                              description: File is used to specify a file or URL to
                                a kubeconfig file from which to load cluster information
                                BootstrapToken and File are mutually exclusive
                              properties:
                                kubeConfigPath:
                                  description: KubeConfigPath is used to specify the
                                    actual file path or URL to the kubeconfig file
                                    from which to load cluster information
                                  type: string
                              required:
                              - kubeConfigPath
                              type: object
                            timeout:
                              description: Timeout modifies the discovery timeout
                              type: string
                            tlsBootstrapToken:
                              description: 'TLSBootstrapToken is a token used for
                                TLS bootstrapping. If .BootstrapToken is set, this
                                field is defaulted to .BootstrapToken.Token, but can
                                be overridden. If .File is set, this field **must
                                be set** in case the KubeConfigFile does not contain
                                any other authentication information TODO: revisit
                                when there is defaulting from k/k'
                              type: string
                          type: object
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        nodeRegistration:
                          description: NodeRegistration holds fields that relate to
                            registering the new control-plane node to the cluster
                          properties:
                            criSocket:
                              description: CRISocket is used to retrieve container
                                runtime info. This information will be annotated to
                                the Node API object, for later re-use
                              type: string
                            kubeletExtraArgs:
                              additionalProperties:
                                type: string
                              description: KubeletExtraArgs passes through extra arguments
                                to the kubelet. The arguments here are passed to the
                                kubelet command line via the environment file kubeadm
                                writes at runtime for the kubelet to source. This
                                overrides the generic base-level configuration in
                                the kubelet-config-1.X ConfigMap Flags have higher
                                priority when parsing. These values are local and
                                specific to the node kubeadm is executing on.
                              type: object
                            name:
                              description: Name is the `.Metadata.Name` field of the
                                Node API object that will be created in this `kubeadm
                                init` or `kubeadm join` operation. This field is also
                                used in the CommonName field of the kubelet's client
                                certificate to the API server. Defaults to the hostname
                                of the node if not provided.
                              type: string
                            taints:
                              description: 'Taints specifies the taints the Node API
                                object should be registered with. If this field is
                                unset, i.e. nil, in the `kubeadm init` process it
                                will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                                If you don''t want to taint your control-plane node,
                                set this field to an empty slice, i.e. `taints: {}`
                                in the YAML file. This field is solely used for Node
                                registration.'
                              items:
                                description: The node this Taint is attached to has
                                  the "effect" on any pod that does not tolerate the
                                  Taint.
                                properties:
                                  effect:
                                    description: Required. The effect of the taint
                                      on pods that do not tolerate the taint. Valid
                                      effects are NoSchedule, PreferNoSchedule and
                                      NoExecute.
                                    type: string
                                  key:
                                    description: Required. The taint key to be applied
                                      to a node.
                                    type: string
                                  timeAdded:
                                    description: TimeAdded represents the time at
                                      which the taint was added. It is only written
                                      for NoExecute taints.
                                    format: date-time
                                    type: string
                                  value:
                                    description: Required. The taint value corresponding
                                      to the taint key.
                                    type: string
                                required:
                                - effect
                                - key
                                type: object
                              type: array
                          type: object
                      type: object
                    ntp:
                      description: NTP specifies NTP configuration
                      properties:
                        enabled:
                          description: Enabled specifies whether NTP should be enabled
                          type: boolean
                        servers:
                          description: Servers specifies which NTP servers to use
                          items:
                            type: string
                          type: array
                      type: object
                    postKubeadmCommands:
                      description: PostKubeadmCommands specifies extra commands to
                        run after kubeadm runs
                      items:
                        type: string
                      type: array
                    preKubeadmCommands:
                      description: PreKubeadmCommands specifies extra commands to
                        run before kubeadm runs
                      items:
                        type: string
                      type: array
                    useExperimentalRetryJoin:
                      description: "UseExperimentalRetryJoin replaces a basic kubeadm
                        command with a shell script with retries for joins. \n This
                        is meant to be an experimental temporary workaround on some
                        environments where joins fail due to timing (and other issues).
                        The long term goal is to add retries to kubeadm proper and
                        use that functionality. \n This will add about 40KB to userdata
                        \n For more information, refer to https://github.com/kubernetes-sigs/cluster-api/pull/2763#discussion_r397306055."
                      type: boolean
                    users:
                      description: Users specifies extra users to add
                      items:
                        description: User defines the input for a generated user in
                          cloud-init.
                        properties:
                          gecos:
                            description: Gecos specifies the gecos to use for the
                              user
                            type: string
                          groups:
                            description: Groups specifies the additional groups for
                              the user
                            type: string
                          homeDir:
                            description: HomeDir specifies the home directory to use
                              for the user
                            type: string
                          inactive:
                            description: Inactive specifies whether to mark the user
                              as inactive
                            type: boolean
                          lockPassword:
                            description: LockPassword specifies if password login
                              should be disabled
                            type: boolean
                          name:
                            description: Name specifies the user name
                            type: string
                          passwd:
                            description: Passwd specifies a hashed password for the
                              user
                            type: string
                          primaryGroup:
                            description: PrimaryGroup specifies the primary group
                              for the user
                            type: string
                          shell:
                            description: Shell specifies the user's shell
                            type: string
                          sshAuthorizedKeys:
                            description: SSHAuthorizedKeys specifies a list of ssh
                              authorized keys for the user
                            items:
                              type: string
                            type: array
                          sudo:
                            description: Sudo specifies a sudo role for the user
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    verbosity:
                      description: Verbosity is the number for the kubeadm log level
                        verbosity. It overrides the `--v` flag in kubeadm commands.
                      format: int32
                      type: integer
                  type: object
                replicas:
                  description: Number of desired machines. Defaults to 1. When stacked
                    etcd is used only odd numbers are permitted, as per [etcd best
                    practice](https://etcd.io/docs/v3.3.12/faq/#why-an-odd-number-of-cluster-members).
                    This is a pointer to distinguish between explicit zero and not
                    specified.
                  format: int32
                  type: integer
                upgradeAfter:
                  description: UpgradeAfter is a field to indicate an upgrade should
                    be performed after the specified time even if no changes have
                    been made to the KubeadmControlPlane
                  format: date-time
                  type: string
                version:
                  description: Version defines the desired Kubernetes version.
                  minLength: 2
                  pattern: ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)([-0-9a-zA-Z_\.+]*)?$
                  type: string
              required:
              - infrastructureTemplate
              - kubeadmConfigSpec
              - version
              type: object
            status:
              description: KubeadmControlPlaneStatus defines the observed state of
                KubeadmControlPlane.
              properties:
                failureMessage:
                  description: ErrorMessage indicates that there is a terminal problem
                    reconciling the state, and will be set to a descriptive error
                    message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a terminal problem
                    reconciling the state, and will be set to a token value suitable
                    for programmatic interpretation.
                  type: string
                initialized:
                  description: Initialized denotes whether or not the control plane
                    has the uploaded kubeadm-config configmap.
                  type: boolean
                ready:
                  description: Ready denotes that the KubeadmControlPlane API Server
                    is ready to receive requests.
                  type: boolean
                readyReplicas:
                  description: Total number of fully running and ready control plane
                    machines.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated machines targeted by
                    this control plane (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the label selector in string format to
                    avoid introspection by clients, and is used to provide the CRD-based
                    integration for the scale subresource and additional integrations
                    for things like kubectl describe.. The string will be in the same
                    format as the query-param syntax. More info about label selectors:
                    http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
                unavailableReplicas:
                  description: Total number of unavailable machines targeted by this
                    control plane. This is the total number of machines that are still
                    required for the deployment to have 100% available capacity. They
                    may either be machines that are running but not yet ready or machines
                    that still have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated machines targeted by
                    this control plane that have the desired template spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: machinedeployments.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lRWDVHTXVGbWNQVjZSVEZ1UnJvRzJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNFdoY05NakF3T1RBMwpNREkxTVRBNFdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEw1UGRQT3ViUW1rdTNWWGxveExXaHh0VTBONmlsSzRZY1JwdXI0WUMKTkdRZ09NMnZoNE5wUHpzeTRjeDFUOVQyaW1rSEN4OEJkTVdIVmFtbVVqelh1R1JETTJ2QzhzeWtGRkFrbkdKbwp4NTRqZlBsRWEwMTZBQkxNTnZDZldhWUVoRk9XQWtWQW5hSFBPUi82c0ZrakxHK2FydlhtOUQxbGZRL29TMkZxClBKSDFWTnhyL3NJa2lUOEt0OWxuQThWNk5NTm14aUhPTDJxN281eEEyc2VPazJDVnA4NDhzeHBZb2pVa0hrRkYKTzljNmtVZ3JmYk05R0NjNTFtUEVxRW1rd2thSTdLZlR5NUFVanVoektTcEJFR1VxbXB6Vmd3VDBrSnM2MmFpLwpyaURxeVpHQklBNTVvT1JkUjFqZ2ZaNS9UNGpvQ2g5d1M0WC9GQUFJWGhDMUFnTUJBQUdqZ1pZd2daTXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2N3WURWUjBSQkd3d2FvSXNZMkZ3YVMxM1pXSm8KYjI5ckxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU9DT21OaGNHa3RkMlZpYUc5dgpheTF6WlhKMmFXTmxMbU5oY0drdGQyVmlhRzl2YXkxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJdmVLKzBjaEhHanV3M0FzT2VFV2dWMmpCZ2swRnpsZUxveitCLzUKL3JqMXFTUzl6eHhDRFpwdWlQeW5ncWxMekN6RmtrU3lGVzJHWmZQR2FWTUpxYjBieFdqdDNFWnZua3VXdlhCVAozblcxWlp5MmJvczQzZ3dJazl0TTMwVDU4ZSt6cEVzRlJCdXpIUm9Td1Z3amdseXRvSmsydm1WN2loUkJLQ1RMCldlZml5RUdpUDRXN0VvMUlxQkxzN0dKTE1qeG13Nm5XUEFQNUN4NkFXL2h0T1pwSGVmWnJTSFdkd0F4b0xiaHoKcjQwdFNoYm96cnZCYklaL3A2VVNtV3FvMG5IV0FJWVBLS1A5eXBGSnBVYUVoUFhmdG80YkNkK05lZkUvajZOKwo3M2EzUVRZRzh1UkdxZkdOdUQzcEhCTlNod3hFYmFWczVXaUlMMjY1WjlIcTJZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capi-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineDeployment
      listKind: MachineDeploymentList
      plural: machinedeployments
      shortNames:
      - md
      singular: machinedeployment
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: MachineDeployment is the Schema for the machinedeployments
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineDeploymentSpec defines the desired state of MachineDeployment
              properties:
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine should be ready. Defaults to 0 (machine will be considered
                    available as soon as it is ready)
                  format: int32
                  type: integer
                paused:
                  description: Indicates that the deployment is paused.
                  type: boolean
                progressDeadlineSeconds:
                  description: The maximum time in seconds for a deployment to make
                    progress before it is considered to be failed. The deployment
                    controller will continue to process failed deployments and a condition
                    with a ProgressDeadlineExceeded reason will be surfaced in the
                    deployment status. Note that progress will not be estimated during
                    the time a deployment is paused. Defaults to 600s.
                  format: int32
                  type: integer
                replicas:
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: The number of old MachineSets to retain to allow rollback.
                    This is a pointer to distinguish between explicit zero and not
                    specified. Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: Label selector for machines. Existing MachineSets whose
                    machines are selected by this will be the ones affected by this
                    deployment. It must match the machine template's labels.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                strategy:
                  description: The deployment strategy to use to replace existing
                    machines with new ones.
                  properties:
                    rollingUpdate:
                      description: Rolling update config params. Present only if MachineDeploymentStrategyType
                        = RollingUpdate.
                      properties:
                        maxSurge:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            scheduled above the desired number of machines. Value
                            can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%). This can not be 0 if MaxUnavailable
                            is 0. Absolute number is calculated from percentage by
                            rounding up. Defaults to 1. Example: when this is set
                            to 30%, the new MachineSet can be scaled up immediately
                            when the rolling update starts, such that the total number
                            of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet
                            can be scaled up further, ensuring that total number of
                            machines running at any time during the update is at most
                            130% of desired machines.'
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            unavailable during the update. Value can be an absolute
                            number (ex: 5) or a percentage of desired machines (ex:
                            10%). Absolute number is calculated from percentage by
                            rounding down. This can not be 0 if MaxSurge is 0. Defaults
                            to 0. Example: when this is set to 30%, the old MachineSet
                            can be scaled down to 70% of desired machines immediately
                            when the rolling update starts. Once new machines are
                            ready, old MachineSet can be scaled down further, followed
                            by scaling up the new MachineSet, ensuring that the total
                            number of machines available at all times during the update
                            is at least 70% of desired machines.'
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: Type of deployment. Currently the only supported
                        strategy is "RollingUpdate". Default is RollingUpdate.
                      type: string
                  type: object
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.Data without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            data:
                              description: Data contains the bootstrap data, such
                                as cloud-init details scripts. If nil, the Machine
                                should remain in the Pending state.
                              type: string
                          type: object
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        metadata:
                          description: 'DEPRECATED: ObjectMeta has no function and
                            isn''t used anywhere.'
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            generateName:
                              description: "GenerateName is an optional prefix, used
                                by the server, to generate a unique name ONLY IF the
                                Name field has not been provided. If this field is
                                used, the name returned to the client will be different
                                than the name passed. This value will also be combined
                                with a unique suffix. The provided value has the same
                                validation rules as the Name field, and may be truncated
                                by the length of the suffix required to make the value
                                unique on the server. \n If this field is specified
                                and the generated name exists, the server will NOT
                                return a 409 - instead, it will either return 201
                                Created or 500 with Reason ServerTimeout indicating
                                a unique name could not be found in the time allotted,
                                and the client should retry (optionally after the
                                time indicated in the Retry-After header). \n Applied
                                only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            namespace:
                              description: "Namespace defines the space within each
                                name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                              type: string
                            ownerReferences:
                              description: List of objects depended by this object.
                                If ALL objects in the list have been deleted, this
                                object will be garbage collected. If this object is
                                managed by a controller, then an entry in this list
                                will point to this controller, with the controller
                                field set to true. There cannot be more than one managing
                                controller.
                              items:
                                description: OwnerReference contains enough information
                                  to let you identify an owning object. An owning
                                  object must be in the same namespace as the dependent,
                                  or be cluster-scoped, so there is no namespace field.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  blockOwnerDeletion:
                                    description: If true, AND if the owner has the
                                      "foregroundDeletion" finalizer, then the owner
                                      cannot be deleted from the key-value store until
                                      this reference is removed. Defaults to false.
                                      To set this field, a user needs "delete" permission
                                      of the owner, otherwise 422 (Unprocessable Entity)
                                      will be returned.
                                    type: boolean
                                  controller:
                                    description: If true, this reference points to
                                      the managing controller.
                                    type: boolean
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#names'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                                required:
                                - apiVersion
                                - kind
                                - name
                                - uid
                                type: object
                              type: array
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - selector
              - template
              type: object
            status:
              description: MachineDeploymentStatus defines the observed state of MachineDeployment
              properties:
                availableReplicas:
                  description: Total number of available machines (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                readyReplicas:
                  description: Total number of ready machines targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
                unavailableReplicas:
                  description: Total number of unavailable machines targeted by this
                    deployment. This is the total number of machines that are still
                    required for the deployment to have 100% available capacity. They
                    may either be machines that are running but not yet available
                    or machines that still have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
    - additionalPrinterColumns:
      - description: MachineDeployment status such as ScalingUp/ScalingDown/Running/Failed/Unknown
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Total number of non-terminated machines targeted by this deployment
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of available machines (ready for at least minReadySeconds)
        jsonPath: .status.availableReplicas
        name: Available
        type: integer
      - description: Total number of ready machines targeted by this deployment.
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: MachineDeployment is the Schema for the machinedeployments
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineDeploymentSpec defines the desired state of MachineDeployment
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine should be ready. Defaults to 0 (machine will be considered
                    available as soon as it is ready)
                  format: int32
                  type: integer
                paused:
                  description: Indicates that the deployment is paused.
                  type: boolean
                progressDeadlineSeconds:
                  description: The maximum time in seconds for a deployment to make
                    progress before it is considered to be failed. The deployment
                    controller will continue to process failed deployments and a condition
                    with a ProgressDeadlineExceeded reason will be surfaced in the
                    deployment status. Note that progress will not be estimated during
                    the time a deployment is paused. Defaults to 600s.
                  format: int32
                  type: integer
                replicas:
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: The number of old MachineSets to retain to allow rollback.
                    This is a pointer to distinguish between explicit zero and not
                    specified. Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: Label selector for machines. Existing MachineSets whose
                    machines are selected by this will be the ones affected by this
                    deployment. It must match the machine template's labels.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                strategy:
                  description: The deployment strategy to use to replace existing
                    machines with new ones.
                  properties:
                    rollingUpdate:
                      description: Rolling update config params. Present only if MachineDeploymentStrategyType
                        = RollingUpdate.
                      properties:
                        maxSurge:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            scheduled above the desired number of machines. Value
                            can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%). This can not be 0 if MaxUnavailable
                            is 0. Absolute number is calculated from percentage by
                            rounding up. Defaults to 1. Example: when this is set
                            to 30%, the new MachineSet can be scaled up immediately
                            when the rolling update starts, such that the total number
                            of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet
                            can be scaled up further, ensuring that total number of
                            machines running at any time during the update is at most
                            130% of desired machines.'
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            unavailable during the update. Value can be an absolute
                            number (ex: 5) or a percentage of desired machines (ex:
                            10%). Absolute number is calculated from percentage by
                            rounding down. This can not be 0 if MaxSurge is 0. Defaults
                            to 0. Example: when this is set to 30%, the old MachineSet
                            can be scaled down to 70% of desired machines immediately
                            when the rolling update starts. Once new machines are
                            ready, old MachineSet can be scaled down further, followed
                            by scaling up the new MachineSet, ensuring that the total
                            number of machines available at all times during the update
                            is at least 70% of desired machines.'
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: Type of deployment. Currently the only supported
                        strategy is "RollingUpdate". Default is RollingUpdate.
                      type: string
                  type: object
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.Data without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            data:
                              description: "Data contains the bootstrap data, such
                                as cloud-init details scripts. If nil, the Machine
                                should remain in the Pending state. \n Deprecated:
                                This field has been deprecated in v1alpha3 and will
                                be removed in a future version. Switch to DataSecretName."
                              type: string
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              - template
              type: object
            status:
              description: MachineDeploymentStatus defines the observed state of MachineDeployment
              properties:
                availableReplicas:
                  description: Total number of available machines (ready for at least
                    minReadySeconds) targeted by this deployment.
                  format: int32
                  type: integer
                observedGeneration:
                  description: The generation observed by the deployment controller.
                  format: int64
                  type: integer
                phase:
                  description: Phase represents the current phase of a MachineDeployment
                    (ScalingUp, ScalingDown, Running, Failed, or Unknown).
                  type: string
                readyReplicas:
                  description: Total number of ready machines targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
                unavailableReplicas:
                  description: Total number of unavailable machines targeted by this
                    deployment. This is the total number of machines that are still
                    required for the deployment to have 100% available capacity. They
                    may either be machines that are running but not yet available
                    or machines that still have not been created.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated machines targeted by
                    this deployment that have the desired template spec.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: machinehealthchecks.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lRWDVHTXVGbWNQVjZSVEZ1UnJvRzJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNFdoY05NakF3T1RBMwpNREkxTVRBNFdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEw1UGRQT3ViUW1rdTNWWGxveExXaHh0VTBONmlsSzRZY1JwdXI0WUMKTkdRZ09NMnZoNE5wUHpzeTRjeDFUOVQyaW1rSEN4OEJkTVdIVmFtbVVqelh1R1JETTJ2QzhzeWtGRkFrbkdKbwp4NTRqZlBsRWEwMTZBQkxNTnZDZldhWUVoRk9XQWtWQW5hSFBPUi82c0ZrakxHK2FydlhtOUQxbGZRL29TMkZxClBKSDFWTnhyL3NJa2lUOEt0OWxuQThWNk5NTm14aUhPTDJxN281eEEyc2VPazJDVnA4NDhzeHBZb2pVa0hrRkYKTzljNmtVZ3JmYk05R0NjNTFtUEVxRW1rd2thSTdLZlR5NUFVanVoektTcEJFR1VxbXB6Vmd3VDBrSnM2MmFpLwpyaURxeVpHQklBNTVvT1JkUjFqZ2ZaNS9UNGpvQ2g5d1M0WC9GQUFJWGhDMUFnTUJBQUdqZ1pZd2daTXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2N3WURWUjBSQkd3d2FvSXNZMkZ3YVMxM1pXSm8KYjI5ckxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU9DT21OaGNHa3RkMlZpYUc5dgpheTF6WlhKMmFXTmxMbU5oY0drdGQyVmlhRzl2YXkxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJdmVLKzBjaEhHanV3M0FzT2VFV2dWMmpCZ2swRnpsZUxveitCLzUKL3JqMXFTUzl6eHhDRFpwdWlQeW5ncWxMekN6RmtrU3lGVzJHWmZQR2FWTUpxYjBieFdqdDNFWnZua3VXdlhCVAozblcxWlp5MmJvczQzZ3dJazl0TTMwVDU4ZSt6cEVzRlJCdXpIUm9Td1Z3amdseXRvSmsydm1WN2loUkJLQ1RMCldlZml5RUdpUDRXN0VvMUlxQkxzN0dKTE1qeG13Nm5XUEFQNUN4NkFXL2h0T1pwSGVmWnJTSFdkd0F4b0xiaHoKcjQwdFNoYm96cnZCYklaL3A2VVNtV3FvMG5IV0FJWVBLS1A5eXBGSnBVYUVoUFhmdG80YkNkK05lZkUvajZOKwo3M2EzUVRZRzh1UkdxZkdOdUQzcEhCTlNod3hFYmFWczVXaUlMMjY1WjlIcTJZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capi-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineHealthCheck
      listKind: MachineHealthCheckList
      plural: machinehealthchecks
      shortNames:
      - mhc
      - mhcs
      singular: machinehealthcheck
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Maximum number of unhealthy machines allowed
        jsonPath: .spec.maxUnhealthy
        name: MaxUnhealthy
        type: string
      - description: Number of machines currently monitored
        jsonPath: .status.expectedMachines
        name: ExpectedMachines
        type: integer
      - description: Current observed healthy machines
        jsonPath: .status.currentHealthy
        name: CurrentHealthy
        type: integer
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: MachineHealthCheck is the Schema for the machinehealthchecks
            API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Specification of machine health check policy
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                maxUnhealthy:
                  anyOf:
                  - type: integer
                  - type: string
                  description: Any further remediation is only allowed if at most
                    "MaxUnhealthy" machines selected by "selector" are not healthy.
                  x-kubernetes-int-or-string: true
                nodeStartupTimeout:
                  description: Machines older than this duration without a node will
                    be considered to have failed and will be remediated.
                  type: string
                selector:
                  description: Label selector to match machines whose health will
                    be exercised
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                unhealthyConditions:
                  description: UnhealthyConditions contains a list of the conditions
                    that determine whether a node is considered unhealthy.  The conditions
                    are combined in a logical OR, i.e. if any of the conditions is
                    met, the node is unhealthy.
                  items:
                    description: UnhealthyCondition represents a Node condition type
                      and value with a timeout specified as a duration.  When the
                      named condition has been in the given status for at least the
                      timeout value, a node is considered unhealthy.
                    properties:
                      status:
                        minLength: 1
                        type: string
                      timeout:
                        type: string
                      type:
                        minLength: 1
                        type: string
                    required:
                    - status
                    - timeout
                    - type
                    type: object
                  minItems: 1
                  type: array
              required:
              - clusterName
              - selector
              - unhealthyConditions
              type: object
            status:
              description: Most recently observed status of MachineHealthCheck resource
              properties:
                currentHealthy:
                  description: total number of healthy machines counted by this machine
                    health check
                  format: int32
                  minimum: 0
                  type: integer
                expectedMachines:
                  description: total number of machines counted by this machine health
                    check
                  format: int32
                  minimum: 0
                  type: integer
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: machinepools.exp.cluster.x-k8s.io
  spec:
    conversion:
      strategy: None
    group: exp.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachinePool
      listKind: MachinePoolList
      plural: machinepools
      shortNames:
      - mp
      singular: machinepool
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: MachinePool status such as Terminating/Pending/Provisioning/Running/Failed
          etc
        jsonPath: .status.phase
        name: Phase
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: MachinePool is the Schema for the machinepools API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachinePoolSpec defines the desired state of MachinePool
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                minReadySeconds:
                  description: Minimum number of seconds for which a newly created
                    machine instances should be ready. Defaults to 0 (machine instance
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                providerIDList:
                  description: ProviderIDList are the identification IDs of machine
                    instances provided by the provider. This field must match the
                    provider IDs as seen on the node objects corresponding to a machine
                    pool's machine instances.
                  items:
                    type: string
                  type: array
                replicas:
                  description: Number of desired machines. Defaults to 1. This is
                    a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                strategy:
                  description: The deployment strategy to use to replace existing
                    machine instances with new ones.
                  properties:
                    rollingUpdate:
                      description: Rolling update config params. Present only if MachineDeploymentStrategyType
                        = RollingUpdate.
                      properties:
                        maxSurge:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            scheduled above the desired number of machines. Value
                            can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%). This can not be 0 if MaxUnavailable
                            is 0. Absolute number is calculated from percentage by
                            rounding up. Defaults to 1. Example: when this is set
                            to 30%, the new MachineSet can be scaled up immediately
                            when the rolling update starts, such that the total number
                            of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet
                            can be scaled up further, ensuring that total number of
                            machines running at any time during the update is at most
                            130% of desired machines.'
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'The maximum number of machines that can be
                            unavailable during the update. Value can be an absolute
                            number (ex: 5) or a percentage of desired machines (ex:
                            10%). Absolute number is calculated from percentage by
                            rounding down. This can not be 0 if MaxSurge is 0. Defaults
                            to 0. Example: when this is set to 30%, the old MachineSet
                            can be scaled down to 70% of desired machines immediately
                            when the rolling update starts. Once new machines are
                            ready, old MachineSet can be scaled down further, followed
                            by scaling up the new MachineSet, ensuring that the total
                            number of machines available at all times during the update
                            is at least 70% of desired machines.'
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: Type of deployment. Currently the only supported
                        strategy is "RollingUpdate". Default is RollingUpdate.
                      type: string
                  type: object
                template:
                  description: Template describes the machines that will be created.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.Data without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            data:
                              description: "Data contains the bootstrap data, such
                                as cloud-init details scripts. If nil, the Machine
                                should remain in the Pending state. \n Deprecated:
                                This field has been deprecated in v1alpha3 and will
                                be removed in a future version. Switch to DataSecretName."
                              type: string
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - template
              type: object
            status:
              description: MachinePoolStatus defines the observed state of MachinePool
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachinePool.
                  format: int32
                  type: integer
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                failureMessage:
                  description: FailureMessage indicates that there is a problem reconciling
                    the state, and will be set to a descriptive error message.
                  type: string
                failureReason:
                  description: FailureReason indicates that there is a problem reconciling
                    the state, and will be set to a token value suitable for programmatic
                    interpretation.
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                nodeRefs:
                  description: NodeRefs will point to the corresponding Nodes if it
                    they exist.
                  items:
                    description: ObjectReference contains enough information to let
                      you inspect or modify the referred object.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  type: array
                phase:
                  description: Phase represents the current phase of cluster actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
                readyReplicas:
                  description: The number of ready replicas for this MachinePool.
                    A machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable machine instances targeted
                    by this machine pool. This is the total number of machine instances
                    that are still required for the machine pool to have 100% available
                    capacity. They may either be machine instances that are running
                    but not yet available or machine instances that still have not
                    been created.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: machines.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lRWDVHTXVGbWNQVjZSVEZ1UnJvRzJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNFdoY05NakF3T1RBMwpNREkxTVRBNFdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEw1UGRQT3ViUW1rdTNWWGxveExXaHh0VTBONmlsSzRZY1JwdXI0WUMKTkdRZ09NMnZoNE5wUHpzeTRjeDFUOVQyaW1rSEN4OEJkTVdIVmFtbVVqelh1R1JETTJ2QzhzeWtGRkFrbkdKbwp4NTRqZlBsRWEwMTZBQkxNTnZDZldhWUVoRk9XQWtWQW5hSFBPUi82c0ZrakxHK2FydlhtOUQxbGZRL29TMkZxClBKSDFWTnhyL3NJa2lUOEt0OWxuQThWNk5NTm14aUhPTDJxN281eEEyc2VPazJDVnA4NDhzeHBZb2pVa0hrRkYKTzljNmtVZ3JmYk05R0NjNTFtUEVxRW1rd2thSTdLZlR5NUFVanVoektTcEJFR1VxbXB6Vmd3VDBrSnM2MmFpLwpyaURxeVpHQklBNTVvT1JkUjFqZ2ZaNS9UNGpvQ2g5d1M0WC9GQUFJWGhDMUFnTUJBQUdqZ1pZd2daTXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2N3WURWUjBSQkd3d2FvSXNZMkZ3YVMxM1pXSm8KYjI5ckxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU9DT21OaGNHa3RkMlZpYUc5dgpheTF6WlhKMmFXTmxMbU5oY0drdGQyVmlhRzl2YXkxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJdmVLKzBjaEhHanV3M0FzT2VFV2dWMmpCZ2swRnpsZUxveitCLzUKL3JqMXFTUzl6eHhDRFpwdWlQeW5ncWxMekN6RmtrU3lGVzJHWmZQR2FWTUpxYjBieFdqdDNFWnZua3VXdlhCVAozblcxWlp5MmJvczQzZ3dJazl0TTMwVDU4ZSt6cEVzRlJCdXpIUm9Td1Z3amdseXRvSmsydm1WN2loUkJLQ1RMCldlZml5RUdpUDRXN0VvMUlxQkxzN0dKTE1qeG13Nm5XUEFQNUN4NkFXL2h0T1pwSGVmWnJTSFdkd0F4b0xiaHoKcjQwdFNoYm96cnZCYklaL3A2VVNtV3FvMG5IV0FJWVBLS1A5eXBGSnBVYUVoUFhmdG80YkNkK05lZkUvajZOKwo3M2EzUVRZRzh1UkdxZkdOdUQzcEhCTlNod3hFYmFWczVXaUlMMjY1WjlIcTJZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capi-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Machine
      listKind: MachineList
      plural: machines
      shortNames:
      - ma
      singular: machine
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: Provider ID
        jsonPath: .spec.providerID
        name: ProviderID
        type: string
      - description: Machine status such as Terminating/Pending/Running/Failed etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Node name associated with this machine
        jsonPath: .status.nodeRef.name
        name: NodeName
        priority: 1
        type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Machine is the Schema for the machines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSpec defines the desired state of Machine
              properties:
                bootstrap:
                  description: Bootstrap is a reference to a local struct which encapsulates
                    fields to configure the Machine’s bootstrapping mechanism.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a bootstrap provider-specific
                        resource that holds configuration details. The reference is
                        optional to allow users/operators to specify Bootstrap.Data
                        without the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    data:
                      description: Data contains the bootstrap data, such as cloud-init
                        details scripts. If nil, the Machine should remain in the
                        Pending state.
                      type: string
                  type: object
                infrastructureRef:
                  description: InfrastructureRef is a required reference to a custom
                    resource offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                metadata:
                  description: 'DEPRECATED: ObjectMeta has no function and isn''t
                    used anywhere.'
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    generateName:
                      description: "GenerateName is an optional prefix, used by the
                        server, to generate a unique name ONLY IF the Name field has
                        not been provided. If this field is used, the name returned
                        to the client will be different than the name passed. This
                        value will also be combined with a unique suffix. The provided
                        value has the same validation rules as the Name field, and
                        may be truncated by the length of the suffix required to make
                        the value unique on the server. \n If this field is specified
                        and the generated name exists, the server will NOT return
                        a 409 - instead, it will either return 201 Created or 500
                        with Reason ServerTimeout indicating a unique name could not
                        be found in the time allotted, and the client should retry
                        (optionally after the time indicated in the Retry-After header).
                        \n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    namespace:
                      description: "Namespace defines the space within each name must
                        be unique. An empty namespace is equivalent to the \"default\"
                        namespace, but \"default\" is the canonical representation.
                        Not all objects are required to be scoped to a namespace -
                        the value of this field for those objects will be empty. \n
                        Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                      type: string
                    ownerReferences:
                      description: List of objects depended by this object. If ALL
                        objects in the list have been deleted, this object will be
                        garbage collected. If this object is managed by a controller,
                        then an entry in this list will point to this controller,
                        with the controller field set to true. There cannot be more
                        than one managing controller.
                      items:
                        description: OwnerReference contains enough information to
                          let you identify an owning object. An owning object must
                          be in the same namespace as the dependent, or be cluster-scoped,
                          so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion"
                              finalizer, then the owner cannot be deleted from the
                              key-value store until this reference is removed. Defaults
                              to false. To set this field, a user needs "delete" permission
                              of the owner, otherwise 422 (Unprocessable Entity) will
                              be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing
                              controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                        - apiVersion
                        - kind
                        - name
                        - uid
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the identification ID of the machine
                    provided by the provider. This field must match the provider ID
                    as seen on the node object corresponding to this machine. This
                    field is required by higher level consumers of cluster-api. Example
                    use case is cluster autoscaler with cluster-api as provider. Clean-up
                    logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes
                    nodes. With cluster-api as a generic out-of-tree provider for
                    autoscaler, this field is required by autoscaler to be able to
                    have a provider view of the list of machines. Another list of
                    nodes is queried from the k8s apiserver and then a comparison
                    is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher
                    level entities like autoscaler that will be interfacing with cluster-api
                    as generic provider.
                  type: string
                version:
                  description: Version defines the desired Kubernetes version. This
                    field is meant to be optionally used by bootstrap providers.
                  type: string
              required:
              - bootstrap
              - infrastructureRef
              type: object
            status:
              description: MachineStatus defines the observed state of Machine
              properties:
                addresses:
                  description: Addresses is a list of addresses assigned to the machine.
                    This field is copied from the infrastructure provider reference.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                errorMessage:
                  description: "ErrorMessage will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                errorReason:
                  description: "ErrorReason will be set in the event that there is
                    a terminal problem reconciling the Machine and will contain a
                    succinct value suitable for machine interpretation. \n This field
                    should not be set for transitive errors that a controller faces
                    that are expected to be fixed automatically over time (like service
                    outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                lastUpdated:
                  description: LastUpdated identifies when this status was last observed.
                  format: date-time
                  type: string
                nodeRef:
                  description: NodeRef will point to the corresponding Node if it
                    exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                phase:
                  description: Phase represents the current phase of machine actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
                version:
                  description: Version specifies the current version of Kubernetes
                    running on the corresponding Node. This is meant to be a means
                    of bubbling up status from the Node to the Machine. It is entirely
                    optional, but useful for end-user UX if it’s present.
                  type: string
              type: object
          type: object
      served: true
      storage: false
    - additionalPrinterColumns:
      - description: Provider ID
        jsonPath: .spec.providerID
        name: ProviderID
        type: string
      - description: Machine status such as Terminating/Pending/Running/Failed etc
        jsonPath: .status.phase
        name: Phase
        type: string
      - description: Node name associated with this machine
        jsonPath: .status.nodeRef.name
        name: NodeName
        priority: 1
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Machine is the Schema for the machines API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSpec defines the desired state of Machine
              properties:
                bootstrap:
                  description: Bootstrap is a reference to a local struct which encapsulates
                    fields to configure the Machine’s bootstrapping mechanism.
                  properties:
                    configRef:
                      description: ConfigRef is a reference to a bootstrap provider-specific
                        resource that holds configuration details. The reference is
                        optional to allow users/operators to specify Bootstrap.Data
                        without the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    data:
                      description: "Data contains the bootstrap data, such as cloud-init
                        details scripts. If nil, the Machine should remain in the
                        Pending state. \n Deprecated: This field has been deprecated
                        in v1alpha3 and will be removed in a future version. Switch
                        to DataSecretName."
                      type: string
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores
                        the bootstrap data script. If nil, the Machine should remain
                        in the Pending state.
                      type: string
                  type: object
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                failureDomain:
                  description: FailureDomain is the failure domain the machine will
                    be created in. Must match a key in the FailureDomains map stored
                    on the cluster object.
                  type: string
                infrastructureRef:
                  description: InfrastructureRef is a required reference to a custom
                    resource offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                providerID:
                  description: ProviderID is the identification ID of the machine
                    provided by the provider. This field must match the provider ID
                    as seen on the node object corresponding to this machine. This
                    field is required by higher level consumers of cluster-api. Example
                    use case is cluster autoscaler with cluster-api as provider. Clean-up
                    logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes
                    nodes. With cluster-api as a generic out-of-tree provider for
                    autoscaler, this field is required by autoscaler to be able to
                    have a provider view of the list of machines. Another list of
                    nodes is queried from the k8s apiserver and then a comparison
                    is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher
                    level entities like autoscaler that will be interfacing with cluster-api
                    as generic provider.
                  type: string
                version:
                  description: Version defines the desired Kubernetes version. This
                    field is meant to be optionally used by bootstrap providers.
                  type: string
              required:
              - bootstrap
              - clusterName
              - infrastructureRef
              type: object
            status:
              description: MachineStatus defines the observed state of Machine
              properties:
                addresses:
                  description: Addresses is a list of addresses assigned to the machine.
                    This field is copied from the infrastructure provider reference.
                  items:
                    description: MachineAddress contains information for the node's
                      address.
                    properties:
                      address:
                        description: The machine address.
                        type: string
                      type:
                        description: Machine address type, one of Hostname, ExternalIP
                          or InternalIP.
                        type: string
                    required:
                    - address
                    - type
                    type: object
                  type: array
                bootstrapReady:
                  description: BootstrapReady is the state of the bootstrap provider.
                  type: boolean
                failureMessage:
                  description: "FailureMessage will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a more verbose string suitable for logging and human consumption.
                    \n This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                failureReason:
                  description: "FailureReason will be set in the event that there
                    is a terminal problem reconciling the Machine and will contain
                    a succinct value suitable for machine interpretation. \n This
                    field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over time (like
                    service outages), but instead indicate that something is fundamentally
                    wrong with the Machine's spec or the configuration of the controller,
                    and that manual intervention is required. Examples of terminal
                    errors would be invalid combinations of settings in the spec,
                    values that are unsupported by the controller, or the responsible
                    controller itself being critically misconfigured. \n Any transient
                    errors that occur during the reconciliation of Machines can be
                    added as events to the Machine object and/or logged in the controller's
                    output."
                  type: string
                infrastructureReady:
                  description: InfrastructureReady is the state of the infrastructure
                    provider.
                  type: boolean
                lastUpdated:
                  description: LastUpdated identifies when the phase of the Machine
                    last transitioned.
                  format: date-time
                  type: string
                nodeRef:
                  description: NodeRef will point to the corresponding Node if it
                    exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                phase:
                  description: Phase represents the current phase of machine actuation.
                    E.g. Pending, Running, Terminating, Failed etc.
                  type: string
                version:
                  description: Version specifies the current version of Kubernetes
                    running on the corresponding Node. This is meant to be a means
                    of bubbling up status from the Node to the Machine. It is entirely
                    optional, but useful for end-user UX if it’s present.
                  type: string
              type: object
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      cert-manager.io/inject-ca-from: capi-webhook-system/capi-serving-cert
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      cluster.x-k8s.io/provider: cluster-api
      clusterctl.cluster.x-k8s.io: ""
      clusterctl.cluster.x-k8s.io/lifecycle: shared
    name: machinesets.cluster.x-k8s.io
  spec:
    conversion:
      strategy: Webhook
      webhook:
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lRWDVHTXVGbWNQVjZSVEZ1UnJvRzJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFLRXd4alpYSjBMVzFoYm1GblpYSXdIaGNOTWpBd05qQTVNREkxTVRBNFdoY05NakF3T1RBMwpNREkxTVRBNFdqQVhNUlV3RXdZRFZRUUtFd3hqWlhKMExXMWhibUZuWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEw1UGRQT3ViUW1rdTNWWGxveExXaHh0VTBONmlsSzRZY1JwdXI0WUMKTkdRZ09NMnZoNE5wUHpzeTRjeDFUOVQyaW1rSEN4OEJkTVdIVmFtbVVqelh1R1JETTJ2QzhzeWtGRkFrbkdKbwp4NTRqZlBsRWEwMTZBQkxNTnZDZldhWUVoRk9XQWtWQW5hSFBPUi82c0ZrakxHK2FydlhtOUQxbGZRL29TMkZxClBKSDFWTnhyL3NJa2lUOEt0OWxuQThWNk5NTm14aUhPTDJxN281eEEyc2VPazJDVnA4NDhzeHBZb2pVa0hrRkYKTzljNmtVZ3JmYk05R0NjNTFtUEVxRW1rd2thSTdLZlR5NUFVanVoektTcEJFR1VxbXB6Vmd3VDBrSnM2MmFpLwpyaURxeVpHQklBNTVvT1JkUjFqZ2ZaNS9UNGpvQ2g5d1M0WC9GQUFJWGhDMUFnTUJBQUdqZ1pZd2daTXdEZ1lEClZSMFBBUUgvQkFRREFnV2dNQXdHQTFVZEV3RUIvd1FDTUFBd2N3WURWUjBSQkd3d2FvSXNZMkZ3YVMxM1pXSm8KYjI5ckxYTmxjblpwWTJVdVkyRndhUzEzWldKb2IyOXJMWE41YzNSbGJTNXpkbU9DT21OaGNHa3RkMlZpYUc5dgpheTF6WlhKMmFXTmxMbU5oY0drdGQyVmlhRzl2YXkxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3d3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJdmVLKzBjaEhHanV3M0FzT2VFV2dWMmpCZ2swRnpsZUxveitCLzUKL3JqMXFTUzl6eHhDRFpwdWlQeW5ncWxMekN6RmtrU3lGVzJHWmZQR2FWTUpxYjBieFdqdDNFWnZua3VXdlhCVAozblcxWlp5MmJvczQzZ3dJazl0TTMwVDU4ZSt6cEVzRlJCdXpIUm9Td1Z3amdseXRvSmsydm1WN2loUkJLQ1RMCldlZml5RUdpUDRXN0VvMUlxQkxzN0dKTE1qeG13Nm5XUEFQNUN4NkFXL2h0T1pwSGVmWnJTSFdkd0F4b0xiaHoKcjQwdFNoYm96cnZCYklaL3A2VVNtV3FvMG5IV0FJWVBLS1A5eXBGSnBVYUVoUFhmdG80YkNkK05lZkUvajZOKwo3M2EzUVRZRzh1UkdxZkdOdUQzcEhCTlNod3hFYmFWczVXaUlMMjY1WjlIcTJZUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          service:
            name: capi-webhook-service
            namespace: capi-webhook-system
            path: /convert
            port: 443
        conversionReviewVersions:
        - v1
        - v1beta1
    group: cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: MachineSet
      listKind: MachineSetList
      plural: machinesets
      shortNames:
      - ms
      singular: machineset
    scope: Namespaced
    versions:
    - name: v1alpha2
      schema:
        openAPIV3Schema:
          description: MachineSet is the Schema for the machinesets API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSetSpec defines the desired state of MachineSet
              properties:
                deletePolicy:
                  description: DeletePolicy defines the policy used to identify nodes
                    to delete when downscaling. Defaults to "Random".  Valid values
                    are "Random, "Newest", "Oldest"
                  enum:
                  - Random
                  - Newest
                  - Oldest
                  type: string
                minReadySeconds:
                  description: MinReadySeconds is the minimum number of seconds for
                    which a newly created machine should be ready. Defaults to 0 (machine
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the number of desired replicas. This is
                    a pointer to distinguish between explicit zero and unspecified.
                    Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is a label query over machines that should
                    match the replica count. Label keys and values that must match
                    in order to be controlled by this MachineSet. It must match the
                    machine template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                template:
                  description: Template is the object that describes the machine that
                    will be created if insufficient replicas are detected. Object
                    references to custom resources resources are treated as templates.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.Data without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            data:
                              description: Data contains the bootstrap data, such
                                as cloud-init details scripts. If nil, the Machine
                                should remain in the Pending state.
                              type: string
                          type: object
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        metadata:
                          description: 'DEPRECATED: ObjectMeta has no function and
                            isn''t used anywhere.'
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: 'Annotations is an unstructured key value
                                map stored with a resource that may be set by external
                                tools to store and retrieve arbitrary metadata. They
                                are not queryable and should be preserved when modifying
                                objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                              type: object
                            generateName:
                              description: "GenerateName is an optional prefix, used
                                by the server, to generate a unique name ONLY IF the
                                Name field has not been provided. If this field is
                                used, the name returned to the client will be different
                                than the name passed. This value will also be combined
                                with a unique suffix. The provided value has the same
                                validation rules as the Name field, and may be truncated
                                by the length of the suffix required to make the value
                                unique on the server. \n If this field is specified
                                and the generated name exists, the server will NOT
                                return a 409 - instead, it will either return 201
                                Created or 500 with Reason ServerTimeout indicating
                                a unique name could not be found in the time allotted,
                                and the client should retry (optionally after the
                                time indicated in the Retry-After header). \n Applied
                                only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Map of string keys and values that can
                                be used to organize and categorize (scope and select)
                                objects. May match selectors of replication controllers
                                and services. More info: http://kubernetes.io/docs/user-guide/labels'
                              type: object
                            name:
                              description: 'Name must be unique within a namespace.
                                Is required when creating resources, although some
                                resources may allow a client to request the generation
                                of an appropriate name automatically. Name is primarily
                                intended for creation idempotence and configuration
                                definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            namespace:
                              description: "Namespace defines the space within each
                                name must be unique. An empty namespace is equivalent
                                to the \"default\" namespace, but \"default\" is the
                                canonical representation. Not all objects are required
                                to be scoped to a namespace - the value of this field
                                for those objects will be empty. \n Must be a DNS_LABEL.
                                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                              type: string
                            ownerReferences:
                              description: List of objects depended by this object.
                                If ALL objects in the list have been deleted, this
                                object will be garbage collected. If this object is
                                managed by a controller, then an entry in this list
                                will point to this controller, with the controller
                                field set to true. There cannot be more than one managing
                                controller.
                              items:
                                description: OwnerReference contains enough information
                                  to let you identify an owning object. An owning
                                  object must be in the same namespace as the dependent,
                                  or be cluster-scoped, so there is no namespace field.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  blockOwnerDeletion:
                                    description: If true, AND if the owner has the
                                      "foregroundDeletion" finalizer, then the owner
                                      cannot be deleted from the key-value store until
                                      this reference is removed. Defaults to false.
                                      To set this field, a user needs "delete" permission
                                      of the owner, otherwise 422 (Unprocessable Entity)
                                      will be returned.
                                    type: boolean
                                  controller:
                                    description: If true, this reference points to
                                      the managing controller.
                                    type: boolean
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#names'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                                required:
                                - apiVersion
                                - kind
                                - name
                                - uid
                                type: object
                              type: array
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - selector
              type: object
            status:
              description: MachineSetStatus defines the observed state of MachineSet
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                errorMessage:
                  type: string
                errorReason:
                  description: "In the event that there is a terminal problem reconciling
                    the replicas, both ErrorReason and ErrorMessage will be set. ErrorReason
                    will be populated with a succinct value suitable for machine interpretation,
                    while ErrorMessage will contain a more verbose string suitable
                    for logging and human consumption. \n These fields should not
                    be set for transitive errors that a controller faces that are
                    expected to be fixed automatically over time (like service outages),
                    but instead indicate that something is fundamentally wrong with
                    the MachineTemplate's spec or the configuration of the machine
                    controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in
                    the spec, values that are unsupported by the machine controller,
                    or the responsible machine controller itself being critically
                    misconfigured. \n Any transient errors that occur during the reconciliation
                    of Machines can be added as events to the MachineSet object and/or
                    logged in the controller's output."
                  type: string
                fullyLabeledReplicas:
                  description: The number of replicas that have labels matching the
                    labels of the machine template of the MachineSet.
                  format: int32
                  type: integer
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: The number of ready replicas for this MachineSet. A
                    machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
              required:
              - replicas
              type: object
          type: object
      served: true
      storage: false
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
    - additionalPrinterColumns:
      - description: Total number of non-terminated machines targeted by this machineset
        jsonPath: .status.replicas
        name: Replicas
        type: integer
      - description: Total number of available machines (ready for at least minReadySeconds)
        jsonPath: .status.availableReplicas
        name: Available
        type: integer
      - description: Total number of ready machines targeted by this machineset.
        jsonPath: .status.readyReplicas
        name: Ready
        type: integer
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: MachineSet is the Schema for the machinesets API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: MachineSetSpec defines the desired state of MachineSet
              properties:
                clusterName:
                  description: ClusterName is the name of the Cluster this object
                    belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  description: DeletePolicy defines the policy used to identify nodes
                    to delete when downscaling. Defaults to "Random".  Valid values
                    are "Random, "Newest", "Oldest"
                  enum:
                  - Random
                  - Newest
                  - Oldest
                  type: string
                minReadySeconds:
                  description: MinReadySeconds is the minimum number of seconds for
                    which a newly created machine should be ready. Defaults to 0 (machine
                    will be considered available as soon as it is ready)
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the number of desired replicas. This is
                    a pointer to distinguish between explicit zero and unspecified.
                    Defaults to 1.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is a label query over machines that should
                    match the replica count. Label keys and values that must match
                    in order to be controlled by this MachineSet. It must match the
                    machine template''s labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                template:
                  description: Template is the object that describes the machine that
                    will be created if insufficient replicas are detected. Object
                    references to custom resources resources are treated as templates.
                  properties:
                    metadata:
                      description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        generateName:
                          description: "GenerateName is an optional prefix, used by
                            the server, to generate a unique name ONLY IF the Name
                            field has not been provided. If this field is used, the
                            name returned to the client will be different than the
                            name passed. This value will also be combined with a unique
                            suffix. The provided value has the same validation rules
                            as the Name field, and may be truncated by the length
                            of the suffix required to make the value unique on the
                            server. \n If this field is specified and the generated
                            name exists, the server will NOT return a 409 - instead,
                            it will either return 201 Created or 500 with Reason ServerTimeout
                            indicating a unique name could not be found in the time
                            allotted, and the client should retry (optionally after
                            the time indicated in the Retry-After header). \n Applied
                            only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: "Namespace defines the space within each name
                            must be unique. An empty namespace is equivalent to the
                            \"default\" namespace, but \"default\" is the canonical
                            representation. Not all objects are required to be scoped
                            to a namespace - the value of this field for those objects
                            will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/namespaces"
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. An owning object
                              must be in the same namespace as the dependent, or be
                              cluster-scoped, so there is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                      type: object
                    spec:
                      description: 'Specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                      properties:
                        bootstrap:
                          description: Bootstrap is a reference to a local struct
                            which encapsulates fields to configure the Machine’s bootstrapping
                            mechanism.
                          properties:
                            configRef:
                              description: ConfigRef is a reference to a bootstrap
                                provider-specific resource that holds configuration
                                details. The reference is optional to allow users/operators
                                to specify Bootstrap.Data without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object
                                    instead of an entire object, this string should
                                    contain a valid JSON/Go field access statement,
                                    such as desiredState.manifest.containers[2]. For
                                    example, if the object reference is to a container
                                    within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to
                                    the name of the container that triggered the event)
                                    or if no container name is specified "spec.containers[2]"
                                    (container with index 2 in this pod). This syntax
                                    is chosen only to have some well-defined way of
                                    referencing a part of an object. TODO: this design
                                    is not final and this field is subject to change
                                    in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info:
                                    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which
                                    this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            data:
                              description: "Data contains the bootstrap data, such
                                as cloud-init details scripts. If nil, the Machine
                                should remain in the Pending state. \n Deprecated:
                                This field has been deprecated in v1alpha3 and will
                                be removed in a future version. Switch to DataSecretName."
                              type: string
                            dataSecretName:
                              description: DataSecretName is the name of the secret
                                that stores the bootstrap data script. If nil, the
                                Machine should remain in the Pending state.
                              type: string
                          type: object
                        clusterName:
                          description: ClusterName is the name of the Cluster this
                            object belongs to.
                          minLength: 1
                          type: string
                        failureDomain:
                          description: FailureDomain is the failure domain the machine
                            will be created in. Must match a key in the FailureDomains
                            map stored on the cluster object.
                          type: string
                        infrastructureRef:
                          description: InfrastructureRef is a required reference to
                            a custom resource offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        providerID:
                          description: ProviderID is the identification ID of the
                            machine provided by the provider. This field must match
                            the provider ID as seen on the node object corresponding
                            to this machine. This field is required by higher level
                            consumers of cluster-api. Example use case is cluster
                            autoscaler with cluster-api as provider. Clean-up logic
                            in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as
                            Kubernetes nodes. With cluster-api as a generic out-of-tree
                            provider for autoscaler, this field is required by autoscaler
                            to be able to have a provider view of the list of machines.
                            Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered
                            machines and are marked for delete. This field will be
                            set by the actuators and consumed by higher level entities
                            like autoscaler that will be interfacing with cluster-api
                            as generic provider.
                          type: string
                        version:
                          description: Version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap
                            providers.
                          type: string
                      required:
                      - bootstrap
                      - clusterName
                      - infrastructureRef
                      type: object
                  type: object
              required:
              - clusterName
              - selector
              type: object
            status:
              description: MachineSetStatus defines the observed state of MachineSet
              properties:
                availableReplicas:
                  description: The number of available replicas (ready for at least
                    minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                failureMessage:
                  type: string
                failureReason:
                  description: "In the event that there is a terminal problem reconciling
                    the replicas, both FailureReason and FailureMessage will be set.
                    FailureReason will be populated with a succinct value suitable
                    for machine interpretation, while FailureMessage will contain
                    a more verbose string suitable for logging and human consumption.
                    \n These fields should not be set for transitive errors that a
                    controller faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something
                    is fundamentally wrong with the MachineTemplate's spec or the
                    configuration of the machine controller, and that manual intervention
                    is required. Examples of terminal errors would be invalid combinations
                    of settings in the spec, values that are unsupported by the machine
                    controller, or the responsible machine controller itself being
                    critically misconfigured. \n Any transient errors that occur during
                    the reconciliation of Machines can be added as events to the MachineSet
                    object and/or logged in the controller's output."
                  type: string
                fullyLabeledReplicas:
                  description: The number of replicas that have labels matching the
                    labels of the machine template of the MachineSet.
                  format: int32
                  type: integer
                observedGeneration:
                  description: ObservedGeneration reflects the generation of the most
                    recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: The number of ready replicas for this MachineSet. A
                    machine is considered ready when the node has been created and
                    is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: Replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                selector:
                  description: 'Selector is the same as the label selector but in
                    the string format to avoid introspection by clients. The string
                    will be in the same format as the query-param syntax. More info
                    about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    labels:
      clusterctl.cluster.x-k8s.io/core: cert-manager
    name: orders.acme.cert-manager.io
  spec:
    conversion:
      strategy: None
    group: acme.cert-manager.io
    names:
      kind: Order
      listKind: OrderList
      plural: orders
      singular: order
    preserveUnknownFields: true
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.state
        name: State
        type: string
      - jsonPath: .spec.issuerRef.name
        name: Issuer
        priority: 1
        type: string
      - jsonPath: .status.reason
        name: Reason
        priority: 1
        type: string
      - description: CreationTimestamp is a timestamp representing the server time
          when this object was created. It is not guaranteed to be set in happens-before
          order across separate operations. Clients may not set this value. It is
          represented in RFC3339 form and is in UTC.
        jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: CommonName is the common name as specified on the DER
                    encoded CSR. If CommonName is not specified, the first DNSName
                    specified will be used as the CommonName. At least one of CommonName
                    or a DNSNames must be set. This field must match the corresponding
                    field on the DER encoded CSR.
                  type: string
                csr:
                  description: Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order. This field must be
                    set on the order.
                  format: byte
                  type: string
                dnsNames:
                  description: DNSNames is a list of DNS names that should be included
                    as part of the Order validation process. If CommonName is not
                    specified, the first DNSName specified will be used as the CommonName.
                    At least one of CommonName or a DNSNames must be set. This field
                    must match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: IssuerRef references a properly configured ACME-type
                    Issuer which should be used to create this Order. If the Issuer
                    does not exist, processing will be retried. If the Issuer is not
                    an 'ACME' Issuer, an error will be returned and the Order will
                    be marked as failed.
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
              required:
              - csr
              - issuerRef
              type: object
            status:
              properties:
                authorizations:
                  description: Authorizations contains data returned from the ACME
                    server on what authoriations must be completed in order to validate
                    the DNS names specified on the Order.
                  items:
                    description: ACMEAuthorization contains data returned from the
                      ACME server on an authorization that must be completed in order
                      validate a DNS name on an ACME Order resource.
                    properties:
                      challenges:
                        description: Challenges specifies the challenge types offered
                          by the ACME server. One of these challenge types will be
                          selected when validating the DNS name and an appropriate
                          Challenge resource will be created to perform the ACME challenge
                          process.
                        items:
                          description: Challenge specifies a challenge offered by
                            the ACME server for an Order. An appropriate Challenge
                            resource can be created to perform the ACME challenge
                            process.
                          properties:
                            token:
                              description: Token is the token that must be presented
                                for this challenge. This is used to compute the 'key'
                                that must also be presented.
                              type: string
                            type:
                              description: Type is the type of challenge being offered,
                                e.g. http-01, dns-01
                              type: string
                            url:
                              description: URL is the URL of this challenge. It can
                                be used to retrieve additional metadata about the
                                Challenge from the ACME server.
                              type: string
                          required:
                          - token
                          - type
                          - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as
                          part of this authorization
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must
                          be completed
                        type: string
                      wildcard:
                        description: Wildcard will be true if this authorization is
                          for a wildcard DNS name. If this is true, the identifier
                          will be the *non-wildcard* version of the DNS name. For
                          example, if '*.example.com' is the DNS name being validated,
                          this field will be 'true' and the 'identifier' field will
                          be 'example.com'.
                        type: boolean
                    required:
                    - url
                    type: object
                  type: array
                certificate:
                  description: Certificate is a copy of the PEM encoded certificate
                    for this Order. This field will be populated after the order has
                    been successfully finalized with the ACME server, and the order
                    has transitioned to the 'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: FinalizeURL of the Order. This is used to obtain certificates
                    for this order once it has been completed.
                  type: string
                reason:
                  description: Reason optionally provides more information about a
                    why the order is in the current state.
                  type: string
                state:
                  description: State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                  - valid
                  - ready
                  - pending
                  - processing
                  - invalid
                  - expired
                  - errored
                  type: string
                url:
                  description: URL of the Order. This will initially be empty when
                    the resource is first created. The Order controller will populate
                    this field when the Order is first processed. This field will
                    be immutable after it is initially set.
                  type: string
              type: object
          required:
          - metadata
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.9
    labels:
      clusterctl.cluster.x-k8s.io/core: inventory
    name: providers.clusterctl.cluster.x-k8s.io
  spec:
    conversion:
      strategy: None
    group: clusterctl.cluster.x-k8s.io
    names:
      categories:
      - cluster-api
      kind: Provider
      listKind: ProviderList
      plural: providers
      singular: provider
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .provider
        name: Type
        type: string
      - jsonPath: .type
        name: Provider
        type: string
      - jsonPath: .version
        name: Version
        type: string
      - jsonPath: .watchedNamespace
        name: Watch Namespace
        type: string
      name: v1alpha3
      schema:
        openAPIV3Schema:
          description: Provider defines an entry in the provider inventory.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            providerName:
              description: ProviderName indicates the name of the provider.
              type: string
            type:
              description: Type indicates the type of the provider. See ProviderType
                for a list of supported values
              type: string
            version:
              description: Version indicates the component version.
              type: string
            watchedNamespace:
              description: WatchedNamespace indicates the namespace where the provider
                controller is is watching. if empty the provider controller is watching
                for objects in all namespaces.
              type: string
          type: object
      served: true
      storage: true
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""

